{"version":3,"names":["Color","React","Animated","InteractionManager","Platform","StyleSheet","View","forModalPresentationIOS","CardAnimationContext","getDistanceForDirection","getInvertedMultiplier","memoize","GestureState","PanGestureHandler","ModalStatusBarManager","CardSheet","GESTURE_VELOCITY_IMPACT","TRUE","FALSE","GESTURE_RESPONSE_DISTANCE_HORIZONTAL","GESTURE_RESPONSE_DISTANCE_VERTICAL","useNativeDriver","OS","hasOpacityStyle","style","flattenedStyle","flatten","opacity","Card","Component","Value","props","gestureDirection","width","layout","height","closing","velocity","gesture","transitionSpec","onOpen","onClose","onTransition","toValue","getAnimateToValue","lastToValue","isClosing","setValue","spec","close","open","animation","spring","timing","setPointerEventsEnabled","handleStartInteraction","clearTimeout","pendingGestureCallback","undefined","config","isInteraction","start","finished","handleEndInteraction","isCurrentlyMounted","forceUpdate","enabled","pointerEvents","ref","current","setPointerEvents","interactionHandle","createInteractionHandle","clearInteractionHandle","nativeEvent","onGestureBegin","onGestureCanceled","onGestureEnd","gestureVelocityImpact","state","ACTIVE","isSwiping","CANCELLED","velocityY","velocityX","animate","END","distance","translation","translationY","translationX","setTimeout","styleInterpolator","interpolationIndex","next","insetTop","insetRight","insetBottom","insetLeft","index","progress","swiping","inverted","layouts","screen","insets","top","right","bottom","left","createRef","componentDidMount","componentDidUpdate","prevProps","componentWillUnmount","stopAnimation","gestureActivationCriteria","gestureResponseDistance","enableTrackpadTwoFingerGesture","maxDeltaX","minOffsetY","hitSlop","invertedMultiplier","minOffsetX","maxDeltaY","render","overlay","overlayEnabled","shadowEnabled","gestureEnabled","pageOverflowEnabled","headerDarkContent","children","containerStyle","customContainerStyle","contentStyle","rest","interpolationProps","getCardAnimation","interpolatedStyle","getInterpolatedStyle","cardStyle","overlayStyle","shadowStyle","handleGestureEvent","event","backgroundColor","isTransparent","alpha","getIsModalPresentation","absoluteFill","styles","container","handleGestureStateChange","shadow","shadowHorizontal","shadowLeft","shadowRight","shadowVertical","shadowTop","shadowBottom","cardStyleInterpolator","name","create","flex","position","shadowRadius","shadowColor","shadowOpacity","shadowOffset"],"sources":["Card.tsx"],"sourcesContent":["import Color from 'color';\nimport * as React from 'react';\nimport {\n  Animated,\n  InteractionManager,\n  Platform,\n  StyleProp,\n  StyleSheet,\n  View,\n  ViewProps,\n  ViewStyle,\n} from 'react-native';\nimport type { EdgeInsets } from 'react-native-safe-area-context';\n\nimport { forModalPresentationIOS } from '../../TransitionConfigs/CardStyleInterpolators';\nimport type {\n  GestureDirection,\n  Layout,\n  StackCardInterpolationProps,\n  StackCardStyleInterpolator,\n  TransitionSpec,\n} from '../../types';\nimport CardAnimationContext from '../../utils/CardAnimationContext';\nimport getDistanceForDirection from '../../utils/getDistanceForDirection';\nimport getInvertedMultiplier from '../../utils/getInvertedMultiplier';\nimport memoize from '../../utils/memoize';\nimport {\n  GestureState,\n  PanGestureHandler,\n  PanGestureHandlerGestureEvent,\n} from '../GestureHandler';\nimport ModalStatusBarManager from '../ModalStatusBarManager';\nimport CardSheet, { CardSheetRef } from './CardSheet';\n\ntype Props = ViewProps & {\n  interpolationIndex: number;\n  closing: boolean;\n  next?: Animated.AnimatedInterpolation;\n  current: Animated.AnimatedInterpolation;\n  gesture: Animated.Value;\n  layout: Layout;\n  insets: EdgeInsets;\n  headerDarkContent: boolean | undefined;\n  pageOverflowEnabled: boolean;\n  gestureDirection: GestureDirection;\n  onOpen: () => void;\n  onClose: () => void;\n  onTransition: (props: { closing: boolean; gesture: boolean }) => void;\n  onGestureBegin: () => void;\n  onGestureCanceled: () => void;\n  onGestureEnd: () => void;\n  children: React.ReactNode;\n  overlay: (props: {\n    style: Animated.WithAnimatedValue<StyleProp<ViewStyle>>;\n  }) => React.ReactNode;\n  overlayEnabled: boolean;\n  shadowEnabled: boolean;\n  gestureEnabled: boolean;\n  gestureResponseDistance?: number;\n  gestureVelocityImpact: number;\n  transitionSpec: {\n    open: TransitionSpec;\n    close: TransitionSpec;\n  };\n  styleInterpolator: StackCardStyleInterpolator;\n  containerStyle?: StyleProp<ViewStyle>;\n  contentStyle?: StyleProp<ViewStyle>;\n};\n\nconst GESTURE_VELOCITY_IMPACT = 0.3;\n\nconst TRUE = 1;\nconst FALSE = 0;\n\n/**\n * The distance of touch start from the edge of the screen where the gesture will be recognized\n */\nconst GESTURE_RESPONSE_DISTANCE_HORIZONTAL = 50;\nconst GESTURE_RESPONSE_DISTANCE_VERTICAL = 135;\n\nconst useNativeDriver = Platform.OS !== 'web';\n\nconst hasOpacityStyle = (style: any) => {\n  if (style) {\n    const flattenedStyle = StyleSheet.flatten(style);\n    return flattenedStyle.opacity != null;\n  }\n\n  return false;\n};\n\nexport default class Card extends React.Component<Props> {\n  static defaultProps = {\n    shadowEnabled: false,\n    gestureEnabled: true,\n    gestureVelocityImpact: GESTURE_VELOCITY_IMPACT,\n    overlay: ({\n      style,\n    }: {\n      style: Animated.WithAnimatedValue<StyleProp<ViewStyle>>;\n    }) =>\n      style ? (\n        <Animated.View pointerEvents=\"none\" style={[styles.overlay, style]} />\n      ) : null,\n  };\n\n  componentDidMount() {\n    this.animate({ closing: this.props.closing });\n    this.isCurrentlyMounted = true;\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    const { layout, gestureDirection, closing } = this.props;\n    const { width, height } = layout;\n\n    if (width !== prevProps.layout.width) {\n      this.layout.width.setValue(width);\n    }\n\n    if (height !== prevProps.layout.height) {\n      this.layout.height.setValue(height);\n    }\n\n    if (gestureDirection !== prevProps.gestureDirection) {\n      this.inverted.setValue(getInvertedMultiplier(gestureDirection));\n    }\n\n    const toValue = this.getAnimateToValue(this.props);\n\n    if (\n      this.getAnimateToValue(prevProps) !== toValue ||\n      this.lastToValue !== toValue\n    ) {\n      // We need to trigger the animation when route was closed\n      // Thr route might have been closed by a `POP` action or by a gesture\n      // When route was closed due to a gesture, the animation would've happened already\n      // It's still important to trigger the animation so that `onClose` is called\n      // If `onClose` is not called, cleanup step won't be performed for gestures\n      this.animate({ closing });\n    }\n  }\n\n  componentWillUnmount() {\n    this.props.gesture.stopAnimation();\n    this.isCurrentlyMounted = false;\n    this.handleEndInteraction();\n  }\n\n  private isCurrentlyMounted = false;\n\n  private isClosing = new Animated.Value(FALSE);\n\n  private inverted = new Animated.Value(\n    getInvertedMultiplier(this.props.gestureDirection)\n  );\n\n  private layout = {\n    width: new Animated.Value(this.props.layout.width),\n    height: new Animated.Value(this.props.layout.height),\n  };\n\n  private isSwiping = new Animated.Value(FALSE);\n\n  private interactionHandle: number | undefined;\n\n  private pendingGestureCallback: number | undefined;\n\n  private lastToValue: number | undefined;\n\n  private animate = ({\n    closing,\n    velocity,\n  }: {\n    closing: boolean;\n    velocity?: number;\n  }) => {\n    const { gesture, transitionSpec, onOpen, onClose, onTransition } =\n      this.props;\n\n    const toValue = this.getAnimateToValue({\n      ...this.props,\n      closing,\n    });\n\n    this.lastToValue = toValue;\n\n    this.isClosing.setValue(closing ? TRUE : FALSE);\n\n    const spec = closing ? transitionSpec.close : transitionSpec.open;\n\n    const animation =\n      spec.animation === 'spring' ? Animated.spring : Animated.timing;\n\n    this.setPointerEventsEnabled(!closing);\n    this.handleStartInteraction();\n\n    clearTimeout(this.pendingGestureCallback);\n\n    onTransition?.({ closing, gesture: velocity !== undefined });\n    animation(gesture, {\n      ...spec.config,\n      velocity,\n      toValue,\n      useNativeDriver,\n      isInteraction: false,\n    }).start(({ finished }) => {\n      this.handleEndInteraction();\n\n      clearTimeout(this.pendingGestureCallback);\n\n      if (finished) {\n        if (closing) {\n          onClose();\n        } else {\n          onOpen();\n        }\n\n        if (this.isCurrentlyMounted) {\n          // Make sure to re-open screen if it wasn't removed\n          this.forceUpdate();\n        }\n      }\n    });\n  };\n\n  private getAnimateToValue = ({\n    closing,\n    layout,\n    gestureDirection,\n  }: {\n    closing?: boolean;\n    layout: Layout;\n    gestureDirection: GestureDirection;\n  }) => {\n    if (!closing) {\n      return 0;\n    }\n\n    return getDistanceForDirection(layout, gestureDirection);\n  };\n\n  private setPointerEventsEnabled = (enabled: boolean) => {\n    const pointerEvents = enabled ? 'box-none' : 'none';\n\n    this.ref.current?.setPointerEvents(pointerEvents);\n  };\n\n  private handleStartInteraction = () => {\n    if (this.interactionHandle === undefined) {\n      this.interactionHandle = InteractionManager.createInteractionHandle();\n    }\n  };\n\n  private handleEndInteraction = () => {\n    if (this.interactionHandle !== undefined) {\n      InteractionManager.clearInteractionHandle(this.interactionHandle);\n      this.interactionHandle = undefined;\n    }\n  };\n\n  private handleGestureStateChange = ({\n    nativeEvent,\n  }: PanGestureHandlerGestureEvent) => {\n    const {\n      layout,\n      onClose,\n      onGestureBegin,\n      onGestureCanceled,\n      onGestureEnd,\n      gestureDirection,\n      gestureVelocityImpact,\n    } = this.props;\n\n    switch (nativeEvent.state) {\n      case GestureState.ACTIVE:\n        this.isSwiping.setValue(TRUE);\n        this.handleStartInteraction();\n        onGestureBegin?.();\n        break;\n      case GestureState.CANCELLED: {\n        this.isSwiping.setValue(FALSE);\n        this.handleEndInteraction();\n\n        const velocity =\n          gestureDirection === 'vertical' ||\n          gestureDirection === 'vertical-inverted'\n            ? nativeEvent.velocityY\n            : nativeEvent.velocityX;\n\n        this.animate({ closing: this.props.closing, velocity });\n\n        onGestureCanceled?.();\n        break;\n      }\n      case GestureState.END: {\n        this.isSwiping.setValue(FALSE);\n\n        let distance;\n        let translation;\n        let velocity;\n\n        if (\n          gestureDirection === 'vertical' ||\n          gestureDirection === 'vertical-inverted'\n        ) {\n          distance = layout.height;\n          translation = nativeEvent.translationY;\n          velocity = nativeEvent.velocityY;\n        } else {\n          distance = layout.width;\n          translation = nativeEvent.translationX;\n          velocity = nativeEvent.velocityX;\n        }\n\n        const closing =\n          (translation + velocity * gestureVelocityImpact) *\n            getInvertedMultiplier(gestureDirection) >\n          distance / 2\n            ? velocity !== 0 || translation !== 0\n            : this.props.closing;\n\n        this.animate({ closing, velocity });\n\n        if (closing) {\n          // We call onClose with a delay to make sure that the animation has already started\n          // This will make sure that the state update caused by this doesn't affect start of animation\n          this.pendingGestureCallback = setTimeout(() => {\n            onClose();\n\n            // Trigger an update after we dispatch the action to remove the screen\n            // This will make sure that we check if the screen didn't get removed so we can cancel the animation\n            this.forceUpdate();\n          }, 32) as any as number;\n        }\n\n        onGestureEnd?.();\n        break;\n      }\n    }\n  };\n\n  // Memoize this to avoid extra work on re-render\n  private getInterpolatedStyle = memoize(\n    (\n      styleInterpolator: StackCardStyleInterpolator,\n      animation: StackCardInterpolationProps\n    ) => styleInterpolator(animation)\n  );\n\n  // Keep track of the animation context when deps changes.\n  private getCardAnimation = memoize(\n    (\n      interpolationIndex: number,\n      current: Animated.AnimatedInterpolation,\n      next: Animated.AnimatedInterpolation | undefined,\n      layout: Layout,\n      insetTop: number,\n      insetRight: number,\n      insetBottom: number,\n      insetLeft: number\n    ) => ({\n      index: interpolationIndex,\n      current: { progress: current },\n      next: next && { progress: next },\n      closing: this.isClosing,\n      swiping: this.isSwiping,\n      inverted: this.inverted,\n      layouts: {\n        screen: layout,\n      },\n      insets: {\n        top: insetTop,\n        right: insetRight,\n        bottom: insetBottom,\n        left: insetLeft,\n      },\n    })\n  );\n\n  private gestureActivationCriteria() {\n    const { layout, gestureDirection, gestureResponseDistance } = this.props;\n    const enableTrackpadTwoFingerGesture = true;\n\n    const distance =\n      gestureResponseDistance !== undefined\n        ? gestureResponseDistance\n        : gestureDirection === 'vertical' ||\n          gestureDirection === 'vertical-inverted'\n        ? GESTURE_RESPONSE_DISTANCE_VERTICAL\n        : GESTURE_RESPONSE_DISTANCE_HORIZONTAL;\n\n    if (gestureDirection === 'vertical') {\n      return {\n        maxDeltaX: 15,\n        minOffsetY: 5,\n        hitSlop: { bottom: -layout.height + distance },\n        enableTrackpadTwoFingerGesture,\n      };\n    } else if (gestureDirection === 'vertical-inverted') {\n      return {\n        maxDeltaX: 15,\n        minOffsetY: -5,\n        hitSlop: { top: -layout.height + distance },\n        enableTrackpadTwoFingerGesture,\n      };\n    } else {\n      const hitSlop = -layout.width + distance;\n      const invertedMultiplier = getInvertedMultiplier(gestureDirection);\n\n      if (invertedMultiplier === 1) {\n        return {\n          minOffsetX: 5,\n          maxDeltaY: 20,\n          hitSlop: { right: hitSlop },\n          enableTrackpadTwoFingerGesture,\n        };\n      } else {\n        return {\n          minOffsetX: -5,\n          maxDeltaY: 20,\n          hitSlop: { left: hitSlop },\n          enableTrackpadTwoFingerGesture,\n        };\n      }\n    }\n  }\n\n  private ref = React.createRef<CardSheetRef>();\n\n  render() {\n    const {\n      styleInterpolator,\n      interpolationIndex,\n      current,\n      gesture,\n      next,\n      layout,\n      insets,\n      overlay,\n      overlayEnabled,\n      shadowEnabled,\n      gestureEnabled,\n      gestureDirection,\n      pageOverflowEnabled,\n      headerDarkContent,\n      children,\n      containerStyle: customContainerStyle,\n      contentStyle,\n      ...rest\n    } = this.props;\n\n    const interpolationProps = this.getCardAnimation(\n      interpolationIndex,\n      current,\n      next,\n      layout,\n      insets.top,\n      insets.right,\n      insets.bottom,\n      insets.left\n    );\n\n    const interpolatedStyle = this.getInterpolatedStyle(\n      styleInterpolator,\n      interpolationProps\n    );\n\n    const { containerStyle, cardStyle, overlayStyle, shadowStyle } =\n      interpolatedStyle;\n\n    const handleGestureEvent = gestureEnabled\n      ? Animated.event(\n          [\n            {\n              nativeEvent:\n                gestureDirection === 'vertical' ||\n                gestureDirection === 'vertical-inverted'\n                  ? { translationY: gesture }\n                  : { translationX: gesture },\n            },\n          ],\n          { useNativeDriver }\n        )\n      : undefined;\n\n    const { backgroundColor } = StyleSheet.flatten(contentStyle || {});\n    const isTransparent =\n      typeof backgroundColor === 'string'\n        ? Color(backgroundColor).alpha() === 0\n        : false;\n\n    return (\n      <CardAnimationContext.Provider value={interpolationProps}>\n        {\n          // StatusBar messes with translucent status bar on Android\n          // So we should only enable it on iOS\n          Platform.OS === 'ios' &&\n          overlayEnabled &&\n          next &&\n          getIsModalPresentation(styleInterpolator) ? (\n            <ModalStatusBarManager\n              dark={headerDarkContent}\n              layout={layout}\n              insets={insets}\n              style={cardStyle}\n            />\n          ) : null\n        }\n        <Animated.View\n          style={{\n            // This is a dummy style that doesn't actually change anything visually.\n            // Animated needs the animated value to be used somewhere, otherwise things don't update properly.\n            // If we disable animations and hide header, it could end up making the value unused.\n            // So we have this dummy style that will always be used regardless of what else changed.\n            opacity: current,\n          }}\n          // Make sure that this view isn't removed. If this view is removed, our style with animated value won't apply\n          collapsable={false}\n        />\n        <View pointerEvents=\"box-none\" {...rest}>\n          {overlayEnabled ? (\n            <View pointerEvents=\"box-none\" style={StyleSheet.absoluteFill}>\n              {overlay({ style: overlayStyle })}\n            </View>\n          ) : null}\n          <Animated.View\n            style={[styles.container, containerStyle, customContainerStyle]}\n            pointerEvents=\"box-none\"\n          >\n            <PanGestureHandler\n              enabled={layout.width !== 0 && gestureEnabled}\n              onGestureEvent={handleGestureEvent}\n              onHandlerStateChange={this.handleGestureStateChange}\n              {...this.gestureActivationCriteria()}\n            >\n              <Animated.View\n                needsOffscreenAlphaCompositing={hasOpacityStyle(cardStyle)}\n                style={[styles.container, cardStyle]}\n              >\n                {shadowEnabled && shadowStyle && !isTransparent ? (\n                  <Animated.View\n                    style={[\n                      styles.shadow,\n                      gestureDirection === 'horizontal'\n                        ? [styles.shadowHorizontal, styles.shadowLeft]\n                        : gestureDirection === 'horizontal-inverted'\n                        ? [styles.shadowHorizontal, styles.shadowRight]\n                        : gestureDirection === 'vertical'\n                        ? [styles.shadowVertical, styles.shadowTop]\n                        : [styles.shadowVertical, styles.shadowBottom],\n                      { backgroundColor },\n                      shadowStyle,\n                    ]}\n                    pointerEvents=\"none\"\n                  />\n                ) : null}\n                <CardSheet\n                  ref={this.ref}\n                  enabled={pageOverflowEnabled}\n                  layout={layout}\n                  style={contentStyle}\n                >\n                  {children}\n                </CardSheet>\n              </Animated.View>\n            </PanGestureHandler>\n          </Animated.View>\n        </View>\n      </CardAnimationContext.Provider>\n    );\n  }\n}\n\nexport const getIsModalPresentation = (\n  cardStyleInterpolator: StackCardStyleInterpolator\n) => {\n  return (\n    cardStyleInterpolator === forModalPresentationIOS ||\n    // Handle custom modal presentation interpolators as well\n    cardStyleInterpolator.name === 'forModalPresentationIOS'\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n  overlay: {\n    flex: 1,\n    backgroundColor: '#000',\n  },\n  shadow: {\n    position: 'absolute',\n    shadowRadius: 5,\n    shadowColor: '#000',\n    shadowOpacity: 0.3,\n  },\n  shadowHorizontal: {\n    top: 0,\n    bottom: 0,\n    width: 3,\n    shadowOffset: { width: -1, height: 1 },\n  },\n  shadowLeft: {\n    left: 0,\n  },\n  shadowRight: {\n    right: 0,\n  },\n  shadowVertical: {\n    left: 0,\n    right: 0,\n    height: 3,\n    shadowOffset: { width: 1, height: -1 },\n  },\n  shadowTop: {\n    top: 0,\n  },\n  shadowBottom: {\n    bottom: 0,\n  },\n});\n"],"mappings":"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"}
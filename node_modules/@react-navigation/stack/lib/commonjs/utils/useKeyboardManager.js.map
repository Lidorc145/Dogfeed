{"version":3,"names":["useKeyboardManager","isEnabled","previouslyFocusedTextInputRef","React","useRef","undefined","startTimestampRef","keyboardTimeoutRef","clearKeyboardTimeout","useCallback","current","clearTimeout","onPageChangeStart","input","TextInput","State","currentlyFocusedInput","blur","Date","now","onPageChangeConfirm","force","Keyboard","dismiss","onPageChangeCancel","setTimeout","focus","useEffect"],"sources":["useKeyboardManager.tsx"],"sourcesContent":["import * as React from 'react';\nimport { HostComponent, Keyboard, TextInput } from 'react-native';\n\ntype InputRef = React.ElementRef<HostComponent<unknown>> | undefined;\n\nexport default function useKeyboardManager(isEnabled: () => boolean) {\n  // Numeric id of the previously focused text input\n  // When a gesture didn't change the tab, we can restore the focused input with this\n  const previouslyFocusedTextInputRef = React.useRef<InputRef>(undefined);\n  const startTimestampRef = React.useRef<number>(0);\n  const keyboardTimeoutRef = React.useRef<any>();\n\n  const clearKeyboardTimeout = React.useCallback(() => {\n    if (keyboardTimeoutRef.current !== undefined) {\n      clearTimeout(keyboardTimeoutRef.current);\n      keyboardTimeoutRef.current = undefined;\n    }\n  }, []);\n\n  const onPageChangeStart = React.useCallback(() => {\n    if (!isEnabled()) {\n      return;\n    }\n\n    clearKeyboardTimeout();\n\n    const input: InputRef = TextInput.State.currentlyFocusedInput();\n\n    // When a page change begins, blur the currently focused input\n    input?.blur();\n\n    // Store the id of this input so we can refocus it if change was cancelled\n    previouslyFocusedTextInputRef.current = input;\n\n    // Store timestamp for touch start\n    startTimestampRef.current = Date.now();\n  }, [clearKeyboardTimeout, isEnabled]);\n\n  const onPageChangeConfirm = React.useCallback(\n    (force: boolean) => {\n      if (!isEnabled()) {\n        return;\n      }\n\n      clearKeyboardTimeout();\n\n      if (force) {\n        // Always dismiss input, even if we don't have a ref to it\n        // We might not have the ref if onPageChangeStart was never called\n        // This can happen if page change was not from a gesture\n        Keyboard.dismiss();\n      } else {\n        const input = previouslyFocusedTextInputRef.current;\n\n        // Dismiss the keyboard only if an input was a focused before\n        // This makes sure we don't dismiss input on going back and focusing an input\n        input?.blur();\n      }\n\n      // Cleanup the ID on successful page change\n      previouslyFocusedTextInputRef.current = undefined;\n    },\n    [clearKeyboardTimeout, isEnabled]\n  );\n\n  const onPageChangeCancel = React.useCallback(() => {\n    if (!isEnabled()) {\n      return;\n    }\n\n    clearKeyboardTimeout();\n\n    // The page didn't change, we should restore the focus of text input\n    const input = previouslyFocusedTextInputRef.current;\n\n    if (input) {\n      // If the interaction was super short we should make sure keyboard won't hide again.\n\n      // Too fast input refocus will result only in keyboard flashing on screen and hiding right away.\n      // During first ~100ms keyboard will be dismissed no matter what,\n      // so we have to make sure it won't interrupt input refocus logic.\n      // That's why when the interaction is shorter than 100ms we add delay so it won't hide once again.\n      // Subtracting timestamps makes us sure the delay is executed only when needed.\n      if (Date.now() - startTimestampRef.current < 100) {\n        keyboardTimeoutRef.current = setTimeout(() => {\n          input?.focus();\n          previouslyFocusedTextInputRef.current = undefined;\n        }, 100);\n      } else {\n        input?.focus();\n        previouslyFocusedTextInputRef.current = undefined;\n      }\n    }\n  }, [clearKeyboardTimeout, isEnabled]);\n\n  React.useEffect(() => {\n    return () => clearKeyboardTimeout();\n  }, [clearKeyboardTimeout]);\n\n  return {\n    onPageChangeStart,\n    onPageChangeConfirm,\n    onPageChangeCancel,\n  };\n}\n"],"mappings":"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"}
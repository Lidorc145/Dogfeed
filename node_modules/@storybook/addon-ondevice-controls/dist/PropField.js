import { View, Text, StyleSheet } from 'react-native';
import React from 'react';
import styled from '@emotion/native';
import TypeMap from './types';
const InvalidType = ({ arg }) => (React.createElement(Text, { style: styles.invalidType },
    "Invalid Type ",
    arg.type));
const Label = styled.Text(({ theme }) => ({
    marginLeft: 10,
    fontSize: 14,
    color: theme.labelColor || 'black',
    fontWeight: 'bold',
}));
const PropField = ({ onChange, arg, isPristine }) => {
    const InputType = TypeMap[arg.type];
    return (React.createElement(View, null,
        !arg.hideLabel ? React.createElement(Label, null, `${arg.label || arg.name}`) : null,
        InputType ? (React.createElement(InputType, { arg: arg, isPristine: isPristine, onChange: onChange })) : (React.createElement(InvalidType, { arg: arg }))));
};
const styles = StyleSheet.create({
    invalidType: { margin: 10 },
});
export default PropField;

// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`loader writeRequires when there are different file extensions writes the story imports 1`] = `
"
      /* do not change this file, it is auto generated by storybook. */

      import { configure, addDecorator, addParameters, addArgsEnhancer, clearDecorators } from '@storybook/react-native';

      import \\"@storybook/addon-ondevice-notes/register\\";
import \\"@storybook/addon-ondevice-controls/register\\";
import \\"@storybook/addon-ondevice-backgrounds/register\\";
import \\"@storybook/addon-ondevice-actions/register\\";

      import { argsEnhancers } from \\"@storybook/addon-actions/dist/modern/preset/addArgs\\"

      
  import { decorators, parameters } from './preview';

  if (decorators) {
    if(__DEV__){
      // stops the warning from showing on every HMR 
      require('react-native').LogBox.ignoreLogs([
        '\`clearDecorators\` is deprecated and will be removed in Storybook 7.0',
      ]);
    }
    // workaround for global decorators getting infinitely applied on HMR, see https://github.com/storybookjs/react-native/issues/185
    clearDecorators();
    decorators.forEach((decorator) => addDecorator(decorator));
  }

  if (parameters) {
    addParameters(parameters);
  }


      
      try {
        argsEnhancers.forEach(enhancer => addArgsEnhancer(enhancer));
      } catch{}
    

      const getStories=() => {
        return [require(\\"./FakeStory.stories.tsx\\")];
      }

      configure(getStories, module, false)
  "
`;

exports[`loader writeRequires when there is a story glob and exclude paths globs writes the story imports 1`] = `
"
      /* do not change this file, it is auto generated by storybook. */

      import { configure, addDecorator, addParameters, addArgsEnhancer, clearDecorators } from '@storybook/react-native';

      import \\"@storybook/addon-ondevice-notes/register\\";
import \\"@storybook/addon-ondevice-controls/register\\";
import \\"@storybook/addon-ondevice-backgrounds/register\\";
import \\"@storybook/addon-ondevice-actions/register\\";

      import { argsEnhancers } from \\"@storybook/addon-actions/dist/modern/preset/addArgs\\"

      
  import { decorators, parameters } from './preview';

  if (decorators) {
    if(__DEV__){
      // stops the warning from showing on every HMR 
      require('react-native').LogBox.ignoreLogs([
        '\`clearDecorators\` is deprecated and will be removed in Storybook 7.0',
      ]);
    }
    // workaround for global decorators getting infinitely applied on HMR, see https://github.com/storybookjs/react-native/issues/185
    clearDecorators();
    decorators.forEach((decorator) => addDecorator(decorator));
  }

  if (parameters) {
    addParameters(parameters);
  }


      
      try {
        argsEnhancers.forEach(enhancer => addArgsEnhancer(enhancer));
      } catch{}
    

      const getStories=() => {
        return [require(\\"include-components/FakeStory.stories.tsx\\")];
      }

      configure(getStories, module, false)
  "
`;

exports[`loader writeRequires when there is a story glob writes the story imports 1`] = `
"
      /* do not change this file, it is auto generated by storybook. */

      import { configure, addDecorator, addParameters, addArgsEnhancer, clearDecorators } from '@storybook/react-native';

      import \\"@storybook/addon-ondevice-notes/register\\";
import \\"@storybook/addon-ondevice-controls/register\\";
import \\"@storybook/addon-ondevice-backgrounds/register\\";
import \\"@storybook/addon-ondevice-actions/register\\";

      import { argsEnhancers } from \\"@storybook/addon-actions/dist/modern/preset/addArgs\\"

      
  import { decorators, parameters } from './preview';

  if (decorators) {
    if(__DEV__){
      // stops the warning from showing on every HMR 
      require('react-native').LogBox.ignoreLogs([
        '\`clearDecorators\` is deprecated and will be removed in Storybook 7.0',
      ]);
    }
    // workaround for global decorators getting infinitely applied on HMR, see https://github.com/storybookjs/react-native/issues/185
    clearDecorators();
    decorators.forEach((decorator) => addDecorator(decorator));
  }

  if (parameters) {
    addParameters(parameters);
  }


      
      try {
        argsEnhancers.forEach(enhancer => addArgsEnhancer(enhancer));
      } catch{}
    

      const getStories=() => {
        return [require(\\"./FakeStory.stories.tsx\\")];
      }

      configure(getStories, module, false)
  "
`;

exports[`loader writeRequires when there is no preview does not add preview related stuff 1`] = `
"
      /* do not change this file, it is auto generated by storybook. */

      import { configure, addDecorator, addParameters, addArgsEnhancer, clearDecorators } from '@storybook/react-native';

      import \\"@storybook/addon-ondevice-notes/register\\";
import \\"@storybook/addon-ondevice-controls/register\\";
import \\"@storybook/addon-ondevice-backgrounds/register\\";
import \\"@storybook/addon-ondevice-actions/register\\";

      import { argsEnhancers } from \\"@storybook/addon-actions/dist/modern/preset/addArgs\\"

      

      
      try {
        argsEnhancers.forEach(enhancer => addArgsEnhancer(enhancer));
      } catch{}
    

      const getStories=() => {
        return [require(\\"./FakeStory.stories.tsx\\")];
      }

      configure(getStories, module, false)
  "
`;

exports[`loader writeRequires when there is no story glob or addons writes no story imports or addons 1`] = `
"
      /* do not change this file, it is auto generated by storybook. */

      import { configure, addDecorator, addParameters, addArgsEnhancer, clearDecorators } from '@storybook/react-native';

      

      

      

      

      const getStories=() => {
        return [];
      }

      configure(getStories, module, false)
  "
`;

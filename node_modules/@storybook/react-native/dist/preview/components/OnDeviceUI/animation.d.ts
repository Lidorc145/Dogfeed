import { Animated } from 'react-native';
import { EdgeInsets } from 'react-native-safe-area-context';
import { PreviewDimens } from './absolute-positioned-keyboard-aware-view';
export declare const getNavigatorPanelPosition: (animatedValue: Animated.Value, previewWidth: number, wide: boolean) => {
    transform: {
        translateX: Animated.AnimatedInterpolation<string | number>;
    }[];
    width: number;
}[];
export declare const getAddonPanelPosition: (animatedValue: Animated.Value, previewWidth: number, wide: boolean) => {
    transform: {
        translateX: Animated.AnimatedInterpolation<string | number>;
    }[];
    width: number;
}[];
declare type PreviewPositionArgs = {
    animatedValue: Animated.Value;
    previewDimensions: PreviewDimens;
    slideBetweenAnimation: boolean;
    wide: boolean;
    noSafeArea: boolean;
    insets: EdgeInsets;
};
export declare const getPreviewPosition: ({ animatedValue, previewDimensions: { width: previewWidth, height: previewHeight }, slideBetweenAnimation, wide, noSafeArea, insets, }: PreviewPositionArgs) => {
    transform: ({
        translateX: Animated.AnimatedInterpolation<string | number>;
        translateY?: undefined;
    } | {
        translateY: Animated.AnimatedInterpolation<string | number>;
        translateX?: undefined;
    })[];
};
export declare const getPreviewScale: (animatedValue: Animated.Value, slideBetweenAnimation: boolean, wide: boolean) => {
    transform: {
        scale: Animated.AnimatedInterpolation<string | number>;
    }[];
};
export {};

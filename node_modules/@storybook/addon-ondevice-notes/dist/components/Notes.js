import React, { useState, useEffect } from 'react';
import { StyleSheet, View } from 'react-native';
import Markdown from './Markdown/Markdown';
import { addons } from '@storybook/addons';
import { SET_CURRENT_STORY } from '@storybook/core-events';
export const PARAM_KEY = 'notes';
export const Notes = ({ active, api }) => {
    const [story, setStory] = useState();
    useEffect(() => {
        if (active) {
            const selection = api.store().getSelection();
            setStory(api.store().fromId(selection.storyId));
        }
        addons.getChannel().on(SET_CURRENT_STORY, () => {
            const selection = api.store().getSelection();
            setStory(api.store().fromId(selection.storyId));
        });
    }, [api, active]);
    if (!active || !story) {
        return null;
    }
    const text = story.parameters[PARAM_KEY];
    const textAfterFormatted = text ? text.trim() : '';
    return (React.createElement(View, { style: styles.container },
        React.createElement(Markdown, null, textAfterFormatted)));
};
const styles = StyleSheet.create({
    container: { padding: 10, flex: 1 },
});

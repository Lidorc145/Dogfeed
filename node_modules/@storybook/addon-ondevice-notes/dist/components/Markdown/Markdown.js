/**
 * mostly based on code from https://github.com/CharlesMangwa/react-native-simple-markdown
 */
import React from 'react';
import { View } from 'react-native';
import SimpleMarkdown from 'simple-markdown';
// @ts-ignore
import initialRules from './rules';
import initialStyles from './styles';
const Markdown = ({ children = '', errorHandler, styles = initialStyles }) => {
    const _renderContent = () => {
        try {
            const mergedStyles = Object.assign(Object.assign({}, initialStyles), styles);
            const rules = initialRules(mergedStyles);
            // @TODO: Add another \n?
            const blockSource = `${children}\n\n`;
            const tree = SimpleMarkdown.parserFor(rules)(blockSource, {
                inline: false,
            });
            return SimpleMarkdown.outputFor(rules, 'react')(tree);
        }
        catch (errors) {
            errorHandler ? errorHandler(errors, children) : console.error(errors);
        }
        return null;
    };
    return React.createElement(View, { style: [styles.view] }, _renderContent());
};
export default React.memo(Markdown);

{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"title\", \"toExit\", \"message\", \"icon\", \"type\"];\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport React from 'react';\nimport { Alert, HStack, VStack, Text, IconButton, CloseIcon, Icon } from 'native-base';\nimport { MaterialIcons } from '@expo/vector-icons';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport var AlertToast = function AlertToast(_ref) {\n  var title = _ref.title,\n    toExit = _ref.toExit,\n    message = _ref.message,\n    icon = _ref.icon,\n    type = _ref.type,\n    alertParams = _objectWithoutProperties(_ref, _excluded);\n  var icons = {\n    danger: 'error-outline',\n    warning: 'warning',\n    success: 'check-circle-outline',\n    primary: 'account-circle'\n  };\n  return _jsx(Alert, _objectSpread(_objectSpread({\n    flex: 1,\n    px: 5,\n    colorScheme: type,\n    variant: \"solid\"\n  }, alertParams), {}, {\n    children: _jsxs(VStack, {\n      space: 2,\n      flexShrink: 1,\n      w: \"100%\",\n      px: 3,\n      children: [_jsxs(HStack, {\n        space: 2,\n        justifyContent: \"space-between\",\n        children: [_jsxs(HStack, {\n          space: 2,\n          flexShrink: 1,\n          alignItems: \"center\",\n          children: [type && !icon ? _jsx(Icon, {\n            as: MaterialIcons,\n            name: icons[type],\n            color: \"white\",\n            size: 18\n          }) : null, icon, _jsx(Text, {\n            fontSize: \"md\",\n            fontWeight: \"medium\",\n            color: \"white\",\n            children: title\n          })]\n        }), toExit ? _jsx(IconButton, {\n          alignSelf: \"flex-end\",\n          variant: \"unstyled\",\n          icon: _jsx(CloseIcon, {\n            size: \"3\",\n            color: \"white\"\n          }),\n          onPress: toExit\n        }) : null]\n      }), message ? _jsx(Text, {\n        pl: \"6\",\n        color: \"white\",\n        children: message\n      }) : null]\n    })\n  }));\n};\nAlertToast.defaultProps = {\n  toExit: undefined,\n  message: undefined,\n  type: 'success',\n  icon: undefined\n};","map":{"version":3,"names":["React","Alert","HStack","VStack","Text","IconButton","CloseIcon","Icon","MaterialIcons","AlertToast","title","toExit","message","icon","type","alertParams","icons","danger","warning","success","primary","defaultProps","undefined"],"sources":["C:/Users/LidorCohen/Desktop/Dogfeel/src/components/alert-toast/index.tsx"],"sourcesContent":["import React from 'react';\nimport { Alert, HStack, VStack, Text, IconButton, CloseIcon, IAlertProps, Icon } from 'native-base';\nimport { MaterialIcons } from '@expo/vector-icons';\n\n/*\n    in future have different types including\n        success\n        warning\n        error\n        welcome\n*/\n\nexport interface AlertToastParams extends IAlertProps {\n    title: string;\n    toExit?: () => void | undefined; // function to close the toast\n    message?: string | undefined;\n    type?: 'danger' | 'warning' | 'success' | 'primary' | undefined;\n    icon?: React.ReactNode | undefined;\n}\n\nexport const AlertToast: React.FC<AlertToastParams> = ({\n    title,\n    toExit,\n    message,\n    icon,\n    type,\n    ...alertParams\n}) => {\n    // icons\n    const icons = {\n        danger: 'error-outline',\n        warning: 'warning',\n        success: 'check-circle-outline',\n        primary: 'account-circle',\n    };\n\n    return (\n        <Alert flex={1} px={5} colorScheme={type} variant=\"solid\" {...alertParams}>\n            <VStack space={2} flexShrink={1} w=\"100%\" px={3}>\n                <HStack space={2} justifyContent=\"space-between\">\n                    <HStack space={2} flexShrink={1} alignItems=\"center\">\n                        {type && !icon ? (\n                            <Icon as={MaterialIcons} name={icons[type]} color=\"white\" size={18} />\n                        ) : null}\n                        {icon}\n                        <Text fontSize=\"md\" fontWeight=\"medium\" color=\"white\">\n                            {title}\n                        </Text>\n                    </HStack>\n                    {toExit ? (\n                        <IconButton\n                            alignSelf=\"flex-end\"\n                            variant=\"unstyled\"\n                            icon={<CloseIcon size=\"3\" color=\"white\" />}\n                            onPress={toExit}\n                        />\n                    ) : null}\n                </HStack>\n                {message ? (\n                    <Text pl=\"6\" color=\"white\">\n                        {message}\n                    </Text>\n                ) : null}\n            </VStack>\n        </Alert>\n    );\n};\n\nAlertToast.defaultProps = {\n    toExit: undefined,\n    message: undefined,\n    type: 'success',\n    icon: undefined,\n};\n"],"mappings":";;;;;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,KAAK,EAAEC,MAAM,EAAEC,MAAM,EAAEC,IAAI,EAAEC,UAAU,EAAEC,SAAS,EAAeC,IAAI,QAAQ,aAAa;AACnG,SAASC,aAAa,QAAQ,oBAAoB;AAAC;AAAA;AAkBnD,OAAO,IAAMC,UAAsC,GAAG,SAAzCA,UAAsC,OAO7C;EAAA,IANFC,KAAK,QAALA,KAAK;IACLC,MAAM,QAANA,MAAM;IACNC,OAAO,QAAPA,OAAO;IACPC,IAAI,QAAJA,IAAI;IACJC,IAAI,QAAJA,IAAI;IACDC,WAAW;EAGd,IAAMC,KAAK,GAAG;IACVC,MAAM,EAAE,eAAe;IACvBC,OAAO,EAAE,SAAS;IAClBC,OAAO,EAAE,sBAAsB;IAC/BC,OAAO,EAAE;EACb,CAAC;EAED,OACI,KAAC,KAAK;IAAC,IAAI,EAAE,CAAE;IAAC,EAAE,EAAE,CAAE;IAAC,WAAW,EAAEN,IAAK;IAAC,OAAO,EAAC;EAAO,GAAKC,WAAW;IAAA,UACrE,MAAC,MAAM;MAAC,KAAK,EAAE,CAAE;MAAC,UAAU,EAAE,CAAE;MAAC,CAAC,EAAC,MAAM;MAAC,EAAE,EAAE,CAAE;MAAA,WAC5C,MAAC,MAAM;QAAC,KAAK,EAAE,CAAE;QAAC,cAAc,EAAC,eAAe;QAAA,WAC5C,MAAC,MAAM;UAAC,KAAK,EAAE,CAAE;UAAC,UAAU,EAAE,CAAE;UAAC,UAAU,EAAC,QAAQ;UAAA,WAC/CD,IAAI,IAAI,CAACD,IAAI,GACV,KAAC,IAAI;YAAC,EAAE,EAAEL,aAAc;YAAC,IAAI,EAAEQ,KAAK,CAACF,IAAI,CAAE;YAAC,KAAK,EAAC,OAAO;YAAC,IAAI,EAAE;UAAG,EAAG,GACtE,IAAI,EACPD,IAAI,EACL,KAAC,IAAI;YAAC,QAAQ,EAAC,IAAI;YAAC,UAAU,EAAC,QAAQ;YAAC,KAAK,EAAC,OAAO;YAAA,UAChDH;UAAK,EACH;QAAA,EACF,EACRC,MAAM,GACH,KAAC,UAAU;UACP,SAAS,EAAC,UAAU;UACpB,OAAO,EAAC,UAAU;UAClB,IAAI,EAAE,KAAC,SAAS;YAAC,IAAI,EAAC,GAAG;YAAC,KAAK,EAAC;UAAO,EAAI;UAC3C,OAAO,EAAEA;QAAO,EAClB,GACF,IAAI;MAAA,EACH,EACRC,OAAO,GACJ,KAAC,IAAI;QAAC,EAAE,EAAC,GAAG;QAAC,KAAK,EAAC,OAAO;QAAA,UACrBA;MAAO,EACL,GACP,IAAI;IAAA;EACH,GACL;AAEhB,CAAC;AAEDH,UAAU,CAACY,YAAY,GAAG;EACtBV,MAAM,EAAEW,SAAS;EACjBV,OAAO,EAAEU,SAAS;EAClBR,IAAI,EAAE,SAAS;EACfD,IAAI,EAAES;AACV,CAAC"},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"endingHeight\", \"startingHeight\", \"duration\", \"isOpen\", \"onAnimationEnd\", \"onAnimationStart\"];\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nimport isNil from 'lodash.isnil';\nimport React, { useEffect, useRef, forwardRef } from 'react';\nimport LayoutAnimation from \"react-native-web/dist/exports/LayoutAnimation\";\nimport UIManager from \"react-native-web/dist/exports/UIManager\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { Box } from \"../../primitives\";\nimport { useHasResponsiveProps } from \"../../../hooks/useHasResponsiveProps\";\nfunction usePrevious(value) {\n  var ref = useRef();\n  function updatePrevious(newVal) {\n    ref.current = newVal;\n  }\n  useEffect(function () {\n    updatePrevious(value);\n  }, [value]);\n  return {\n    value: ref.current,\n    updatePrevious: updatePrevious\n  };\n}\nvar Collapse = function Collapse(_ref, ref) {\n  var endingHeight = _ref.endingHeight,\n    startingHeight = _ref.startingHeight,\n    duration = _ref.duration,\n    isOpen = _ref.isOpen,\n    onAnimationEnd = _ref.onAnimationEnd,\n    onAnimationStart = _ref.onAnimationStart,\n    props = _objectWithoutProperties(_ref, _excluded);\n  if (Platform.OS === 'android') {\n    UIManager.setLayoutAnimationEnabledExperimental && UIManager.setLayoutAnimationEnabledExperimental(true);\n  }\n  var CustomLayoutLinear = {\n    duration: duration ? duration : 400,\n    create: {\n      type: LayoutAnimation.Types.easeInEaseOut,\n      property: LayoutAnimation.Properties.opacity\n    },\n    update: {\n      type: LayoutAnimation.Types.easeInEaseOut\n    }\n  };\n  var defaultStartHeight = isOpen ? endingHeight : startingHeight ? startingHeight : 1;\n  var animatedStyle = {\n    height: defaultStartHeight\n  };\n  var animateView = function animateView() {\n    if (onAnimationStart) {\n      onAnimationStart();\n    }\n    animatedStyle = {\n      height: isOpen ? endingHeight : defaultStartHeight\n    };\n    var callback = onAnimationEnd ? onAnimationEnd : function () {};\n    LayoutAnimation.configureNext(CustomLayoutLinear, callback());\n  };\n  var wasOpen = usePrevious(isOpen);\n  if (!isNil(wasOpen.value) && wasOpen.value !== isOpen) {\n    animateView();\n    wasOpen.updatePrevious(isOpen);\n  }\n  var _React$useState = React.useState(startingHeight !== null && startingHeight !== void 0 ? startingHeight : 0),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    size = _React$useState2[0],\n    setSize = _React$useState2[1];\n  var provideSize = function provideSize(layoutSize) {\n    setSize(layoutSize.height);\n  };\n  var _web = {\n    transition: \"height \".concat(duration !== null && duration !== void 0 ? duration : '400', \"ms\"),\n    height: isOpen ? endingHeight || size : startingHeight || 0\n  };\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n  return React.createElement(Box, {\n    style: _objectSpread(_objectSpread({}, animatedStyle), Platform.OS === 'web' && _web),\n    overflow: \"hidden\",\n    ref: ref\n  }, React.createElement(Box, _extends({\n    overflow: Platform.OS === 'web' ? 'auto' : 'scroll',\n    onLayout: function onLayout(e) {\n      return provideSize(e.nativeEvent.layout);\n    }\n  }, props)));\n};\nexport default React.memo(forwardRef(Collapse));","map":{"version":3,"mappings":"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","names":["isNil","React","useEffect","useRef","forwardRef","Box","useHasResponsiveProps","usePrevious","value","ref","updatePrevious","newVal","current","Collapse","endingHeight","startingHeight","duration","isOpen","onAnimationEnd","onAnimationStart","props","Platform","OS","UIManager","setLayoutAnimationEnabledExperimental","CustomLayoutLinear","create","type","LayoutAnimation","Types","easeInEaseOut","property","Properties","opacity","update","defaultStartHeight","animatedStyle","height","animateView","callback","configureNext","wasOpen","useState","size","setSize","provideSize","layoutSize","_web","transition","style","overflow","onLayout","e","nativeEvent","layout","memo"],"sources":["index.tsx"],"sourcesContent":["import isNil from 'lodash.isnil';\nimport React, { useEffect, useRef, forwardRef } from 'react';\nimport { ViewStyle, LayoutAnimation, UIManager, Platform } from 'react-native';\nimport { Box } from '../../primitives';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\nimport type { InterfaceBoxProps } from '../../primitives/Box';\nimport type { CustomProps } from '../../../components/types';\nexport type InterfaceCollapseProps = InterfaceBoxProps<ICollapseProps> & {\n  style?: ViewStyle;\n  endingHeight?: number;\n  startingHeight?: number;\n  duration?: number;\n  animateOpacity?: boolean;\n  isOpen?: boolean;\n  onAnimationEnd?: Function;\n  onAnimationStart?: Function;\n};\n\nexport type ICollapseProps = InterfaceCollapseProps & CustomProps<'Box'>;\n\nfunction usePrevious(value: any) {\n  const ref = useRef();\n  function updatePrevious(newVal: any) {\n    ref.current = newVal;\n  }\n  useEffect(() => {\n    updatePrevious(value);\n  }, [value]);\n  return { value: ref.current, updatePrevious };\n}\n\nconst Collapse = (\n  {\n    endingHeight,\n    startingHeight,\n    duration,\n    // animateOpacity,\n    isOpen,\n    onAnimationEnd,\n    onAnimationStart,\n    ...props\n  }: ICollapseProps,\n  ref?: any\n) => {\n  if (Platform.OS === 'android') {\n    UIManager.setLayoutAnimationEnabledExperimental &&\n      UIManager.setLayoutAnimationEnabledExperimental(true);\n  }\n  const CustomLayoutLinear = {\n    duration: duration ? duration : 400,\n    create: {\n      type: LayoutAnimation.Types.easeInEaseOut,\n      property: LayoutAnimation.Properties.opacity,\n    },\n    update: {\n      type: LayoutAnimation.Types.easeInEaseOut,\n    },\n  };\n  const defaultStartHeight: any = isOpen\n    ? endingHeight\n    : startingHeight\n    ? startingHeight\n    : 1;\n  let animatedStyle = { height: defaultStartHeight };\n  const animateView = () => {\n    if (onAnimationStart) {\n      onAnimationStart();\n    }\n    animatedStyle = {\n      height: isOpen ? endingHeight : defaultStartHeight,\n    };\n    let callback = onAnimationEnd ? onAnimationEnd : () => {};\n    LayoutAnimation.configureNext(CustomLayoutLinear, callback());\n  };\n\n  let wasOpen = usePrevious(isOpen);\n  if (!isNil(wasOpen.value) && wasOpen.value !== isOpen) {\n    animateView();\n    wasOpen.updatePrevious(isOpen);\n  }\n  const [size, setSize] = React.useState(startingHeight ?? 0);\n  const provideSize = (layoutSize: any) => {\n    setSize(layoutSize.height);\n  };\n  const _web = {\n    transition: `height ${duration ?? '400'}ms`,\n    height: isOpen ? endingHeight || size : startingHeight || 0,\n  };\n  //TODO: refactor for responsive prop\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n  return (\n    <Box\n      style={{ ...animatedStyle, ...(Platform.OS === 'web' && _web) }}\n      overflow=\"hidden\"\n      ref={ref}\n    >\n      <Box\n        //@ts-ignore\n        overflow={Platform.OS === 'web' ? 'auto' : 'scroll'}\n        onLayout={(e: any) => provideSize(e.nativeEvent.layout)}\n        {...props}\n      />\n    </Box>\n  );\n};\n\nexport default React.memo(forwardRef(Collapse));\n"]},"metadata":{},"sourceType":"module"}
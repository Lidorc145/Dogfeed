{"ast":null,"code":"import _objectDestructuringEmpty from \"@babel/runtime/helpers/objectDestructuringEmpty\";\nimport _extends2 from \"@babel/runtime/helpers/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"style\", \"children\", \"separator\", \"_text\", \"maxItems\", \"_button\", \"isCollapsed\", \"onCollapseChange\"],\n  _excluded2 = [\"spacing\"];\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nimport React, { memo, forwardRef } from 'react';\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { HStack } from \"../../primitives/Stack\";\nimport { useControllableState } from \"../../../hooks\";\nimport { Pressable } from \"../../primitives/Pressable\";\nimport { usePropsResolution } from \"../../../hooks/useThemeProps/usePropsResolution\";\nimport Text from \"../../primitives/Text\";\nimport { ThreeDotsIcon } from \"../../primitives/Icon/Icons\";\nimport { useHasResponsiveProps } from \"../../../hooks/useHasResponsiveProps\";\nvar Breadcrumb = function Breadcrumb(_ref, ref) {\n  var style = _ref.style,\n    children = _ref.children,\n    separator = _ref.separator,\n    _text = _ref._text,\n    maxItems = _ref.maxItems,\n    _button = _ref._button,\n    isCollapsed = _ref.isCollapsed,\n    onCollapseChange = _ref.onCollapseChange,\n    props = _objectWithoutProperties(_ref, _excluded);\n  var textProps = _objectSpread({}, _text);\n  var _useControllableState = useControllableState({\n      value: isCollapsed,\n      defaultValue: false,\n      onChange: function onChange(value) {\n        onCollapseChange && onCollapseChange(value);\n      }\n    }),\n    _useControllableState2 = _slicedToArray(_useControllableState, 2),\n    collapsed = _useControllableState2[0],\n    setCollapsed = _useControllableState2[1];\n  var _usePropsResolution = usePropsResolution('Breadcrumb', props),\n    spacing = _usePropsResolution.spacing,\n    newProps = _objectWithoutProperties(_usePropsResolution, _excluded2);\n  var separatorProps = {\n    accessibilityRole: Platform.OS === 'web' ? 'presentation' : undefined\n  };\n  var separatorElement = separator ? typeof separator === 'string' ? React.createElement(Text, _extends({}, separatorProps, {\n    mx: spacing\n  }), separator) : React.cloneElement(separator, _objectSpread({\n    mx: spacing\n  }, separatorProps)) : React.createElement(Text, _extends({\n    mx: spacing\n  }, separatorProps), '/');\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n  return React.createElement(HStack, _extends({\n    display: \"flex\",\n    flexWrap: \"wrap\"\n  }, newProps, {\n    ref: ref,\n    style: style,\n    divider: separatorElement,\n    space: spacing,\n    accessibilityRole: Platform.OS === 'web' ? 'navigation' : undefined,\n    accessibilityLabel: \"Breadcrumb\"\n  }), children && !children.length ? children : getBreadcrumbSeparator(children, textProps, maxItems, _button, collapsed, setCollapsed));\n};\nvar getBreadcrumbSeparator = function getBreadcrumbSeparator(children, props, maxItems, _button, collapsed, setCollapsed) {\n  if (Array.isArray(children)) {\n    if (children.length === 1) {\n      return children;\n    }\n    var result = [];\n    if (maxItems) {\n      var buttonAdded = false;\n      if (typeof maxItems == 'number') {\n        if (children.length > 2 * maxItems) {\n          for (var i = 0; i < children.length; i++) {\n            if (i < maxItems || i >= children.length - maxItems) {\n              result.push(children[i]);\n            } else {\n              if (!buttonAdded) {\n                result.push(React.createElement(CollapseButton, _extends({}, _button, {\n                  setCollapsed: setCollapsed\n                })));\n                buttonAdded = true;\n              }\n            }\n          }\n          buttonAdded = false;\n        }\n      } else if (typeof maxItems == 'object') {\n        if (children.length > maxItems[0] + maxItems[1]) for (var _i = 0; _i < children.length; _i++) {\n          if (_i < maxItems[0] || _i >= children.length - maxItems[1]) {\n            result.push(children[_i]);\n          } else {\n            if (!buttonAdded) {\n              result.push(React.createElement(CollapseButton, _extends({}, _button, {\n                setCollapsed: setCollapsed\n              })));\n              buttonAdded = true;\n            }\n          }\n        }\n        buttonAdded = false;\n      }\n    } else {\n      result = children;\n    }\n    if (!collapsed) {\n      result = children;\n    }\n    return result.map(function (child, index) {\n      return React.cloneElement(child, _objectSpread(_objectSpread({\n        _text: _objectSpread({}, props)\n      }, props), {}, {\n        key: \"breadcrumb-separator-\".concat(index)\n      }));\n    });\n  } else {\n    return children;\n  }\n};\nvar CollapseButton = function CollapseButton(props) {\n  var remainingProps = _extends2({}, (_objectDestructuringEmpty(props), props));\n  return React.createElement(Pressable, _extends({}, remainingProps, {\n    onPress: function onPress() {\n      props.setCollapsed(false);\n    }\n  }), React.createElement(ThreeDotsIcon, {\n    size: 4\n  }));\n};\nexport default memo(forwardRef(Breadcrumb));","map":{"version":3,"mappings":"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","names":["React","memo","forwardRef","HStack","useControllableState","Pressable","usePropsResolution","Text","ThreeDotsIcon","useHasResponsiveProps","Breadcrumb","ref","style","children","separator","_text","maxItems","_button","isCollapsed","onCollapseChange","props","textProps","value","defaultValue","onChange","collapsed","setCollapsed","spacing","newProps","separatorProps","accessibilityRole","Platform","OS","undefined","separatorElement","mx","cloneElement","display","flexWrap","divider","space","accessibilityLabel","length","getBreadcrumbSeparator","Array","isArray","result","buttonAdded","i","push","CollapseButton","map","child","index","key","remainingProps","onPress","size"],"sources":["Breadcrumb.tsx"],"sourcesContent":["import React, { memo, forwardRef } from 'react';\nimport { AccessibilityRole, Platform } from 'react-native';\nimport { HStack } from '../../primitives/Stack';\nimport { useControllableState } from '../../../hooks';\nimport { Pressable } from '../../primitives/Pressable';\nimport type { IBreadcrumbProps } from './types';\nimport { usePropsResolution } from '../../../hooks/useThemeProps/usePropsResolution';\nimport Text from '../../primitives/Text';\nimport type { IFlexProps } from '../../primitives';\nimport { ThreeDotsIcon } from '../../primitives/Icon/Icons';\n\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\nconst Breadcrumb = (\n  {\n    style,\n    children,\n    separator,\n    _text,\n    maxItems,\n    _button,\n    isCollapsed,\n    onCollapseChange,\n    ...props\n  }: IBreadcrumbProps & IFlexProps,\n  ref: any\n) => {\n  const textProps = { ..._text };\n\n  // Maintaining state to show all children on press of collapse button\n  const [collapsed, setCollapsed] = useControllableState({\n    value: isCollapsed,\n    defaultValue: false,\n    onChange: (value) => {\n      onCollapseChange && onCollapseChange(value);\n    },\n  });\n  const { spacing, ...newProps } = usePropsResolution('Breadcrumb', props);\n\n  const separatorProps = {\n    accessibilityRole: (Platform.OS === 'web'\n      ? 'presentation'\n      : undefined) as AccessibilityRole,\n  };\n  const separatorElement = separator ? (\n    typeof separator === 'string' ? (\n      <Text {...separatorProps} mx={spacing}>\n        {separator}\n      </Text>\n    ) : (\n      React.cloneElement(separator, {\n        mx: spacing,\n        ...separatorProps,\n      })\n    )\n  ) : (\n    <Text mx={spacing} {...separatorProps}>\n      {'/'}\n    </Text>\n  );\n\n  //TODO: refactor for responsive prop\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n  return (\n    <HStack\n      display=\"flex\"\n      flexWrap=\"wrap\"\n      {...newProps}\n      ref={ref}\n      style={style}\n      // Custom Separator\n      divider={separatorElement}\n      space={spacing}\n      // @ts-ignore - Web only prop\n      accessibilityRole={Platform.OS === 'web' ? 'navigation' : undefined}\n      accessibilityLabel=\"Breadcrumb\"\n    >\n      {children && !children.length\n        ? children\n        : getBreadcrumbSeparator(\n            children,\n            textProps,\n            maxItems,\n            _button,\n            collapsed,\n            setCollapsed\n          )}\n    </HStack>\n  );\n};\n\n// Returns children to be rendered\nconst getBreadcrumbSeparator = (\n  children: JSX.Element[] | JSX.Element | any,\n  props: any,\n  maxItems: number | number[] | undefined,\n  _button: any,\n  collapsed: boolean | undefined,\n  setCollapsed: any\n) => {\n  if (Array.isArray(children)) {\n    if (children.length === 1) {\n      return children;\n    }\n    let result: any = [];\n    if (maxItems) {\n      let buttonAdded = false;\n      if (typeof maxItems == 'number') {\n        // When MaxItems is a number\n        if (children.length > 2 * maxItems) {\n          for (let i = 0; i < children.length; i++) {\n            if (i < maxItems || i >= children.length - maxItems) {\n              result.push(children[i]);\n            } else {\n              if (!buttonAdded) {\n                result.push(\n                  <CollapseButton {..._button} setCollapsed={setCollapsed} />\n                );\n                buttonAdded = true;\n              }\n            }\n          }\n          buttonAdded = false;\n        }\n      }\n      // Whem maxItems is an array\n      else if (typeof maxItems == 'object') {\n        if (children.length > maxItems[0] + maxItems[1])\n          for (let i = 0; i < children.length; i++) {\n            if (i < maxItems[0] || i >= children.length - maxItems[1]) {\n              result.push(children[i]);\n            } else {\n              if (!buttonAdded) {\n                // pushing Collapsible button as a child\n                result.push(\n                  <CollapseButton {..._button} setCollapsed={setCollapsed} />\n                );\n                buttonAdded = true;\n              }\n            }\n          }\n        buttonAdded = false;\n      }\n    } else {\n      result = children;\n    }\n    if (!collapsed) {\n      result = children;\n    }\n    return result.map((child: any, index: number) => {\n      return React.cloneElement(child, {\n        _text: { ...props },\n        ...props,\n        key: `breadcrumb-separator-${index}`,\n      });\n    });\n  } else {\n    return children;\n  }\n};\n\n// Collapse button\nconst CollapseButton = (props: any) => {\n  const { ...remainingProps } = props;\n\n  return (\n    <Pressable\n      {...remainingProps}\n      onPress={() => {\n        props.setCollapsed(false);\n      }}\n    >\n      <ThreeDotsIcon size={4} />\n    </Pressable>\n  );\n};\n\nexport default memo(forwardRef(Breadcrumb));\nexport type { IBreadcrumbProps };\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"children\"],\n  _excluded2 = [\"_pressable\"];\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nimport React from 'react';\nimport { usePropsResolution } from \"../../../hooks/useThemeProps\";\nimport { Pressable } from \"../Pressable\";\nimport Box from \"../Box\";\nimport { SliderContext } from \"./Context\";\nimport { useHasResponsiveProps } from \"../../../hooks/useHasResponsiveProps\";\nvar SliderTrack = function SliderTrack(_ref, ref) {\n  var children = _ref.children,\n    props = _objectWithoutProperties(_ref, _excluded);\n  var _React$useContext = React.useContext(SliderContext),\n    orientation = _React$useContext.orientation,\n    trackProps = _React$useContext.trackProps,\n    onTrackLayout = _React$useContext.onTrackLayout,\n    colorScheme = _React$useContext.colorScheme,\n    sliderSize = _React$useContext.sliderSize,\n    isReadOnly = _React$useContext.isReadOnly,\n    isDisabled = _React$useContext.isDisabled;\n  var isVertical = orientation === 'vertical';\n  var _usePropsResolution = usePropsResolution('SliderTrack', _objectSpread({\n      size: sliderSize,\n      colorScheme: colorScheme,\n      isVertical: isVertical\n    }, props), {\n      isReadOnly: isReadOnly,\n      isDisabled: isDisabled\n    }),\n    _pressable = _usePropsResolution._pressable,\n    resolvedProps = _objectWithoutProperties(_usePropsResolution, _excluded2);\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n  return React.createElement(Pressable, _extends({\n    onLayout: onTrackLayout,\n    ref: ref\n  }, trackProps, _pressable), React.createElement(Box, resolvedProps, children));\n};\nexport default React.forwardRef(SliderTrack);","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,kBAAT;AACA,SAASC,SAAT;AACA,OAAOC,GAAP;AACA,SAASC,aAAT;AACA,SAASC,qBAAT;AAGA,IAAMC,WAAW,GAAG,SAAdA,WAAW,OAA+CC,GAA5C,EAA0D;EAAA,IAAvDC,QAAF,QAAEA,QAAF;IAAeC;EAClC,wBAQIT,KAAK,CAACU,UAAN,CAAiBN,aAAjB,CARJ;IACEO,WADI,qBACJA,WADI;IAEJC,UAFI,qBAEJA,UAFI;IAGJC,aAHI,qBAGJA,aAHI;IAIJC,WAJI,qBAIJA,WAJI;IAKJC,UALI,qBAKJA,UALI;IAMJC,UANI,qBAMJA,UANI;IAOJC;EAGF,IAAMC,UAAU,GAAGP,WAAW,KAAK,UAAnC;EAEA,0BAAyCV,kBAAkB,CACzD,aADyD;MAGvDkB,IAAI,EAAEJ,UADR;MAEED,WAFF,EAEEA,WAFF;MAGEI,UAHF,EAGEA;IAHF,GAIKT,QAEL;MAAEO,UAAF,EAAEA,UAAF;MAAcC;IAAd,CARyD,CAA3D;IAAQG,UAAF,uBAAEA,UAAF;IAAiBC;EAYvB,IAAIhB,qBAAqB,CAACI,KAAD,CAAzB,EAAkC;IAChC,OAAO,IAAP;EACD;EAED,OACET,oBAACE,SAAD;IACEoB,QAAQ,EAAET,aADZ;IAEEN,GAAG,EAAEA;EAFP,GAGMK,UAHN,EAIMQ,UAJN,GAMEpB,oBAACG,GAAD,EAASkB,aAAT,EAAyBb,QAAzB,CANF,CADF;AAUD,CAvCD;AAyCA,eAAeR,KAAK,CAACuB,UAAN,CAAiBjB,WAAjB,CAAf","names":["React","usePropsResolution","Pressable","Box","SliderContext","useHasResponsiveProps","SliderTrack","ref","children","props","useContext","orientation","trackProps","onTrackLayout","colorScheme","sliderSize","isReadOnly","isDisabled","isVertical","size","_pressable","resolvedProps","onLayout","forwardRef"],"sources":["SliderTrack.tsx"],"sourcesContent":["import React from 'react';\nimport { usePropsResolution } from '../../../hooks/useThemeProps';\nimport { Pressable } from '../Pressable';\nimport Box from '../Box';\nimport { SliderContext } from './Context';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\nimport type { ISliderTrackProps } from './types';\n\nconst SliderTrack = ({ children, ...props }: ISliderTrackProps, ref?: any) => {\n  const {\n    orientation,\n    trackProps,\n    onTrackLayout,\n    colorScheme,\n    sliderSize,\n    isReadOnly,\n    isDisabled,\n  } = React.useContext(SliderContext);\n\n  const isVertical = orientation === 'vertical';\n\n  const { _pressable, ...resolvedProps } = usePropsResolution(\n    'SliderTrack',\n    {\n      size: sliderSize,\n      colorScheme,\n      isVertical,\n      ...props,\n    },\n    { isReadOnly, isDisabled }\n  );\n\n  //TODO: refactor for responsive prop\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n\n  return (\n    <Pressable\n      onLayout={onTrackLayout}\n      ref={ref}\n      {...trackProps}\n      {..._pressable}\n    >\n      <Box {...resolvedProps}>{children}</Box>\n    </Pressable>\n  );\n};\n\nexport default React.forwardRef(SliderTrack);\n"]},"metadata":{},"sourceType":"module"}
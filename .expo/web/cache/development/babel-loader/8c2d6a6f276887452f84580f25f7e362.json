{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"label\", \"children\", \"onClose\", \"onOpen\", \"defaultIsOpen\", \"placement\", \"openDelay\", \"closeDelay\", \"closeOnClick\", \"offset\", \"isDisabled\", \"hasArrow\", \"arrowSize\", \"isOpen\"];\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nimport { OverlayContainer } from '@react-native-aria/overlays';\nimport React from 'react';\nimport { useControllableState, useKeyboardDismissable } from \"../../../hooks\";\nimport { Popper } from \"../Popper\";\nimport { composeEventHandlers, mergeRefs } from \"../../../utils\";\nimport { PresenceTransition } from \"../Transitions\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { usePropsResolution } from \"../../../hooks\";\nimport Box from \"../../primitives/Box\";\nimport { useId } from '@react-native-aria/utils';\nimport { useHasResponsiveProps } from \"../../../hooks/useHasResponsiveProps\";\nimport { uniqueId } from 'lodash';\nimport { ResponsiveQueryContext } from \"../../../utils/useResponsiveQuery/ResponsiveQueryProvider\";\nexport var Tooltip = function Tooltip(_ref3) {\n  var label = _ref3.label,\n    children = _ref3.children,\n    onClose = _ref3.onClose,\n    onOpen = _ref3.onOpen,\n    defaultIsOpen = _ref3.defaultIsOpen,\n    placement = _ref3.placement,\n    _ref3$openDelay = _ref3.openDelay,\n    openDelay = _ref3$openDelay === void 0 ? 0 : _ref3$openDelay,\n    _ref3$closeDelay = _ref3.closeDelay,\n    closeDelay = _ref3$closeDelay === void 0 ? 0 : _ref3$closeDelay,\n    _ref3$closeOnClick = _ref3.closeOnClick,\n    closeOnClick = _ref3$closeOnClick === void 0 ? true : _ref3$closeOnClick,\n    offset = _ref3.offset,\n    isDisabled = _ref3.isDisabled,\n    hasArrow = _ref3.hasArrow,\n    _ref3$arrowSize = _ref3.arrowSize,\n    arrowSize = _ref3$arrowSize === void 0 ? 12 : _ref3$arrowSize,\n    isOpenProp = _ref3.isOpen,\n    props = _objectWithoutProperties(_ref3, _excluded);\n  var _ref, _ref2, _props$backgroundColo;\n  if (hasArrow && offset === undefined) {\n    offset = 0;\n  } else {\n    offset = 6;\n  }\n  var resolvedProps = usePropsResolution('Tooltip', props);\n  var _useControllableState = useControllableState({\n      value: isOpenProp,\n      defaultValue: defaultIsOpen,\n      onChange: function onChange(value) {\n        value ? onOpen && onOpen() : onClose && onClose();\n      }\n    }),\n    _useControllableState2 = _slicedToArray(_useControllableState, 2),\n    isOpen = _useControllableState2[0],\n    setIsOpen = _useControllableState2[1];\n  var arrowBg = (_ref = (_ref2 = (_props$backgroundColo = props.backgroundColor) !== null && _props$backgroundColo !== void 0 ? _props$backgroundColo : props.bgColor) !== null && _ref2 !== void 0 ? _ref2 : props.bg) !== null && _ref !== void 0 ? _ref : resolvedProps.bg;\n  var targetRef = React.useRef(null);\n  var enterTimeout = React.useRef();\n  var exitTimeout = React.useRef();\n  var tooltipID = uniqueId();\n  var responsiveQueryContext = React.useContext(ResponsiveQueryContext);\n  var disableCSSMediaQueries = responsiveQueryContext.disableCSSMediaQueries;\n  if (!disableCSSMediaQueries) {\n    tooltipID = useId();\n  }\n  var openWithDelay = React.useCallback(function () {\n    if (!isDisabled) {\n      enterTimeout.current = setTimeout(function () {\n        return setIsOpen(true);\n      }, openDelay);\n    }\n  }, [isDisabled, setIsOpen, openDelay]);\n  var closeWithDelay = React.useCallback(function () {\n    if (enterTimeout.current) {\n      clearTimeout(enterTimeout.current);\n    }\n    exitTimeout.current = setTimeout(function () {\n      return setIsOpen(false);\n    }, closeDelay);\n  }, [closeDelay, setIsOpen]);\n  React.useEffect(function () {\n    return function () {\n      clearTimeout(enterTimeout.current);\n      clearTimeout(exitTimeout.current);\n    };\n  }, []);\n  var newChildren = children;\n  if (typeof children === 'string') {\n    newChildren = React.createElement(Box, null, children);\n  }\n  newChildren = React.cloneElement(newChildren, {\n    'onPress': composeEventHandlers(newChildren.props.onPress, function () {\n      if (closeOnClick) {\n        closeWithDelay();\n      }\n    }),\n    'onFocus': composeEventHandlers(newChildren.props.onFocus, openWithDelay),\n    'onBlur': composeEventHandlers(newChildren.props.onBlur, closeWithDelay),\n    'onMouseEnter': composeEventHandlers(newChildren.props.onMouseEnter, openWithDelay),\n    'onMouseLeave': composeEventHandlers(newChildren.props.onMouseLeave, closeWithDelay),\n    'ref': mergeRefs([newChildren.ref, targetRef]),\n    'aria-describedby': isOpen ? tooltipID : undefined\n  });\n  useKeyboardDismissable({\n    enabled: isOpen,\n    callback: function callback() {\n      return setIsOpen(false);\n    }\n  });\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n  return React.createElement(React.Fragment, null, newChildren, isOpen && React.createElement(OverlayContainer, null, React.createElement(PresenceTransition, {\n    initial: {\n      opacity: 0\n    },\n    animate: {\n      opacity: 1,\n      transition: {\n        duration: 150\n      }\n    },\n    exit: {\n      opacity: 0,\n      transition: {\n        duration: 100\n      }\n    },\n    visible: isOpen,\n    style: StyleSheet.absoluteFill\n  }, React.createElement(Popper, {\n    triggerRef: targetRef,\n    onClose: function onClose() {\n      return setIsOpen(false);\n    },\n    placement: placement,\n    offset: offset\n  }, React.createElement(Popper.Content, {\n    isOpen: isOpen\n  }, hasArrow && React.createElement(Popper.Arrow, {\n    borderColor: \"transparent\",\n    backgroundColor: arrowBg,\n    height: arrowSize,\n    width: arrowSize\n  }), React.createElement(Box, _extends({}, resolvedProps, {\n    accessibilityRole: Platform.OS === 'web' ? 'tooltip' : undefined,\n    nativeID: tooltipID\n  }), label))))));\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;AAAA,SAASA,gBAAT,QAAiC,6BAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,oBAAT,EAA+BC,sBAA/B;AACA,SAASC,MAAT;AACA,SAASC,oBAAT,EAA+BC,SAA/B;AACA,SAASC,kBAAT;AAAA;AAAA;AAEA,SAASC,kBAAT;AACA,OAAOC,GAAP;AAEA,SAASC,KAAT,QAAsB,0BAAtB;AACA,SAASC,qBAAT;AACA,SAASC,QAAT,QAAyB,QAAzB;AACA,SAASC,sBAAT;AAEA,OAAO,IAAMC,OAAO,GAAG,SAAVA,OAAO,QAgBC;EAAA,IAfnBC,KADsB,SACtBA,KADsB;IAEtBC,QAFsB,SAEtBA,QAFsB;IAGtBC,OAHsB,SAGtBA,OAHsB;IAItBC,MAJsB,SAItBA,MAJsB;IAKtBC,aALsB,SAKtBA,aALsB;IAMtBC,SANsB,SAMtBA,SANsB;IAAA,wBAOtBC,SAAS;IAATA,SAAS,gCAAG,CAPU;IAAA,yBAQtBC,UAAU;IAAVA,UAAU,iCAAG,CARS;IAAA,2BAStBC,YAAY;IAAZA,YAAY,mCAAG,IATO;IAUtBC,MAVsB,SAUtBA,MAVsB;IAWtBC,UAXsB,SAWtBA,UAXsB;IAYtBC,QAZsB,SAYtBA,QAZsB;IAAA,wBAatBC,SAAS;IAATA,SAAS,gCAAG,EAbU;IAcdC,UAdc,SActBC,MAAM;IACHC;EACgB;EACnB,IAAIJ,QAAQ,IAAIF,MAAM,KAAKO,SAA3B,EAAsC;IACpCP,MAAM,GAAG,CAAT;EACD,CAFD,MAEO;IACLA,MAAM,GAAG,CAAT;EACD;EAED,IAAMQ,aAAa,GAAGxB,kBAAkB,CAAC,SAAD,EAAYsB,KAAZ,CAAxC;EACA,4BAA4B5B,oBAAoB,CAAC;MAC/C+B,KAAK,EAAEL,UADwC;MAE/CM,YAAY,EAAEf,aAFiC;MAG/CgB,QAAQ,EAAGF,uBAAD,EAAW;QACnBA,KAAK,GAAGf,MAAM,IAAIA,MAAM,EAAnB,GAAwBD,OAAO,IAAIA,OAAO,EAA/C;MACD;IAL8C,CAAD,CAAhD;IAAA;IAAOY,MAAD;IAASO,SAAT;EAQN,IAAMC,OAAO,6CACXP,KAAK,CAACQ,eADK,yEACcR,KAAK,CAACS,OADpB,yCAC+BT,KAAK,CAACU,EADrC,uCAC2CR,aAAa,CAACQ,EADtE;EAGA,IAAMC,SAAS,GAAGxC,KAAK,CAACyC,MAAN,CAAa,IAAb,CAAlB;EAEA,IAAMC,YAAY,GAAG1C,KAAK,CAACyC,MAAN,EAArB;EACA,IAAME,WAAW,GAAG3C,KAAK,CAACyC,MAAN,EAApB;EAIA,IAAIG,SAAS,GAAGjC,QAAQ,EAAxB;EAGA,IAAMkC,sBAAsB,GAAG7C,KAAK,CAAC8C,UAAN,CAAiBlC,sBAAjB,CAA/B;EACA,IAAMmC,sBAAsB,GAAGF,sBAAsB,CAACE,sBAAtD;EAEA,IAAI,CAACA,sBAAL,EAA6B;IAI3BH,SAAS,GAAGnC,KAAK,EAAjB;EACD;EAED,IAAMuC,aAAa,GAAGhD,KAAK,CAACiD,WAAN,CAAkB,YAAM;IAC5C,IAAI,CAACzB,UAAL,EAAiB;MACfkB,YAAY,CAACQ,OAAb,GAAuBC,UAAU,CAAC;QAAA,OAAMhB,SAAS,CAAC,IAAD,CAAhB;MAAA,GAAwBf,SAAxB,CAAjC;IACD;EACF,CAJqB,EAInB,CAACI,UAAD,EAAaW,SAAb,EAAwBf,SAAxB,CAJmB,CAAtB;EAMA,IAAMgC,cAAc,GAAGpD,KAAK,CAACiD,WAAN,CAAkB,YAAM;IAC7C,IAAIP,YAAY,CAACQ,OAAjB,EAA0B;MACxBG,YAAY,CAACX,YAAY,CAACQ,OAAd,CAAZ;IACD;IACDP,WAAW,CAACO,OAAZ,GAAsBC,UAAU,CAAC;MAAA,OAAMhB,SAAS,CAAC,KAAD,CAAhB;IAAA,GAAyBd,UAAzB,CAAhC;EACD,CALsB,EAKpB,CAACA,UAAD,EAAac,SAAb,CALoB,CAAvB;EAOAnC,KAAK,CAACsD,SAAN,CACE;IAAA,OAAM,YAAM;MACVD,YAAY,CAACX,YAAY,CAACQ,OAAd,CAAZ;MACAG,YAAY,CAACV,WAAW,CAACO,OAAb,CAAZ;IACD,CAJH;EAAA,GAKE,EALF;EAQA,IAAIK,WAAW,GAAGxC,QAAlB;EAEA,IAAI,OAAOA,QAAP,KAAoB,QAAxB,EAAkC;IAChCwC,WAAW,GAAGvD,oBAACQ,GAAD,QAAMO,QAAN,CAAd;EACD;EAEDwC,WAAW,GAAGvD,KAAK,CAACwD,YAAN,CAAmBD,WAAnB,EAAgC;IAC5C,WAAWnD,oBAAoB,CAAMmD,WAAW,CAAC1B,KAAZ,CAAkB4B,OAAxB,EAAiC,YAAM;MACpE,IAAInC,YAAJ,EAAkB;QAChB8B,cAAc;MACf;IACF,CAJ8B,CADa;IAM5C,WAAWhD,oBAAoB,CAC7BmD,WAAW,CAAC1B,KAAZ,CAAkB6B,OADW,EAE7BV,aAF6B,CANa;IAU5C,UAAU5C,oBAAoB,CAC5BmD,WAAW,CAAC1B,KAAZ,CAAkB8B,MADU,EAE5BP,cAF4B,CAVc;IAc5C,gBAAgBhD,oBAAoB,CAClCmD,WAAW,CAAC1B,KAAZ,CAAkB+B,YADgB,EAElCZ,aAFkC,CAdQ;IAkB5C,gBAAgB5C,oBAAoB,CAClCmD,WAAW,CAAC1B,KAAZ,CAAkBgC,YADgB,EAElCT,cAFkC,CAlBQ;IAsB5C,OAAO/C,SAAS,CAAC,CAACkD,WAAW,CAACO,GAAb,EAAkBtB,SAAlB,CAAD,CAtB4B;IAwB5C,oBAAoBZ,MAAM,GAAGgB,SAAH,GAAed;EAxBG,CAAhC,CAAd;EA2BA5B,sBAAsB,CAAC;IACrB6D,OAAO,EAAEnC,MADY;IAErBoC,QAAQ,EAAE;MAAA,OAAM7B,SAAS,CAAC,KAAD;IAAA;EAFJ,CAAD,CAAtB;EAKA,IAAIzB,qBAAqB,CAACmB,KAAD,CAAzB,EAAkC;IAChC,OAAO,IAAP;EACD;EACD,OACE7B,0CACGuD,WADH,EAEG3B,MAAM,IACL5B,oBAACD,gBAAD,QACEC,oBAACM,kBAAD;IACE2D,OAAO,EAAE;MAAEC,OAAO,EAAE;IAAX,CADX;IAEEC,OAAO,EAAE;MAAED,OAAO,EAAE,CAAX;MAAcE,UAAU,EAAE;QAAEC,QAAQ,EAAE;MAAZ;IAA1B,CAFX;IAGEC,IAAI,EAAE;MAAEJ,OAAO,EAAE,CAAX;MAAcE,UAAU,EAAE;QAAEC,QAAQ,EAAE;MAAZ;IAA1B,CAHR;IAIEE,OAAO,EAAE3C,MAJX;IAKE4C,KAAK,EAAEC,UAAU,CAACC;EALpB,GAOE1E,oBAACG,MAAD;IACEwE,UAAU,EAAEnC,SADd;IAEExB,OAAO,EAAE;MAAA,OAAMmB,SAAS,CAAC,KAAD,CAF1B;IAAA;IAGEhB,SAAS,EAAEA,SAHb;IAIEI,MAAM,EAAEA;EAJV,GAMEvB,oBAACG,MAAD,CAAQyE,OAAR;IAAgBhD,MAAM,EAAEA;EAAxB,GACGH,QAAQ,IACPzB,oBAACG,MAAD,CAAQ0E,KAAR;IACEC,WAAW,EAAC,aADd;IAEEzC,eAAe,EAAED,OAFnB;IAGE2C,MAAM,EAAErD,SAHV;IAIEsD,KAAK,EAAEtD;EAJT,EAFJ,EASE1B,oBAACQ,GAAD,eACMuB,aADN;IAGEkD,iBAAiB,EACfC,QAAQ,CAACC,EAAT,KAAgB,KAAhB,GAAwB,SAAxB,GAAoCrD,SAJxC;IAMEsD,QAAQ,EAAExC;EANZ,IAQG9B,KARH,CATF,CANF,CAPF,CADF,CAHJ,CADF;AA4CD,CAjKM","names":["OverlayContainer","React","useControllableState","useKeyboardDismissable","Popper","composeEventHandlers","mergeRefs","PresenceTransition","usePropsResolution","Box","useId","useHasResponsiveProps","uniqueId","ResponsiveQueryContext","Tooltip","label","children","onClose","onOpen","defaultIsOpen","placement","openDelay","closeDelay","closeOnClick","offset","isDisabled","hasArrow","arrowSize","isOpenProp","isOpen","props","undefined","resolvedProps","value","defaultValue","onChange","setIsOpen","arrowBg","backgroundColor","bgColor","bg","targetRef","useRef","enterTimeout","exitTimeout","tooltipID","responsiveQueryContext","useContext","disableCSSMediaQueries","openWithDelay","useCallback","current","setTimeout","closeWithDelay","clearTimeout","useEffect","newChildren","cloneElement","onPress","onFocus","onBlur","onMouseEnter","onMouseLeave","ref","enabled","callback","initial","opacity","animate","transition","duration","exit","visible","style","StyleSheet","absoluteFill","triggerRef","Content","Arrow","borderColor","height","width","accessibilityRole","Platform","OS","nativeID"],"sources":["Tooltip.tsx"],"sourcesContent":["import { OverlayContainer } from '@react-native-aria/overlays';\nimport React from 'react';\nimport { useControllableState, useKeyboardDismissable } from '../../../hooks';\nimport { Popper } from '../Popper';\nimport { composeEventHandlers, mergeRefs } from '../../../utils';\nimport { PresenceTransition } from '../Transitions';\nimport { Platform, StyleSheet } from 'react-native';\nimport { usePropsResolution } from '../../../hooks';\nimport Box from '../../primitives/Box';\nimport type { ITooltipProps } from './types';\nimport { useId } from '@react-native-aria/utils';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\nimport { uniqueId } from 'lodash';\nimport { ResponsiveQueryContext } from '../../../utils/useResponsiveQuery/ResponsiveQueryProvider';\n\nexport const Tooltip = ({\n  label,\n  children,\n  onClose,\n  onOpen,\n  defaultIsOpen,\n  placement,\n  openDelay = 0,\n  closeDelay = 0,\n  closeOnClick = true,\n  offset,\n  isDisabled,\n  hasArrow,\n  arrowSize = 12,\n  isOpen: isOpenProp,\n  ...props\n}: ITooltipProps) => {\n  if (hasArrow && offset === undefined) {\n    offset = 0;\n  } else {\n    offset = 6;\n  }\n\n  const resolvedProps = usePropsResolution('Tooltip', props);\n  const [isOpen, setIsOpen] = useControllableState({\n    value: isOpenProp,\n    defaultValue: defaultIsOpen,\n    onChange: (value) => {\n      value ? onOpen && onOpen() : onClose && onClose();\n    },\n  });\n\n  const arrowBg =\n    props.backgroundColor ?? props.bgColor ?? props.bg ?? resolvedProps.bg;\n\n  const targetRef = React.useRef(null);\n\n  const enterTimeout = React.useRef<any>();\n  const exitTimeout = React.useRef<any>();\n  // const tooltipID = '';\n  // const tooltipID = useId();\n\n  let tooltipID = uniqueId();\n\n  // let id = uniqueId();\n  const responsiveQueryContext = React.useContext(ResponsiveQueryContext);\n  const disableCSSMediaQueries = responsiveQueryContext.disableCSSMediaQueries;\n\n  if (!disableCSSMediaQueries) {\n    // This if statement technically breaks the rules of hooks, but is safe\n    // because the condition never changes after mounting.\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    tooltipID = useId();\n  }\n\n  const openWithDelay = React.useCallback(() => {\n    if (!isDisabled) {\n      enterTimeout.current = setTimeout(() => setIsOpen(true), openDelay);\n    }\n  }, [isDisabled, setIsOpen, openDelay]);\n\n  const closeWithDelay = React.useCallback(() => {\n    if (enterTimeout.current) {\n      clearTimeout(enterTimeout.current);\n    }\n    exitTimeout.current = setTimeout(() => setIsOpen(false), closeDelay);\n  }, [closeDelay, setIsOpen]);\n\n  React.useEffect(\n    () => () => {\n      clearTimeout(enterTimeout.current);\n      clearTimeout(exitTimeout.current);\n    },\n    []\n  );\n\n  let newChildren = children;\n\n  if (typeof children === 'string') {\n    newChildren = <Box>{children}</Box>;\n  }\n\n  newChildren = React.cloneElement(newChildren, {\n    'onPress': composeEventHandlers<any>(newChildren.props.onPress, () => {\n      if (closeOnClick) {\n        closeWithDelay();\n      }\n    }),\n    'onFocus': composeEventHandlers<any>(\n      newChildren.props.onFocus,\n      openWithDelay\n    ),\n    'onBlur': composeEventHandlers<any>(\n      newChildren.props.onBlur,\n      closeWithDelay\n    ),\n    'onMouseEnter': composeEventHandlers<any>(\n      newChildren.props.onMouseEnter,\n      openWithDelay\n    ),\n    'onMouseLeave': composeEventHandlers<any>(\n      newChildren.props.onMouseLeave,\n      closeWithDelay\n    ),\n    'ref': mergeRefs([newChildren.ref, targetRef]),\n\n    'aria-describedby': isOpen ? tooltipID : undefined,\n  });\n\n  useKeyboardDismissable({\n    enabled: isOpen,\n    callback: () => setIsOpen(false),\n  });\n  //TODO: refactor for responsive prop\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n  return (\n    <>\n      {newChildren}\n      {isOpen && (\n        <OverlayContainer>\n          <PresenceTransition\n            initial={{ opacity: 0 }}\n            animate={{ opacity: 1, transition: { duration: 150 } }}\n            exit={{ opacity: 0, transition: { duration: 100 } }}\n            visible={isOpen}\n            style={StyleSheet.absoluteFill}\n          >\n            <Popper\n              triggerRef={targetRef}\n              onClose={() => setIsOpen(false)}\n              placement={placement}\n              offset={offset}\n            >\n              <Popper.Content isOpen={isOpen}>\n                {hasArrow && (\n                  <Popper.Arrow\n                    borderColor=\"transparent\"\n                    backgroundColor={arrowBg}\n                    height={arrowSize}\n                    width={arrowSize}\n                  />\n                )}\n                <Box\n                  {...resolvedProps}\n                  //@ts-ignore\n                  accessibilityRole={\n                    Platform.OS === 'web' ? 'tooltip' : undefined\n                  }\n                  nativeID={tooltipID}\n                >\n                  {label}\n                </Box>\n              </Popper.Content>\n            </Popper>\n          </PresenceTransition>\n        </OverlayContainer>\n      )}\n    </>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}
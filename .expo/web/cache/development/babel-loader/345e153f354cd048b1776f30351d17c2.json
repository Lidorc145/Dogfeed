{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"style\"];\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nimport React from 'react';\nimport Box from \"../../primitives/Box\";\nimport { useThemeProps } from \"../../../hooks\";\nimport { useHasResponsiveProps } from \"../../../hooks/useHasResponsiveProps\";\nvar Tag = function Tag(_ref, ref) {\n  var style = _ref.style,\n    props = _objectWithoutProperties(_ref, _excluded);\n  var resolvedProps = useThemeProps('Tag', props);\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n  return React.createElement(Box, _extends({\n    style: style\n  }, resolvedProps, {\n    ref: ref\n  }));\n};\nexport default React.memo(React.forwardRef(Tag));","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP;AACA,SAASC,aAAT;AAEA,SAASC,qBAAT;AAEA,IAAMC,GAAG,GAAG,SAANA,GAAG,OAAoCC,GAAjC,EAA8C;EAAA,IAA3CC,KAAF,QAAEA,KAAF;IAAYC;EACvB,IAAIC,aAAa,GAAGN,aAAa,CAAC,KAAD,EAAQK,KAAR,CAAjC;EAEA,IAAIJ,qBAAqB,CAACI,KAAD,CAAzB,EAAkC;IAChC,OAAO,IAAP;EACD;EACD,OAAOP,oBAACC,GAAD;IAAKK,KAAK,EAAEA;EAAZ,GAAuBE,aAAvB;IAAsCH,GAAG,EAAEA;EAA3C,GAAP;AACD,CAPD;AASA,eAAeL,KAAK,CAACS,IAAN,CAAWT,KAAK,CAACU,UAAN,CAAiBN,GAAjB,CAAX,CAAf","names":["React","Box","useThemeProps","useHasResponsiveProps","Tag","ref","style","props","resolvedProps","memo","forwardRef"],"sources":["index.tsx"],"sourcesContent":["import React from 'react';\nimport Box from '../../primitives/Box';\nimport { useThemeProps } from '../../../hooks';\nimport type { IInputComponentType, ITagProps } from './types';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\n\nconst Tag = ({ style, ...props }: ITagProps, ref: any) => {\n  let resolvedProps = useThemeProps('Tag', props);\n  //TODO: refactor for responsive prop\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n  return <Box style={style} {...resolvedProps} ref={ref} />;\n};\n\nexport default React.memo(React.forwardRef(Tag)) as IInputComponentType;\nexport type { ITagProps };\n"]},"metadata":{},"sourceType":"module"}
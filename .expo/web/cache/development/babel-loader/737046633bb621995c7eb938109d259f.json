{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useEffect } from 'react';\nimport { Box, Button, Heading, HStack, Icon, KeyboardAvoidingView, Text, useToast } from 'native-base';\nimport { FormInput } from \"../components/form-input\";\nimport { useForm } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { authenticateSchema } from \"../utils/schemas\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { useDeleteAccountMutation } from \"../services\";\nimport { useAppSelector } from \"../ducks/useful-hooks\";\nimport { AlertToast } from \"../components/alert-toast\";\nimport { MaterialIcons } from '@expo/vector-icons';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport var DeleteAccountScreen = function DeleteAccountScreen(_ref) {\n  var _errors$email, _errors$password;\n  var navigation = _ref.navigation;\n  var user = useAppSelector(function (state) {\n    return state.user;\n  });\n  var _useDeleteAccountMuta = useDeleteAccountMutation(),\n    _useDeleteAccountMuta2 = _slicedToArray(_useDeleteAccountMuta, 2),\n    deleteAccount = _useDeleteAccountMuta2[0],\n    _useDeleteAccountMuta3 = _useDeleteAccountMuta2[1],\n    isLoading = _useDeleteAccountMuta3.isLoading,\n    isSuccess = _useDeleteAccountMuta3.isSuccess,\n    isError = _useDeleteAccountMuta3.isError,\n    error = _useDeleteAccountMuta3.error;\n  var _useForm = useForm({\n      resolver: yupResolver(authenticateSchema)\n    }),\n    control = _useForm.control,\n    handleSubmit = _useForm.handleSubmit,\n    errors = _useForm.formState.errors;\n  var toast = useToast();\n  useEffect(function () {\n    if (!isLoading && isSuccess) {\n      toast.show({\n        placement: 'bottom',\n        render: function render() {\n          return _jsx(AlertToast, {\n            title: \"Password Changed!\",\n            type: \"success\",\n            message: \"Your password has been successfully changed.\",\n            toExit: function toExit() {\n              return toast.close('pw-toast');\n            }\n          });\n        },\n        id: 'pw-toast'\n      });\n      navigation.goBack();\n    }\n  }, [isLoading, isSuccess, navigation, toast]);\n  var confirmDeleteAccount = function _callee(_ref2) {\n    var email, password;\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            email = _ref2.email, password = _ref2.password;\n            Alert.alert('Are you sure you want to delete your account?', 'Your account and data will be permanently deleted.', [{\n              text: 'Go Back',\n              style: 'cancel'\n            }, {\n              text: 'Delete Account',\n              onPress: function onPress() {\n                return deleteAccount({\n                  id: user.id,\n                  email: email,\n                  password: password\n                });\n              },\n              style: 'destructive'\n            }]);\n          case 2:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n  return _jsx(KeyboardAvoidingView, {\n    h: {\n      lg: 'auto'\n    },\n    behavior: Platform.OS === 'ios' ? 'padding' : 'height',\n    onTouchStart: function onTouchStart() {\n      return Keyboard.dismiss();\n    },\n    w: \"100%\",\n    children: _jsxs(Box, {\n      px: 5,\n      mt: 5,\n      children: [_jsxs(HStack, {\n        alignItems: \"center\",\n        justifyContent: \"space-between\",\n        w: \"100%\",\n        py: 5,\n        children: [_jsx(Box, {\n          pr: 3,\n          children: _jsx(Icon, {\n            as: MaterialIcons,\n            name: \"warning\",\n            size: 50,\n            color: \"plainText.800\"\n          })\n        }), _jsx(Heading, {\n          flex: 1,\n          textAlign: \"left\",\n          color: \"plainText.800\",\n          alignSelf: \"center\",\n          children: \"Are you sure you want to delete your account?\"\n        })]\n      }), _jsxs(Text, {\n        fontSize: \"md\",\n        textAlign: \"center\",\n        fontStyle: \"italic\",\n        color: \"plainText.800\",\n        children: [\"Enter the credentials associated with \", user.email, \" to confirm.\"]\n      }), _jsx(FormInput, {\n        mt: 1,\n        name: \"email\",\n        control: control,\n        isInvalid: 'email' in errors,\n        label: \"Enter your email\",\n        placeholder: \"Email\",\n        defaultValue: \"\",\n        errorMessage: errors == null ? void 0 : (_errors$email = errors.email) == null ? void 0 : _errors$email.message\n      }, \"email\"), _jsx(FormInput, {\n        name: \"password\",\n        control: control,\n        isInvalid: 'password' in errors,\n        password: true,\n        label: \"Enter your new password\",\n        placeholder: \"Enter your password\",\n        defaultValue: \"\",\n        errorMessage: errors == null ? void 0 : (_errors$password = errors.password) == null ? void 0 : _errors$password.message\n      }, \"password\"), isError ? _jsx(Text, {\n        color: \"danger.600\",\n        textAlign: \"center\",\n        mt: 5,\n        children: error == null ? void 0 : error.message\n      }) : null, _jsx(Button, {\n        colorScheme: \"danger\",\n        isLoading: isLoading,\n        mt: 8,\n        onPress: handleSubmit(confirmDeleteAccount),\n        children: \"Delete\"\n      }), _jsx(Button, {\n        variant: \"ghost\",\n        my: 5,\n        onPress: navigation.goBack,\n        children: \"Cancel\"\n      })]\n    })\n  });\n};","map":{"version":3,"names":["React","useEffect","Box","Button","Heading","HStack","Icon","KeyboardAvoidingView","Text","useToast","FormInput","useForm","yupResolver","authenticateSchema","useDeleteAccountMutation","useAppSelector","AlertToast","MaterialIcons","DeleteAccountScreen","navigation","user","state","deleteAccount","isLoading","isSuccess","isError","error","resolver","control","handleSubmit","errors","formState","toast","show","placement","render","close","id","goBack","confirmDeleteAccount","email","password","Alert","alert","text","style","onPress","lg","Platform","OS","Keyboard","dismiss","message"],"sources":["C:/Users/LidorCohen/Desktop/Dogfeel/src/screens/delete-account.tsx"],"sourcesContent":["import React, { useEffect } from 'react';\nimport {\n    Box,\n    Button,\n    Heading,\n    HStack,\n    Icon,\n    KeyboardAvoidingView,\n    Text,\n    useToast,\n} from 'native-base';\nimport { FormInput } from 'src/components/form-input';\nimport { useForm } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { authenticateSchema, AuthenticateSchemaType } from 'src/utils/schemas';\nimport { Alert, Keyboard, Platform } from 'react-native';\nimport { SettingStackParams } from 'src/navigation/settings-stack';\nimport { StackScreenProps } from '@react-navigation/stack';\nimport { useDeleteAccountMutation } from 'src/services';\nimport { useAppSelector } from 'src/ducks/useful-hooks';\nimport { AlertToast } from 'src/components/alert-toast';\nimport { MaterialIcons } from '@expo/vector-icons';\n\ntype DeleteAccountScreenProps = StackScreenProps<SettingStackParams, 'DeleteAccount'>;\n\nexport /**\n * Delete Account Screen, used for deleting the user information from firestore and firebase auth\n *\n * @param {*} { navigation }\n * @return {*}\n */\nconst DeleteAccountScreen: React.FC<DeleteAccountScreenProps> = ({ navigation }) => {\n    // declare hooks\n    const user = useAppSelector((state) => state.user);\n    const [deleteAccount, { isLoading, isSuccess, isError, error }] = useDeleteAccountMutation();\n    // form validation\n    const {\n        control,\n        handleSubmit,\n        formState: { errors },\n    } = useForm<AuthenticateSchemaType>({\n        resolver: yupResolver(authenticateSchema),\n    });\n    // declare toast\n    const toast = useToast();\n\n    // effect hook for navigating back to the setting screen\n    useEffect(() => {\n        if (!isLoading && isSuccess) {\n            toast.show({\n                placement: 'bottom',\n                render: () => (\n                    <AlertToast\n                        title=\"Password Changed!\"\n                        type=\"success\"\n                        message=\"Your password has been successfully changed.\"\n                        toExit={() => toast.close('pw-toast')}\n                    />\n                ),\n                id: 'pw-toast',\n            });\n            navigation.goBack();\n        }\n    }, [isLoading, isSuccess, navigation, toast]);\n\n    const confirmDeleteAccount = async ({ email, password }: AuthenticateSchemaType) => {\n        Alert.alert(\n            'Are you sure you want to delete your account?',\n            'Your account and data will be permanently deleted.',\n            [\n                { text: 'Go Back', style: 'cancel' },\n                {\n                    text: 'Delete Account',\n                    onPress: () => deleteAccount({ id: user.id, email, password }),\n                    style: 'destructive',\n                },\n            ],\n        );\n    };\n\n    return (\n        <KeyboardAvoidingView\n            h={{\n                lg: 'auto',\n            }}\n            behavior={Platform.OS === 'ios' ? 'padding' : 'height'}\n            onTouchStart={() => Keyboard.dismiss()}\n            w=\"100%\">\n            <Box px={5} mt={5}>\n                <HStack alignItems=\"center\" justifyContent=\"space-between\" w=\"100%\" py={5}>\n                    <Box pr={3}>\n                        <Icon as={MaterialIcons} name=\"warning\" size={50} color=\"plainText.800\" />\n                    </Box>\n                    <Heading flex={1} textAlign=\"left\" color=\"plainText.800\" alignSelf=\"center\">\n                        Are you sure you want to delete your account?\n                    </Heading>\n                </HStack>\n                <Text fontSize=\"md\" textAlign=\"center\" fontStyle=\"italic\" color=\"plainText.800\">\n                    Enter the credentials associated with {user.email} to confirm.\n                </Text>\n                <FormInput\n                    mt={1}\n                    key=\"email\"\n                    name=\"email\"\n                    control={control}\n                    isInvalid={'email' in errors}\n                    label=\"Enter your email\"\n                    placeholder=\"Email\"\n                    defaultValue=\"\"\n                    errorMessage={errors?.email?.message}\n                />\n                <FormInput\n                    key=\"password\"\n                    name=\"password\"\n                    control={control}\n                    isInvalid={'password' in errors}\n                    password\n                    label=\"Enter your new password\"\n                    placeholder=\"Enter your password\"\n                    defaultValue=\"\"\n                    errorMessage={errors?.password?.message}\n                />\n                {isError ? (\n                    <Text color=\"danger.600\" textAlign=\"center\" mt={5}>\n                        {error?.message}\n                    </Text>\n                ) : null}\n                <Button\n                    colorScheme=\"danger\"\n                    isLoading={isLoading}\n                    mt={8}\n                    onPress={handleSubmit(confirmDeleteAccount)}>\n                    Delete\n                </Button>\n                <Button variant=\"ghost\" my={5} onPress={navigation.goBack}>\n                    Cancel\n                </Button>\n            </Box>\n        </KeyboardAvoidingView>\n    );\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}
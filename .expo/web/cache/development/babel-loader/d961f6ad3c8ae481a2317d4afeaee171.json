{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"children\"];\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nimport cloneDeep from 'lodash.clonedeep';\nimport React from 'react';\nimport PresenceTransition from \"./PresenceTransition\";\nimport { useHasResponsiveProps } from \"../../../hooks/useHasResponsiveProps\";\nvar defaultStaggerConfig = {\n  offset: 0,\n  reverse: false\n};\nvar Stagger = function Stagger(_ref) {\n  var children = _ref.children,\n    restProps = _objectWithoutProperties(_ref, _excluded);\n  if (useHasResponsiveProps(restProps)) {\n    return null;\n  }\n  return React.Children.map(children, function (child, index) {\n    var clonedAnimationConfig = cloneDeep(restProps);\n    var animate = clonedAnimationConfig.animate,\n      exit = clonedAnimationConfig.exit;\n    if (animate) {\n      var _animate$transition$d, _animate$transition$s;\n      if (!animate.transition) {\n        animate.transition = {};\n      }\n      animate.transition.delay = (_animate$transition$d = animate.transition.delay) !== null && _animate$transition$d !== void 0 ? _animate$transition$d : 0;\n      var stagger = (_animate$transition$s = animate.transition.stagger) !== null && _animate$transition$s !== void 0 ? _animate$transition$s : defaultStaggerConfig;\n      var offset = stagger.reverse ? (React.Children.count(children) - 1 - index) * stagger.offset : index * stagger.offset;\n      animate.transition.delay = animate.transition.delay + offset;\n    }\n    if (exit) {\n      var _exit$transition$dela, _exit$transition$stag;\n      if (!exit.transition) {\n        exit.transition = {};\n      }\n      exit.transition.delay = (_exit$transition$dela = exit.transition.delay) !== null && _exit$transition$dela !== void 0 ? _exit$transition$dela : 0;\n      var _stagger = (_exit$transition$stag = exit.transition.stagger) !== null && _exit$transition$stag !== void 0 ? _exit$transition$stag : defaultStaggerConfig;\n      var _offset = _stagger.reverse ? (React.Children.count(children) - 1 - index) * _stagger.offset : index * _stagger.offset;\n      exit.transition.delay = exit.transition.delay + _offset;\n    }\n    return React.createElement(PresenceTransition, _extends({\n      key: child.key\n    }, clonedAnimationConfig), child);\n  });\n};\nexport default Stagger;","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;AAAA,OAAOA,SAAP,MAAsB,kBAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,kBAAP;AAEA,SAASC,qBAAT;AA+BA,IAAMC,oBAAoC,GAAG;EAAEC,MAAM,EAAE,CAAV;EAAaC,OAAO,EAAE;AAAtB,CAA7C;AAEA,IAAMC,OAAO,GAAG,SAAVA,OAAO,OAAkD;EAAA,IAA5CC,QAAF,QAAEA,QAAF;IAAeC;EAE9B,IAAIN,qBAAqB,CAACM,SAAD,CAAzB,EAAsC;IACpC,OAAO,IAAP;EACD;EACD,OAAOR,KAAK,CAACS,QAAN,CAAeC,GAAf,CAAmBH,QAAnB,EAA6B,UAACI,KAAD,EAAQC,KAAR,EAAkB;IACpD,IAAMC,qBAAqB,GAAGd,SAAS,CAACS,SAAD,CAAvC;IACA,IAAQM,OAAF,GAAoBD,qBAA1B,CAAQC,OAAF;MAAWC,OAASF,qBAA1B,CAAiBE;IAEjB,IAAID,OAAJ,EAAa;MAAA;MACX,IAAI,CAACA,OAAO,CAACE,UAAb,EAAyB;QACvBF,OAAO,CAACE,UAAR,GAAqB,EAArB;MACD;MACDF,OAAO,CAACE,UAAR,CAAmBC,KAAnB,4BAA2BH,OAAO,CAACE,UAAR,CAAmBC,KAA9C,yEAAuD,CAAvD;MACA,IAAMC,OAAO,4BAAGJ,OAAO,CAACE,UAAR,CAAmBE,OAAtB,yEAAiCf,oBAA9C;MACA,IAAMC,MAAM,GAAGc,OAAO,CAACb,OAAR,GACX,CAACL,KAAK,CAACS,QAAN,CAAeU,KAAf,CAAqBZ,QAArB,IAAiC,CAAjC,GAAqCK,KAAtC,IAA+CM,OAAO,CAACd,MAD5C,GAEXQ,KAAK,GAAGM,OAAO,CAACd,MAFpB;MAGAU,OAAO,CAACE,UAAR,CAAmBC,KAAnB,GAA2BH,OAAO,CAACE,UAAR,CAAmBC,KAAnB,GAA2Bb,MAAtD;IACD;IAED,IAAIW,IAAJ,EAAU;MAAA;MACR,IAAI,CAACA,IAAI,CAACC,UAAV,EAAsB;QACpBD,IAAI,CAACC,UAAL,GAAkB,EAAlB;MACD;MACDD,IAAI,CAACC,UAAL,CAAgBC,KAAhB,4BAAwBF,IAAI,CAACC,UAAL,CAAgBC,KAAxC,yEAAiD,CAAjD;MACA,IAAMC,QAAO,4BAAGH,IAAI,CAACC,UAAL,CAAgBE,OAAnB,yEAA8Bf,oBAA3C;MACA,IAAMC,OAAM,GAAGc,QAAO,CAACb,OAAR,GACX,CAACL,KAAK,CAACS,QAAN,CAAeU,KAAf,CAAqBZ,QAArB,IAAiC,CAAjC,GAAqCK,KAAtC,IAA+CM,QAAO,CAACd,MAD5C,GAEXQ,KAAK,GAAGM,QAAO,CAACd,MAFpB;MAGAW,IAAI,CAACC,UAAL,CAAgBC,KAAhB,GAAwBF,IAAI,CAACC,UAAL,CAAgBC,KAAhB,GAAwBb,OAAhD;IACD;IAED,OACEJ,oBAACC,kBAAD;MAAoBmB,GAAG,EAAET,KAAK,CAACS;IAA/B,GAAwCP,qBAAxC,GACGF,KADH,CADF;EAKD,CAjCM,CAAP;AAkCD,CAvCD;AAyCA,eAAeL,OAAf","names":["cloneDeep","React","PresenceTransition","useHasResponsiveProps","defaultStaggerConfig","offset","reverse","Stagger","children","restProps","Children","map","child","index","clonedAnimationConfig","animate","exit","transition","delay","stagger","count","key"],"sources":["Stagger.tsx"],"sourcesContent":["import cloneDeep from 'lodash.clonedeep';\nimport React from 'react';\nimport PresenceTransition from './PresenceTransition';\nimport type { ISupportedTransitions, ITransitionConfig } from './types';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\n\ninterface IStaggerConfig {\n  offset: number;\n  reverse?: boolean;\n}\n\nexport interface IStaggerStyleProps extends ISupportedTransitions {\n  transition?: ITransitionConfig & { stagger?: IStaggerConfig };\n}\n\ninterface IStaggerProps {\n  children: any;\n  /**\n   * Initial styles before the transition starts\n   */\n  initial?: ISupportedTransitions;\n  /**\n   * The styles to which each child should animate to while entering.\n   */\n  animate?: IStaggerStyleProps;\n  /**\n   * The styles to which each child should animate to while exiting.\n   */\n  exit?: IStaggerStyleProps;\n  /**\n   * Determines whether to start the animation\n   */\n  visible?: boolean;\n}\n\nconst defaultStaggerConfig: IStaggerConfig = { offset: 0, reverse: false };\n\nconst Stagger = ({ children, ...restProps }: IStaggerProps) => {\n  //TODO: refactor for responsive prop\n  if (useHasResponsiveProps(restProps)) {\n    return null;\n  }\n  return React.Children.map(children, (child, index) => {\n    const clonedAnimationConfig = cloneDeep(restProps);\n    const { animate, exit } = clonedAnimationConfig;\n\n    if (animate) {\n      if (!animate.transition) {\n        animate.transition = {};\n      }\n      animate.transition.delay = animate.transition.delay ?? 0;\n      const stagger = animate.transition.stagger ?? defaultStaggerConfig;\n      const offset = stagger.reverse\n        ? (React.Children.count(children) - 1 - index) * stagger.offset\n        : index * stagger.offset;\n      animate.transition.delay = animate.transition.delay + offset;\n    }\n\n    if (exit) {\n      if (!exit.transition) {\n        exit.transition = {};\n      }\n      exit.transition.delay = exit.transition.delay ?? 0;\n      const stagger = exit.transition.stagger ?? defaultStaggerConfig;\n      const offset = stagger.reverse\n        ? (React.Children.count(children) - 1 - index) * stagger.offset\n        : index * stagger.offset;\n      exit.transition.delay = exit.transition.delay + offset;\n    }\n\n    return (\n      <PresenceTransition key={child.key} {...clonedAnimationConfig}>\n        {child}\n      </PresenceTransition>\n    );\n  });\n};\n\nexport default Stagger;\n"]},"metadata":{},"sourceType":"module"}
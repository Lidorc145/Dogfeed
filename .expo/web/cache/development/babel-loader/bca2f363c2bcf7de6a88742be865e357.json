{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React from 'react';\nimport { Button, Box, FormControl, KeyboardAvoidingView, useToast, Icon } from 'native-base';\nimport { ImageUploader } from \"../components/image-uploader\";\nimport { FormInput } from \"../components/form-input\";\nimport { useForm } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { editProfileSchema } from \"../utils/schemas\";\nimport { useSetUserImageMutation, useUpdateUserFieldsMutation } from \"../services/user-api\";\nimport { useAppSelector } from \"../ducks/useful-hooks\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { AlertToast } from \"../components/alert-toast\";\nimport { MaterialIcons } from '@expo/vector-icons';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport var SettingsScreen = function SettingsScreen(_ref) {\n  var _errors$firstName, _errors$lastName;\n  var navigation = _ref.navigation;\n  var initialUserData = useAppSelector(function (state) {\n    return state.user;\n  });\n  var _useUpdateUserFieldsM = useUpdateUserFieldsMutation(),\n    _useUpdateUserFieldsM2 = _slicedToArray(_useUpdateUserFieldsM, 2),\n    updateUser = _useUpdateUserFieldsM2[0],\n    _useUpdateUserFieldsM3 = _useUpdateUserFieldsM2[1],\n    _useUpdateUserFieldsM4 = _useUpdateUserFieldsM3.data,\n    user = _useUpdateUserFieldsM4 === void 0 ? initialUserData : _useUpdateUserFieldsM4,\n    userLoading = _useUpdateUserFieldsM3.isLoading,\n    userError = _useUpdateUserFieldsM3.error;\n  var _useSetUserImageMutat = useSetUserImageMutation(),\n    _useSetUserImageMutat2 = _slicedToArray(_useSetUserImageMutat, 2),\n    setUserImage = _useSetUserImageMutat2[0],\n    imageError = _useSetUserImageMutat2[1].error;\n  var toast = useToast();\n  var _useForm = useForm({\n      resolver: yupResolver(editProfileSchema)\n    }),\n    control = _useForm.control,\n    handleSubmit = _useForm.handleSubmit,\n    _useForm$formState = _useForm.formState,\n    errors = _useForm$formState.errors,\n    isDirty = _useForm$formState.isDirty,\n    isSubmitting = _useForm$formState.isSubmitting;\n  var handleUserUpdate = function _callee(_ref2) {\n    var firstName, lastName, data;\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            firstName = _ref2.firstName, lastName = _ref2.lastName;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(updateUser({\n              id: user.id,\n              firstName: firstName,\n              lastName: lastName\n            }).unwrap());\n          case 3:\n            data = _context.sent;\n            toast.show({\n              placement: 'bottom',\n              render: function render() {\n                return _jsx(AlertToast, {\n                  title: data.id ? 'Settings Updated' : 'Error with updating settings.',\n                  type: data.id ? 'success' : 'danger',\n                  message: data.id ? 'Your settings have been updated successfully.' : userError == null ? void 0 : userError.message,\n                  toExit: function toExit() {\n                    return toast.close('user-toast');\n                  }\n                });\n              },\n              id: 'user-toast'\n            });\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n  var handleImageUpload = function _callee2(imageUri) {\n    var data;\n    return _regeneratorRuntime.async(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            if (!imageUri) {\n              _context2.next = 5;\n              break;\n            }\n            _context2.next = 3;\n            return _regeneratorRuntime.awrap(setUserImage(imageUri).unwrap());\n          case 3:\n            data = _context2.sent;\n            toast.show({\n              placement: 'bottom',\n              render: function render() {\n                return _jsx(AlertToast, {\n                  title: data.length ? 'Image Uploaded' : 'Error with image upload.',\n                  type: data.length ? 'success' : 'danger',\n                  message: data.length ? 'Your profile image has been successfull changed.' : imageError == null ? void 0 : imageError.message,\n                  toExit: function toExit() {\n                    return toast.close('im-toast');\n                  }\n                });\n              },\n              id: 'im-toast'\n            });\n          case 5:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n  return _jsx(KeyboardAvoidingView, {\n    h: {\n      lg: 'auto'\n    },\n    behavior: Platform.OS === 'ios' ? 'padding' : 'height',\n    onTouchStart: function onTouchStart() {\n      return Keyboard.dismiss();\n    },\n    w: \"100%\",\n    children: _jsxs(Box, {\n      px: 5,\n      children: [_jsx(ImageUploader, {\n        handleImageUri: function handleImageUri(uri) {\n          return handleImageUpload(uri);\n        },\n        uri: user.image,\n        user: user\n      }), _jsxs(FormControl, {\n        children: [_jsx(FormInput, {\n          name: \"firstName\",\n          control: control,\n          isInvalid: 'firstName' in errors,\n          label: \"Enter your first name\",\n          placeholder: \"First Name\",\n          defaultValue: user.firstName ? user.firstName : '',\n          errorMessage: errors == null ? void 0 : (_errors$firstName = errors.firstName) == null ? void 0 : _errors$firstName.message\n        }, \"firstName\"), _jsx(FormInput, {\n          name: \"lastName\",\n          control: control,\n          isInvalid: 'lastName' in errors,\n          label: \"Enter your last name\",\n          placeholder: \"Last Name\",\n          defaultValue: user.lastName ? user.lastName : '',\n          errorMessage: errors == null ? void 0 : (_errors$lastName = errors.lastName) == null ? void 0 : _errors$lastName.message\n        }, \"lastName\"), _jsx(Button, {\n          isLoading: isSubmitting || userLoading,\n          isDisabled: !isDirty,\n          mt: 8,\n          my: 3,\n          onPress: handleSubmit(handleUserUpdate),\n          children: \"Save Changes\"\n        })]\n      }), _jsx(Button, {\n        variant: \"subtle\",\n        my: 2,\n        endIcon: _jsx(Icon, {\n          as: MaterialIcons,\n          name: \"arrow-forward-ios\"\n        }),\n        onPress: function onPress() {\n          return navigation.navigate('Password');\n        },\n        children: \"Change Password\"\n      }), _jsx(Button, {\n        variant: \"subtle\",\n        mb: 7,\n        endIcon: _jsx(Icon, {\n          as: MaterialIcons,\n          name: \"arrow-forward-ios\"\n        }),\n        onPress: function onPress() {\n          return navigation.navigate('Email');\n        },\n        children: \"Change Email\"\n      }), _jsx(Button, {\n        variant: \"ghost\",\n        colorScheme: \"danger\",\n        endIcon: _jsx(Icon, {\n          as: MaterialIcons,\n          name: \"arrow-forward-ios\"\n        }),\n        onPress: function onPress() {\n          return navigation.navigate('DeleteAccount');\n        },\n        children: \"Delete Account\"\n      })]\n    })\n  });\n};","map":{"version":3,"names":["React","Button","Box","FormControl","KeyboardAvoidingView","useToast","Icon","ImageUploader","FormInput","useForm","yupResolver","editProfileSchema","useSetUserImageMutation","useUpdateUserFieldsMutation","useAppSelector","AlertToast","MaterialIcons","SettingsScreen","navigation","initialUserData","state","user","updateUser","data","userLoading","isLoading","userError","error","setUserImage","imageError","toast","resolver","control","handleSubmit","formState","errors","isDirty","isSubmitting","handleUserUpdate","firstName","lastName","id","unwrap","show","placement","render","message","close","handleImageUpload","imageUri","length","lg","Platform","OS","Keyboard","dismiss","uri","image","navigate"],"sources":["C:/Users/LidorCohen/Desktop/Dogfeel/src/screens/settings.tsx"],"sourcesContent":["/* eslint-disable react-hooks/exhaustive-deps */\nimport React from 'react';\nimport { Button, Box, FormControl, KeyboardAvoidingView, useToast, Icon } from 'native-base';\nimport { ImageUploader } from 'src/components/image-uploader';\nimport { FormInput } from 'src/components/form-input';\nimport { useForm } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { editProfileSchema, EditProfileSchemaType } from 'src/utils/schemas';\nimport { useSetUserImageMutation, useUpdateUserFieldsMutation } from 'src/services/user-api';\nimport { useAppSelector } from 'src/ducks/useful-hooks';\nimport { Keyboard, Platform } from 'react-native';\nimport { AlertToast } from 'src/components/alert-toast';\nimport { SettingStackParams } from 'src/navigation/settings-stack';\nimport { StackScreenProps } from '@react-navigation/stack';\nimport { MaterialIcons } from '@expo/vector-icons';\n\ntype SettingScreenProps = StackScreenProps<SettingStackParams, 'Settings'>;\n\nexport /**\n * Settings Screen, used for allowing users to change their information\n *\n * @param {*} { navigation }\n * @return {*}\n */\nconst SettingsScreen: React.FC<SettingScreenProps> = ({ navigation }) => {\n    const initialUserData = useAppSelector((state) => state.user);\n\n    // user image fields mutation\n    const [updateUser, { data: user = initialUserData, isLoading: userLoading, error: userError }] =\n        useUpdateUserFieldsMutation();\n\n    // user image mutation\n    const [setUserImage, { error: imageError }] = useSetUserImageMutation();\n\n    // declare toast\n    const toast = useToast();\n\n    // For more items that be destructured  https://react-hook-form.com/api/useform\n    const {\n        control,\n        handleSubmit,\n        formState: { errors, isDirty, isSubmitting },\n    } = useForm<EditProfileSchemaType>({\n        resolver: yupResolver(editProfileSchema),\n    });\n\n    const handleUserUpdate = async ({ firstName, lastName }: EditProfileSchemaType) => {\n        const data = await updateUser({ id: user.id, firstName, lastName }).unwrap();\n        toast.show({\n            placement: 'bottom',\n            render: () => (\n                <AlertToast\n                    title={data.id ? 'Settings Updated' : 'Error with updating settings.'}\n                    type={data.id ? 'success' : 'danger'}\n                    message={\n                        data.id\n                            ? 'Your settings have been updated successfully.'\n                            : userError?.message\n                    }\n                    toExit={() => toast.close('user-toast')}\n                />\n            ),\n            id: 'user-toast',\n        });\n    };\n\n    const handleImageUpload = async (imageUri: string | undefined) => {\n        if (imageUri) {\n            const data = await setUserImage(imageUri).unwrap();\n            toast.show({\n                placement: 'bottom',\n                render: () => (\n                    <AlertToast\n                        title={data.length ? 'Image Uploaded' : 'Error with image upload.'}\n                        type={data.length ? 'success' : 'danger'}\n                        message={\n                            data.length\n                                ? 'Your profile image has been successfull changed.'\n                                : imageError?.message\n                        }\n                        toExit={() => toast.close('im-toast')}\n                    />\n                ),\n                id: 'im-toast',\n            });\n        }\n    };\n\n    return (\n        <KeyboardAvoidingView\n            h={{\n                lg: 'auto',\n            }}\n            behavior={Platform.OS === 'ios' ? 'padding' : 'height'}\n            onTouchStart={() => Keyboard.dismiss()}\n            w=\"100%\">\n            <Box px={5}>\n                <ImageUploader\n                    handleImageUri={(uri) => handleImageUpload(uri)}\n                    uri={user.image}\n                    user={user}\n                />\n                <FormControl>\n                    <FormInput\n                        key=\"firstName\"\n                        name=\"firstName\"\n                        control={control}\n                        isInvalid={'firstName' in errors}\n                        label=\"Enter your first name\"\n                        placeholder=\"First Name\"\n                        defaultValue={user.firstName ? user.firstName : ''}\n                        errorMessage={errors?.firstName?.message}\n                    />\n                    <FormInput\n                        key=\"lastName\"\n                        name=\"lastName\"\n                        control={control}\n                        isInvalid={'lastName' in errors}\n                        label=\"Enter your last name\"\n                        placeholder=\"Last Name\"\n                        defaultValue={user.lastName ? user.lastName : ''}\n                        errorMessage={errors?.lastName?.message}\n                    />\n                    <Button\n                        isLoading={isSubmitting || userLoading}\n                        isDisabled={!isDirty}\n                        mt={8}\n                        my={3}\n                        onPress={handleSubmit(handleUserUpdate)}>\n                        Save Changes\n                    </Button>\n                </FormControl>\n                <Button\n                    variant=\"subtle\"\n                    my={2}\n                    endIcon={<Icon as={MaterialIcons} name=\"arrow-forward-ios\" />}\n                    onPress={() => navigation.navigate('Password')}>\n                    Change Password\n                </Button>\n                <Button\n                    variant=\"subtle\"\n                    mb={7}\n                    endIcon={<Icon as={MaterialIcons} name=\"arrow-forward-ios\" />}\n                    onPress={() => navigation.navigate('Email')}>\n                    Change Email\n                </Button>\n                <Button\n                    variant=\"ghost\"\n                    colorScheme=\"danger\"\n                    endIcon={<Icon as={MaterialIcons} name=\"arrow-forward-ios\" />}\n                    onPress={() => navigation.navigate('DeleteAccount')}>\n                    Delete Account\n                </Button>\n            </Box>\n        </KeyboardAvoidingView>\n    );\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React from 'react';\nimport useColorScheme from \"react-native-web/dist/exports/useColorScheme\";\nimport { StatusBar } from 'expo-status-bar';\nimport { NativeBaseProvider } from 'native-base';\nimport { Provider } from 'react-redux';\nimport { SSRProvider } from '@react-aria/ssr';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { persistStore } from 'redux-persist';\nimport RootNavigator from \"./navigation\";\nimport { store } from \"./ducks/store\";\nimport { nativeBaseLightTheme, nativeBaseDarkTheme } from \"./constants/theme\";\nimport { useFonts, Nunito_200ExtraLight, Nunito_200ExtraLight_Italic, Nunito_300Light, Nunito_300Light_Italic, Nunito_400Regular, Nunito_400Regular_Italic, Nunito_600SemiBold, Nunito_600SemiBold_Italic, Nunito_700Bold, Nunito_700Bold_Italic, Nunito_800ExtraBold, Nunito_800ExtraBold_Italic, Nunito_900Black, Nunito_900Black_Italic } from '@expo-google-fonts/nunito';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar persistor = persistStore(store);\nexport var App = function App() {\n  var scheme = useColorScheme();\n  var _useFonts = useFonts({\n      Nunito_200ExtraLight: Nunito_200ExtraLight,\n      Nunito_200ExtraLight_Italic: Nunito_200ExtraLight_Italic,\n      Nunito_300Light: Nunito_300Light,\n      Nunito_300Light_Italic: Nunito_300Light_Italic,\n      Nunito_400Regular: Nunito_400Regular,\n      Nunito_400Regular_Italic: Nunito_400Regular_Italic,\n      Nunito_600SemiBold: Nunito_600SemiBold,\n      Nunito_600SemiBold_Italic: Nunito_600SemiBold_Italic,\n      Nunito_700Bold: Nunito_700Bold,\n      Nunito_700Bold_Italic: Nunito_700Bold_Italic,\n      Nunito_800ExtraBold: Nunito_800ExtraBold,\n      Nunito_800ExtraBold_Italic: Nunito_800ExtraBold_Italic,\n      Nunito_900Black: Nunito_900Black,\n      Nunito_900Black_Italic: Nunito_900Black_Italic\n    }),\n    _useFonts2 = _slicedToArray(_useFonts, 1),\n    fontsLoaded = _useFonts2[0];\n  if (!fontsLoaded) {\n    return _jsx(StatusBar, {});\n  }\n  return _jsxs(_Fragment, {\n    children: [_jsx(StatusBar, {}), _jsx(Provider, {\n      store: store,\n      children: _jsx(PersistGate, {\n        loading: null,\n        persistor: persistor,\n        children: _jsx(SSRProvider, {\n          children: _jsx(NativeBaseProvider, {\n            theme: scheme === 'dark' ? nativeBaseDarkTheme : nativeBaseLightTheme,\n            children: _jsx(RootNavigator, {\n              scheme: scheme\n            })\n          })\n        })\n      })\n    })]\n  });\n};","map":{"version":3,"names":["React","StatusBar","NativeBaseProvider","Provider","SSRProvider","PersistGate","persistStore","RootNavigator","store","nativeBaseLightTheme","nativeBaseDarkTheme","useFonts","Nunito_200ExtraLight","Nunito_200ExtraLight_Italic","Nunito_300Light","Nunito_300Light_Italic","Nunito_400Regular","Nunito_400Regular_Italic","Nunito_600SemiBold","Nunito_600SemiBold_Italic","Nunito_700Bold","Nunito_700Bold_Italic","Nunito_800ExtraBold","Nunito_800ExtraBold_Italic","Nunito_900Black","Nunito_900Black_Italic","persistor","App","scheme","useColorScheme","fontsLoaded"],"sources":["C:/Users/LidorCohen/Desktop/Dogfeel/src/index.tsx"],"sourcesContent":["import React from 'react';\nimport { useColorScheme } from 'react-native';\nimport { StatusBar } from 'expo-status-bar';\nimport { NativeBaseProvider } from 'native-base';\nimport { Provider } from 'react-redux';\nimport { SSRProvider } from '@react-aria/ssr';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { persistStore } from 'redux-persist';\nimport RootNavigator from 'src/navigation';\nimport { store } from 'src/ducks/store';\nimport { nativeBaseLightTheme, nativeBaseDarkTheme } from 'src/constants/theme';\nimport {\n    useFonts,\n    Nunito_200ExtraLight,\n    Nunito_200ExtraLight_Italic,\n    Nunito_300Light,\n    Nunito_300Light_Italic,\n    Nunito_400Regular,\n    Nunito_400Regular_Italic,\n    Nunito_600SemiBold,\n    Nunito_600SemiBold_Italic,\n    Nunito_700Bold,\n    Nunito_700Bold_Italic,\n    Nunito_800ExtraBold,\n    Nunito_800ExtraBold_Italic,\n    Nunito_900Black,\n    Nunito_900Black_Italic,\n} from '@expo-google-fonts/nunito';\n\nconst persistor = persistStore(store);\n\n/**\n * Main app file\n *\n * @remarks\n * Will load the google custom fonts along with setting the persistStore and other configuration\n *\n * @return {*}\n */\nexport const App = () => {\n    // hook to find user preference for color scheme\n    const scheme = useColorScheme();\n\n    /**\n     * Load google fonts using expo-font\n     * @resources\n     * expo and googl fonts: https://github.com/expo/google-fonts\n     * blog to setup with nativebase and ts: https://dev.to/nerdjfpb/how-to-use-custom-google-font-with-react-native-expo-nativebase-and-typescript-3jf7\n     */\n    const [fontsLoaded] = useFonts({\n        Nunito_200ExtraLight,\n        Nunito_200ExtraLight_Italic,\n        Nunito_300Light,\n        Nunito_300Light_Italic,\n        Nunito_400Regular,\n        Nunito_400Regular_Italic,\n        Nunito_600SemiBold,\n        Nunito_600SemiBold_Italic,\n        Nunito_700Bold,\n        Nunito_700Bold_Italic,\n        Nunito_800ExtraBold,\n        Nunito_800ExtraBold_Italic,\n        Nunito_900Black,\n        Nunito_900Black_Italic,\n    });\n\n    if (!fontsLoaded) {\n        return <StatusBar />;\n    }\n\n    return (\n        <>\n            <StatusBar />\n            <Provider store={store}>\n                <PersistGate loading={null} persistor={persistor}>\n                    <SSRProvider>\n                        <NativeBaseProvider\n                            theme={scheme === 'dark' ? nativeBaseDarkTheme : nativeBaseLightTheme}>\n                            <RootNavigator scheme={scheme} />\n                        </NativeBaseProvider>\n                    </SSRProvider>\n                </PersistGate>\n            </Provider>\n        </>\n    );\n};\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC;AAE1B,SAASC,SAAS,QAAQ,iBAAiB;AAC3C,SAASC,kBAAkB,QAAQ,aAAa;AAChD,SAASC,QAAQ,QAAQ,aAAa;AACtC,SAASC,WAAW,QAAQ,iBAAiB;AAC7C,SAASC,WAAW,QAAQ,iCAAiC;AAC7D,SAASC,YAAY,QAAQ,eAAe;AAC5C,OAAOC,aAAa;AACpB,SAASC,KAAK;AACd,SAASC,oBAAoB,EAAEC,mBAAmB;AAClD,SACIC,QAAQ,EACRC,oBAAoB,EACpBC,2BAA2B,EAC3BC,eAAe,EACfC,sBAAsB,EACtBC,iBAAiB,EACjBC,wBAAwB,EACxBC,kBAAkB,EAClBC,yBAAyB,EACzBC,cAAc,EACdC,qBAAqB,EACrBC,mBAAmB,EACnBC,0BAA0B,EAC1BC,eAAe,EACfC,sBAAsB,QACnB,2BAA2B;AAAC;AAAA;AAAA;AAEnC,IAAMC,SAAS,GAAGpB,YAAY,CAACE,KAAK,CAAC;AAUrC,OAAO,IAAMmB,GAAG,GAAG,SAANA,GAAG,GAAS;EAErB,IAAMC,MAAM,GAAGC,cAAc,EAAE;EAQ/B,gBAAsBlB,QAAQ,CAAC;MAC3BC,oBAAoB,EAApBA,oBAAoB;MACpBC,2BAA2B,EAA3BA,2BAA2B;MAC3BC,eAAe,EAAfA,eAAe;MACfC,sBAAsB,EAAtBA,sBAAsB;MACtBC,iBAAiB,EAAjBA,iBAAiB;MACjBC,wBAAwB,EAAxBA,wBAAwB;MACxBC,kBAAkB,EAAlBA,kBAAkB;MAClBC,yBAAyB,EAAzBA,yBAAyB;MACzBC,cAAc,EAAdA,cAAc;MACdC,qBAAqB,EAArBA,qBAAqB;MACrBC,mBAAmB,EAAnBA,mBAAmB;MACnBC,0BAA0B,EAA1BA,0BAA0B;MAC1BC,eAAe,EAAfA,eAAe;MACfC,sBAAsB,EAAtBA;IACJ,CAAC,CAAC;IAAA;IAfKK,WAAW;EAiBlB,IAAI,CAACA,WAAW,EAAE;IACd,OAAO,KAAC,SAAS,KAAG;EACxB;EAEA,OACI;IAAA,WACI,KAAC,SAAS,KAAG,EACb,KAAC,QAAQ;MAAC,KAAK,EAAEtB,KAAM;MAAA,UACnB,KAAC,WAAW;QAAC,OAAO,EAAE,IAAK;QAAC,SAAS,EAAEkB,SAAU;QAAA,UAC7C,KAAC,WAAW;UAAA,UACR,KAAC,kBAAkB;YACf,KAAK,EAAEE,MAAM,KAAK,MAAM,GAAGlB,mBAAmB,GAAGD,oBAAqB;YAAA,UACtE,KAAC,aAAa;cAAC,MAAM,EAAEmB;YAAO;UAAG;QAChB;MACX;IACJ,EACP;EAAA,EACZ;AAEX,CAAC"},"metadata":{},"sourceType":"module"}
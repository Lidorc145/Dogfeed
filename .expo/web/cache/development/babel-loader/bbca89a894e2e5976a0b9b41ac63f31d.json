{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nvar _MediaTypeInput;\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { PermissionStatus, Platform } from 'expo-modules-core';\nimport { v4 } from 'uuid';\nimport { MediaTypeOptions } from \"./ImagePicker.types\";\nvar MediaTypeInput = (_MediaTypeInput = {}, _defineProperty(_MediaTypeInput, MediaTypeOptions.All, 'video/mp4,video/quicktime,video/x-m4v,video/*,image/*'), _defineProperty(_MediaTypeInput, MediaTypeOptions.Images, 'image/*'), _defineProperty(_MediaTypeInput, MediaTypeOptions.Videos, 'video/mp4,video/quicktime,video/x-m4v,video/*'), _MediaTypeInput);\nexport default {\n  get name() {\n    return 'ExponentImagePicker';\n  },\n  launchImageLibraryAsync: function launchImageLibraryAsync(_ref) {\n    var _ref$mediaTypes = _ref.mediaTypes,\n      mediaTypes = _ref$mediaTypes === void 0 ? MediaTypeOptions.Images : _ref$mediaTypes,\n      _ref$allowsMultipleSe = _ref.allowsMultipleSelection,\n      allowsMultipleSelection = _ref$allowsMultipleSe === void 0 ? false : _ref$allowsMultipleSe,\n      _ref$base = _ref.base64,\n      base64 = _ref$base === void 0 ? false : _ref$base;\n    return function _callee() {\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (Platform.isDOMAvailable) {\n                _context.next = 2;\n                break;\n              }\n              return _context.abrupt(\"return\", {\n                cancelled: true\n              });\n            case 2:\n              _context.next = 4;\n              return _regeneratorRuntime.awrap(openFileBrowserAsync({\n                mediaTypes: mediaTypes,\n                allowsMultipleSelection: allowsMultipleSelection,\n                base64: base64\n              }));\n            case 4:\n              return _context.abrupt(\"return\", _context.sent);\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }();\n  },\n  launchCameraAsync: function launchCameraAsync(_ref2) {\n    var _ref2$mediaTypes = _ref2.mediaTypes,\n      mediaTypes = _ref2$mediaTypes === void 0 ? MediaTypeOptions.Images : _ref2$mediaTypes,\n      _ref2$allowsMultipleS = _ref2.allowsMultipleSelection,\n      allowsMultipleSelection = _ref2$allowsMultipleS === void 0 ? false : _ref2$allowsMultipleS,\n      _ref2$base = _ref2.base64,\n      base64 = _ref2$base === void 0 ? false : _ref2$base;\n    return function _callee2() {\n      return _regeneratorRuntime.async(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              if (Platform.isDOMAvailable) {\n                _context2.next = 2;\n                break;\n              }\n              return _context2.abrupt(\"return\", {\n                cancelled: true\n              });\n            case 2:\n              _context2.next = 4;\n              return _regeneratorRuntime.awrap(openFileBrowserAsync({\n                mediaTypes: mediaTypes,\n                allowsMultipleSelection: allowsMultipleSelection,\n                capture: true,\n                base64: base64\n              }));\n            case 4:\n              return _context2.abrupt(\"return\", _context2.sent);\n            case 5:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }();\n  },\n  getCameraPermissionsAsync: function getCameraPermissionsAsync() {\n    return function _callee3() {\n      return _regeneratorRuntime.async(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              return _context3.abrupt(\"return\", permissionGrantedResponse());\n            case 1:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }();\n  },\n  requestCameraPermissionsAsync: function requestCameraPermissionsAsync() {\n    return function _callee4() {\n      return _regeneratorRuntime.async(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              return _context4.abrupt(\"return\", permissionGrantedResponse());\n            case 1:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }();\n  },\n  getMediaLibraryPermissionsAsync: function getMediaLibraryPermissionsAsync(_writeOnly) {\n    return function _callee5() {\n      return _regeneratorRuntime.async(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              return _context5.abrupt(\"return\", permissionGrantedResponse());\n            case 1:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }();\n  },\n  requestMediaLibraryPermissionsAsync: function requestMediaLibraryPermissionsAsync(_writeOnly) {\n    return function _callee6() {\n      return _regeneratorRuntime.async(function _callee6$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              return _context6.abrupt(\"return\", permissionGrantedResponse());\n            case 1:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }();\n  }\n};\nfunction permissionGrantedResponse() {\n  return {\n    status: PermissionStatus.GRANTED,\n    expires: 'never',\n    granted: true,\n    canAskAgain: true\n  };\n}\nfunction openFileBrowserAsync(_ref3) {\n  var mediaTypes = _ref3.mediaTypes,\n    _ref3$capture = _ref3.capture,\n    capture = _ref3$capture === void 0 ? false : _ref3$capture,\n    _ref3$allowsMultipleS = _ref3.allowsMultipleSelection,\n    allowsMultipleSelection = _ref3$allowsMultipleS === void 0 ? false : _ref3$allowsMultipleS,\n    base64 = _ref3.base64;\n  var mediaTypeFormat = MediaTypeInput[mediaTypes];\n  var input = document.createElement('input');\n  input.style.display = 'none';\n  input.setAttribute('type', 'file');\n  input.setAttribute('accept', mediaTypeFormat);\n  input.setAttribute('id', v4());\n  if (allowsMultipleSelection) {\n    input.setAttribute('multiple', 'multiple');\n  }\n  if (capture) {\n    input.setAttribute('capture', 'camera');\n  }\n  document.body.appendChild(input);\n  return new Promise(function (resolve, reject) {\n    input.addEventListener('change', function _callee7() {\n      var img, imgs;\n      return _regeneratorRuntime.async(function _callee7$(_context7) {\n        while (1) {\n          switch (_context7.prev = _context7.next) {\n            case 0:\n              if (!input.files) {\n                _context7.next = 12;\n                break;\n              }\n              if (allowsMultipleSelection) {\n                _context7.next = 8;\n                break;\n              }\n              _context7.next = 4;\n              return _regeneratorRuntime.awrap(readFile(input.files[0], {\n                base64: base64\n              }));\n            case 4:\n              img = _context7.sent;\n              resolve(_objectSpread({}, img));\n              _context7.next = 12;\n              break;\n            case 8:\n              _context7.next = 10;\n              return _regeneratorRuntime.awrap(Promise.all(Array.from(input.files).map(function (file) {\n                return readFile(file, {\n                  base64: base64\n                });\n              })));\n            case 10:\n              imgs = _context7.sent;\n              resolve({\n                cancelled: false,\n                selected: imgs\n              });\n            case 12:\n              document.body.removeChild(input);\n            case 13:\n            case \"end\":\n              return _context7.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    });\n    var event = new MouseEvent('click');\n    input.dispatchEvent(event);\n  });\n}\nfunction readFile(targetFile, options) {\n  return new Promise(function (resolve, reject) {\n    var reader = new FileReader();\n    reader.onerror = function () {\n      reject(new Error(\"Failed to read the selected media because the operation failed.\"));\n    };\n    reader.onload = function (_ref4) {\n      var target = _ref4.target;\n      var uri = target.result;\n      var returnRaw = function returnRaw() {\n        return resolve({\n          uri: uri,\n          width: 0,\n          height: 0,\n          cancelled: false\n        });\n      };\n      if (typeof uri === 'string') {\n        var image = new Image();\n        image.src = uri;\n        image.onload = function () {\n          var _image$naturalWidth, _image$naturalHeight;\n          return resolve(_objectSpread({\n            uri: uri,\n            width: (_image$naturalWidth = image.naturalWidth) != null ? _image$naturalWidth : image.width,\n            height: (_image$naturalHeight = image.naturalHeight) != null ? _image$naturalHeight : image.height,\n            cancelled: false\n          }, options.base64 && {\n            base64: uri.substr(uri.indexOf(',') + 1)\n          }));\n        };\n        image.onerror = function () {\n          return returnRaw();\n        };\n      } else {\n        returnRaw();\n      }\n    };\n    reader.readAsDataURL(targetFile);\n  });\n}","map":{"version":3,"mappings":"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","names":["PermissionStatus","Platform","v4","MediaTypeOptions","MediaTypeInput","All","Images","Videos","name","launchImageLibraryAsync","mediaTypes","allowsMultipleSelection","base64","isDOMAvailable","cancelled","openFileBrowserAsync","launchCameraAsync","capture","getCameraPermissionsAsync","permissionGrantedResponse","requestCameraPermissionsAsync","getMediaLibraryPermissionsAsync","_writeOnly","requestMediaLibraryPermissionsAsync","status","GRANTED","expires","granted","canAskAgain","mediaTypeFormat","input","document","createElement","style","display","setAttribute","body","appendChild","Promise","resolve","reject","addEventListener","files","readFile","img","all","Array","from","map","file","imgs","selected","removeChild","event","MouseEvent","dispatchEvent","targetFile","options","reader","FileReader","onerror","Error","onload","target","uri","result","returnRaw","width","height","image","Image","src","naturalWidth","naturalHeight","substr","indexOf","readAsDataURL"],"sourceRoot":"","sources":["../src/ExponentImagePicker.web.ts"],"sourcesContent":["import { PermissionResponse, PermissionStatus, Platform } from 'expo-modules-core';\nimport { v4 } from 'uuid';\n\nimport {\n  ExpandImagePickerResult,\n  ImageInfo,\n  ImagePickerMultipleResult,\n  ImagePickerResult,\n  MediaTypeOptions,\n  OpenFileBrowserOptions,\n} from './ImagePicker.types';\n\nconst MediaTypeInput = {\n  [MediaTypeOptions.All]: 'video/mp4,video/quicktime,video/x-m4v,video/*,image/*',\n  [MediaTypeOptions.Images]: 'image/*',\n  [MediaTypeOptions.Videos]: 'video/mp4,video/quicktime,video/x-m4v,video/*',\n};\n\nexport default {\n  get name(): string {\n    return 'ExponentImagePicker';\n  },\n\n  async launchImageLibraryAsync({\n    mediaTypes = MediaTypeOptions.Images,\n    allowsMultipleSelection = false,\n    base64 = false,\n  }): Promise<ImagePickerResult | ImagePickerMultipleResult> {\n    // SSR guard\n    if (!Platform.isDOMAvailable) {\n      return { cancelled: true };\n    }\n    return await openFileBrowserAsync({\n      mediaTypes,\n      allowsMultipleSelection,\n      base64,\n    });\n  },\n\n  async launchCameraAsync({\n    mediaTypes = MediaTypeOptions.Images,\n    allowsMultipleSelection = false,\n    base64 = false,\n  }): Promise<ImagePickerResult | ImagePickerMultipleResult> {\n    // SSR guard\n    if (!Platform.isDOMAvailable) {\n      return { cancelled: true };\n    }\n    return await openFileBrowserAsync({\n      mediaTypes,\n      allowsMultipleSelection,\n      capture: true,\n      base64,\n    });\n  },\n\n  /*\n   * Delegate to expo-permissions to request camera permissions\n   */\n  async getCameraPermissionsAsync() {\n    return permissionGrantedResponse();\n  },\n  async requestCameraPermissionsAsync() {\n    return permissionGrantedResponse();\n  },\n\n  /*\n   * Camera roll permissions don't need to be requested on web, so we always\n   * respond with granted.\n   */\n  async getMediaLibraryPermissionsAsync(_writeOnly: boolean) {\n    return permissionGrantedResponse();\n  },\n  async requestMediaLibraryPermissionsAsync(_writeOnly: boolean): Promise<PermissionResponse> {\n    return permissionGrantedResponse();\n  },\n};\n\nfunction permissionGrantedResponse(): PermissionResponse {\n  return {\n    status: PermissionStatus.GRANTED,\n    expires: 'never',\n    granted: true,\n    canAskAgain: true,\n  };\n}\n\nfunction openFileBrowserAsync<T extends OpenFileBrowserOptions>({\n  mediaTypes,\n  capture = false,\n  allowsMultipleSelection = false,\n  base64,\n}: T): Promise<ExpandImagePickerResult<T>> {\n  const mediaTypeFormat = MediaTypeInput[mediaTypes];\n\n  const input = document.createElement('input');\n  input.style.display = 'none';\n  input.setAttribute('type', 'file');\n  input.setAttribute('accept', mediaTypeFormat);\n  input.setAttribute('id', v4());\n  if (allowsMultipleSelection) {\n    input.setAttribute('multiple', 'multiple');\n  }\n  if (capture) {\n    input.setAttribute('capture', 'camera');\n  }\n  document.body.appendChild(input);\n\n  return new Promise((resolve, reject) => {\n    input.addEventListener('change', async () => {\n      if (input.files) {\n        if (!allowsMultipleSelection) {\n          const img: ImageInfo = await readFile(input.files[0], { base64 });\n          resolve({\n            ...img,\n          } as ExpandImagePickerResult<T>);\n        } else {\n          const imgs: ImageInfo[] = await Promise.all(\n            Array.from(input.files).map((file) => readFile(file, { base64 }))\n          );\n          resolve({\n            cancelled: false,\n            selected: imgs,\n          } as ExpandImagePickerResult<T>);\n        }\n      }\n      document.body.removeChild(input);\n    });\n\n    const event = new MouseEvent('click');\n    input.dispatchEvent(event);\n  });\n}\n\nfunction readFile(targetFile: Blob, options: { base64: boolean }): Promise<ImageInfo> {\n  return new Promise((resolve, reject) => {\n    const reader = new FileReader();\n    reader.onerror = () => {\n      reject(new Error(`Failed to read the selected media because the operation failed.`));\n    };\n    reader.onload = ({ target }) => {\n      const uri = (target as any).result;\n      const returnRaw = () =>\n        resolve({\n          uri,\n          width: 0,\n          height: 0,\n          cancelled: false,\n        });\n\n      if (typeof uri === 'string') {\n        const image = new Image();\n        image.src = uri;\n        image.onload = () =>\n          resolve({\n            uri,\n            width: image.naturalWidth ?? image.width,\n            height: image.naturalHeight ?? image.height,\n            cancelled: false,\n            // The blob's result cannot be directly decoded as Base64 without\n            // first removing the Data-URL declaration preceding the\n            // Base64-encoded data. To retrieve only the Base64 encoded string,\n            // first remove data:*/*;base64, from the result.\n            // https://developer.mozilla.org/en-US/docs/Web/API/FileReader/readAsDataURL\n            ...(options.base64 && { base64: uri.substr(uri.indexOf(',') + 1) }),\n          });\n        image.onerror = () => returnRaw();\n      } else {\n        returnRaw();\n      }\n    };\n\n    reader.readAsDataURL(targetFile);\n  });\n}\n"]},"metadata":{},"sourceType":"module"}
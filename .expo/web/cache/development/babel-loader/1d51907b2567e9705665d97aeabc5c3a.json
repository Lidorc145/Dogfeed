{"ast":null,"code":"import ConvertNumberIntoHex from 'normalize-css-color';\nvar processColor = function processColor(color) {\n  if (color === undefined || color === null) {\n    return color;\n  }\n  var int32Color = ConvertNumberIntoHex(color);\n  if (int32Color === undefined || int32Color === null) {\n    return undefined;\n  }\n  int32Color = (int32Color << 24 | int32Color >>> 8) >>> 0;\n  return int32Color;\n};\nvar isWebColor = function isWebColor(color) {\n  return color === 'currentcolor' || color === 'currentColor' || color === 'inherit' || color.indexOf('var(') === 0;\n};\nvar normalizeColor = function normalizeColor(color) {\n  var opacity = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n  if (color == null) return;\n  if (typeof color === 'string' && isWebColor(color)) {\n    return color;\n  }\n  var colorInt = processColor(color);\n  if (colorInt != null) {\n    var r = colorInt >> 16 & 255;\n    var g = colorInt >> 8 & 255;\n    var b = colorInt & 255;\n    var a = (colorInt >> 24 & 255) / 255;\n    var alpha = (a * opacity).toFixed(2);\n    return \"rgba(\".concat(r, \",\").concat(g, \",\").concat(b, \",\").concat(alpha, \")\");\n  }\n};\nexport default normalizeColor;","map":{"version":3,"mappings":"AAIA,OAAOA,oBAAP,MAAiC,qBAAjC;AAEA,IAAMC,YAAY,GAAIC,SAAhBD,YAAY,CAAIC,KAAD,EAAsB;EACzC,IAAIA,KAAK,KAAKC,SAAV,IAAuBD,KAAK,KAAK,IAArC,EAA2C;IACzC,OAAOA,KAAP;EACD;EAGD,IAAIE,UAAU,GAAGJ,oBAAoB,CAACE,KAAD,CAArC;EACA,IAAIE,UAAU,KAAKD,SAAf,IAA4BC,UAAU,KAAK,IAA/C,EAAqD;IACnD,OAAOD,SAAP;EACD;EAEDC,UAAU,GAAG,CAAEA,UAAU,IAAI,EAAf,GAAsBA,UAAU,KAAK,CAAtC,MAA8C,CAA3D;EAEA,OAAOA,UAAP;AACD,CAdD;AAgBA,IAAMC,UAAU,GAAIH,SAAdG,UAAU,CAAIH,KAAD;EAAA,OACjBA,KAAK,KAAK,cAAV,IACAA,KAAK,KAAK,cADV,IAEAA,KAAK,KAAK,SAFV,IAGAA,KAAK,CAACI,OAAN,CAAc,MAAd,MAA0B,CAJ5B;AAAA;AAMA,IAAMC,cAAc,GAAG,SAAjBA,cAAc,CAClBL,KADqB,EAGH;EAAA,IADlBM,OAAe,uEAAG,CAFG;EAIrB,IAAIN,KAAK,IAAI,IAAb,EAAmB;EAEnB,IAAI,OAAOA,KAAP,KAAiB,QAAjB,IAA6BG,UAAU,CAACH,KAAD,CAA3C,EAAoD;IAClD,OAAOA,KAAP;EACD;EAED,IAAMO,QAAQ,GAAGR,YAAY,CAACC,KAAD,CAA7B;EACA,IAAIO,QAAQ,IAAI,IAAhB,EAAsB;IACpB,IAAMC,CAAC,GAAID,QAAQ,IAAI,EAAb,GAAmB,GAA7B;IACA,IAAME,CAAC,GAAIF,QAAQ,IAAI,CAAb,GAAkB,GAA5B;IACA,IAAMG,CAAC,GAAGH,QAAQ,GAAG,GAArB;IACA,IAAMI,CAAC,GAAG,CAAEJ,QAAQ,IAAI,EAAb,GAAmB,GAApB,IAA2B,GAArC;IACA,IAAMK,KAAK,GAAG,CAACD,CAAC,GAAGL,OAAL,EAAcO,OAAd,CAAsB,CAAtB,CAAd;IACA,sBAAeL,CAAf,cAAoBC,CAApB,cAAyBC,CAAzB,cAA8BE,KAA9B;EACD;AACF,CAnBD;AAqBA,eAAeP,cAAf","names":["ConvertNumberIntoHex","processColor","color","undefined","int32Color","isWebColor","indexOf","normalizeColor","opacity","colorInt","r","g","b","a","alpha","toFixed"],"sources":["normalizeColor.ts"],"sourcesContent":["/* eslint-disable */\n//@ts-nocheck\n// This functions is taken from react native web\n\nimport ConvertNumberIntoHex from 'normalize-css-color';\n\nconst processColor = (color?: any): any => {\n  if (color === undefined || color === null) {\n    return color;\n  }\n\n  // convert number and hex\n  let int32Color = ConvertNumberIntoHex(color);\n  if (int32Color === undefined || int32Color === null) {\n    return undefined;\n  }\n  //@ts-ignore\n  int32Color = ((int32Color << 24) | (int32Color >>> 8)) >>> 0;\n\n  return int32Color;\n};\n\nconst isWebColor = (color: string): boolean =>\n  color === 'currentcolor' ||\n  color === 'currentColor' ||\n  color === 'inherit' ||\n  color.indexOf('var(') === 0;\n\nconst normalizeColor = (\n  color?: number | string,\n  opacity: number = 1\n): void | string => {\n  if (color == null) return;\n\n  if (typeof color === 'string' && isWebColor(color)) {\n    return color;\n  }\n\n  const colorInt = processColor(color);\n  if (colorInt != null) {\n    const r = (colorInt >> 16) & 255;\n    const g = (colorInt >> 8) & 255;\n    const b = colorInt & 255;\n    const a = ((colorInt >> 24) & 255) / 255;\n    const alpha = (a * opacity).toFixed(2);\n    return `rgba(${r},${g},${b},${alpha})`;\n  }\n};\n\nexport default normalizeColor;\n"]},"metadata":{},"sourceType":"module"}
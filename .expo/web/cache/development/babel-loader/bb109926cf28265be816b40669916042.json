{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"children\"],\n  _excluded2 = [\"in\", \"entryDuration\", \"exitDuration\"];\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nimport React from 'react';\nimport PresenceTransition from \"../Transitions/PresenceTransition\";\nimport { useHasResponsiveProps } from \"../../../hooks/useHasResponsiveProps\";\nimport { usePropsResolution } from \"../../../hooks/\";\nvar Fade = function Fade(_ref, ref) {\n  var children = _ref.children,\n    props = _objectWithoutProperties(_ref, _excluded);\n  var _usePropsResolution = usePropsResolution('Fade', props),\n    animationState = _usePropsResolution.in,\n    entryDuration = _usePropsResolution.entryDuration,\n    exitDuration = _usePropsResolution.exitDuration,\n    resolvedProps = _objectWithoutProperties(_usePropsResolution, _excluded2);\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n  if (entryDuration) {\n    resolvedProps.animate.transition.duration = entryDuration;\n  }\n  if (exitDuration) {\n    resolvedProps.exit.transition.duration = exitDuration;\n  }\n  return React.createElement(PresenceTransition, _extends({\n    visible: animationState,\n    ref: ref\n  }, resolvedProps), children);\n};\nexport default React.memo(React.forwardRef(Fade));","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,kBAAP;AAEA,SAASC,qBAAT;AACA,SAASC,kBAAT;AAEA,IAAMC,IAAI,GAAG,SAAPA,IAAI,OAAwCC,GAArC,EAAmD;EAAA,IAAhDC,QAAF,QAAEA,QAAF;IAAeC;EAC3B,0BAKIJ,kBAAkB,CAAC,MAAD,EAASI,KAAT,CALtB;IACMC,cADA,uBACJC,EAAE;IACFC,aAFI,uBAEJA,aAFI;IAGJC,YAHI,uBAGJA,YAHI;IAIDC;EAGL,IAAIV,qBAAqB,CAACK,KAAD,CAAzB,EAAkC;IAChC,OAAO,IAAP;EACD;EAED,IAAIG,aAAJ,EAAmB;IACjBE,aAAa,CAACC,OAAd,CAAsBC,UAAtB,CAAiCC,QAAjC,GAA4CL,aAA5C;EACD;EACD,IAAIC,YAAJ,EAAkB;IAChBC,aAAa,CAACI,IAAd,CAAmBF,UAAnB,CAA8BC,QAA9B,GAAyCJ,YAAzC;EACD;EAED,OACEX,oBAACC,kBAAD;IAAoBgB,OAAO,EAAET,cAA7B;IAA6CH,GAAG,EAAEA;EAAlD,GAA2DO,aAA3D,GACGN,QADH,CADF;AAKD,CAxBD;AA0BA,eAAeN,KAAK,CAACkB,IAAN,CAAWlB,KAAK,CAACmB,UAAN,CAAiBf,IAAjB,CAAX,CAAf","names":["React","PresenceTransition","useHasResponsiveProps","usePropsResolution","Fade","ref","children","props","animationState","in","entryDuration","exitDuration","resolvedProps","animate","transition","duration","exit","visible","memo","forwardRef"],"sources":["Fade.tsx"],"sourcesContent":["import React from 'react';\nimport PresenceTransition from '../Transitions/PresenceTransition';\nimport type { IFadeProps } from './types';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\nimport { usePropsResolution } from '../../../hooks/';\n\nconst Fade = ({ children, ...props }: IFadeProps, ref?: any) => {\n  const {\n    in: animationState,\n    entryDuration,\n    exitDuration,\n    ...resolvedProps\n  } = usePropsResolution('Fade', props);\n  //TODO: refactor for responsive prop\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n\n  if (entryDuration) {\n    resolvedProps.animate.transition.duration = entryDuration;\n  }\n  if (exitDuration) {\n    resolvedProps.exit.transition.duration = exitDuration;\n  }\n\n  return (\n    <PresenceTransition visible={animationState} ref={ref} {...resolvedProps}>\n      {children}\n    </PresenceTransition>\n  );\n};\n\nexport default React.memo(React.forwardRef(Fade));\n"]},"metadata":{},"sourceType":"module"}
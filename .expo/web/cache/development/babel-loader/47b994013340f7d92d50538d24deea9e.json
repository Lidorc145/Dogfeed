{"ast":null,"code":"import React from 'react';\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport { ExploreScreen, HomeScreen } from \"../screens\";\nimport { MaterialCommunityIcons, MaterialIcons } from '@expo/vector-icons';\nimport { Icon, IconButton } from 'native-base';\nimport { useAppSelector } from \"../ducks/useful-hooks\";\nimport { AuthStackNavigator } from \"./auth-stack\";\nimport { SettingsStack } from \"./settings-stack\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar StackNav = createNativeStackNavigator();\nvar CloseIcon = function CloseIcon(onClose) {\n  return _jsx(MaterialCommunityIcons, {\n    name: \"close\",\n    size: 22,\n    onPress: onClose\n  });\n};\nvar SettingsButton = function SettingsButton(onPress, isDisabled) {\n  return _jsx(IconButton, {\n    isDisabled: isDisabled,\n    alignSelf: \"flex-end\",\n    variant: \"unstyled\",\n    icon: _jsx(Icon, {\n      as: MaterialIcons,\n      name: \"settings\",\n      size: \"lg\",\n      color: \"primary.700\"\n    }),\n    onPress: isDisabled ? null : onPress\n  });\n};\nexport var HomeStackNavigator = function HomeStackNavigator(_ref) {\n  var navigation = _ref.navigation;\n  var isAnonymous = useAppSelector(function (state) {\n    return state.user.isAnonymous;\n  });\n  var checkLogin = function checkLogin() {\n    Alert.alert('Are you sure you want to exit?', 'Your progress will not be saved.', [{\n      text: 'Exit',\n      onPress: navigation.goBack,\n      style: 'destructive'\n    }, {\n      text: 'Return',\n      onPress: function onPress() {\n        return null;\n      },\n      style: 'cancel'\n    }], {\n      cancelable: false\n    });\n  };\n  return _jsxs(StackNav.Navigator, {\n    children: [_jsx(StackNav.Screen, {\n      name: \"Hodme\",\n      component: HomeScreen,\n      options: {\n        headerRight: function headerRight() {\n          return SettingsButton(function () {\n            return navigation.navigate('SettingsStack');\n          }, isAnonymous);\n        }\n      }\n    }), _jsx(StackNav.Screen, {\n      name: \"SettingsStack\",\n      component: SettingsStack,\n      options: {\n        headerTitle: 'Settings',\n        animationTypeForReplace: 'pop'\n      }\n    }), _jsx(StackNav.Screen, {\n      name: \"Auth\",\n      component: AuthStackNavigator,\n      options: {\n        headerTitle: 'Login or Sign Up',\n        headerRight: function headerRight() {\n          return CloseIcon(checkLogin);\n        },\n        presentation: 'modal'\n      }\n    }), _jsx(StackNav.Screen, {\n      name: \"Explore\",\n      component: ExploreScreen,\n      options: {\n        headerTitle: 'Explore',\n        animationTypeForReplace: 'pop'\n      }\n    })]\n  });\n};","map":{"version":3,"names":["React","createNativeStackNavigator","ExploreScreen","HomeScreen","MaterialCommunityIcons","MaterialIcons","Icon","IconButton","useAppSelector","AuthStackNavigator","SettingsStack","StackNav","CloseIcon","onClose","SettingsButton","onPress","isDisabled","HomeStackNavigator","navigation","isAnonymous","state","user","checkLogin","Alert","alert","text","goBack","style","cancelable","headerRight","navigate","headerTitle","animationTypeForReplace","presentation"],"sources":["C:/Users/LidorCohen/Desktop/Dogfeel/src/navigation/home-stack.tsx"],"sourcesContent":["import React from 'react';\nimport { Alert, GestureResponderEvent } from 'react-native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport { ExploreScreen, HomeScreen } from 'src/screens';\nimport { MaterialCommunityIcons, MaterialIcons } from '@expo/vector-icons';\nimport { Icon, IconButton } from 'native-base';\nimport { StackScreenProps } from '@react-navigation/stack';\nimport { useAppSelector } from 'src/ducks/useful-hooks';\nimport { ChangeLanguage } from 'src/components/changeLanguage';\nimport { AuthStackNavigator } from './auth-stack';\nimport { SettingsStack } from './settings-stack';\n\nexport type HomeStackParams = {\n    Home: undefined;\n    SettingsStack: undefined;\n    Auth: undefined;\n};\n\nconst StackNav = createNativeStackNavigator<HomeStackParams>();\n\nconst CloseIcon = (onClose: () => void) => (\n    <MaterialCommunityIcons name=\"close\" size={22} onPress={onClose} />\n);\n\nconst SettingsButton = (onPress?: (event: GestureResponderEvent) => void, isDisabled?: boolean) => (\n    <IconButton\n        isDisabled={isDisabled}\n        alignSelf=\"flex-end\"\n        variant=\"unstyled\"\n        icon={<Icon as={MaterialIcons} name=\"settings\" size=\"lg\" color=\"primary.700\" />}\n        onPress={isDisabled ? null : onPress}\n    />\n);\n\ntype HomeStackProps = StackScreenProps<HomeStackParams, 'Home'>;\n\nexport /**\n * Home Stack Navigator, used for navigating between, home, auth, and settings screen\n *\n * @param {*} { navigation }\n * @return {*}\n */\nconst HomeStackNavigator: React.FC<HomeStackProps> = ({ navigation }) => {\n    const isAnonymous = useAppSelector((state) => state.user.isAnonymous);\n    const checkLogin = () => {\n        Alert.alert(\n            'Are you sure you want to exit?',\n            'Your progress will not be saved.',\n            [\n                { text: 'Exit', onPress: navigation.goBack, style: 'destructive' },\n                {\n                    text: 'Return',\n                    onPress: () => null,\n                    style: 'cancel',\n                },\n            ],\n            { cancelable: false },\n        );\n    };\n\n    return (\n        <StackNav.Navigator>\n            <StackNav.Screen\n                name=\"Hodme\"\n                component={HomeScreen}\n                options={{\n                    headerRight: () =>\n                        SettingsButton(() => navigation.navigate('SettingsStack'), isAnonymous),\n                }}\n            />\n            <StackNav.Screen\n                name=\"SettingsStack\"\n                component={SettingsStack}\n                options={{ headerTitle: 'Settings', animationTypeForReplace: 'pop' }}\n            />\n            <StackNav.Screen\n                name=\"Auth\"\n                component={AuthStackNavigator}\n                options={{\n                    headerTitle: 'Login or Sign Up',\n                    headerRight: () => CloseIcon(checkLogin),\n                    presentation: 'modal',\n                }}\n            />\n            <StackNav.Screen\n                name=\"Explore\"\n                component={ExploreScreen}\n                options={{ headerTitle: 'Explore', animationTypeForReplace: 'pop' }}\n            />\n        </StackNav.Navigator>\n    );\n};\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC;AAE1B,SAASC,0BAA0B,QAAQ,gCAAgC;AAC3E,SAASC,aAAa,EAAEC,UAAU;AAClC,SAASC,sBAAsB,EAAEC,aAAa,QAAQ,oBAAoB;AAC1E,SAASC,IAAI,EAAEC,UAAU,QAAQ,aAAa;AAE9C,SAASC,cAAc;AAEvB,SAASC,kBAAkB;AAC3B,SAASC,aAAa;AAA2B;AAAA;AAQjD,IAAMC,QAAQ,GAAGV,0BAA0B,EAAmB;AAE9D,IAAMW,SAAS,GAAG,SAAZA,SAAS,CAAIC,OAAmB;EAAA,OAClC,KAAC,sBAAsB;IAAC,IAAI,EAAC,OAAO;IAAC,IAAI,EAAE,EAAG;IAAC,OAAO,EAAEA;EAAQ,EAAG;AAAA,CACtE;AAED,IAAMC,cAAc,GAAG,SAAjBA,cAAc,CAAIC,OAAgD,EAAEC,UAAoB;EAAA,OAC1F,KAAC,UAAU;IACP,UAAU,EAAEA,UAAW;IACvB,SAAS,EAAC,UAAU;IACpB,OAAO,EAAC,UAAU;IAClB,IAAI,EAAE,KAAC,IAAI;MAAC,EAAE,EAAEX,aAAc;MAAC,IAAI,EAAC,UAAU;MAAC,IAAI,EAAC,IAAI;MAAC,KAAK,EAAC;IAAa,EAAI;IAChF,OAAO,EAAEW,UAAU,GAAG,IAAI,GAAGD;EAAQ,EACvC;AAAA,CACL;AAID,OAMA,IAAME,kBAA4C,GAAG,SAA/CA,kBAA4C,OAAuB;EAAA,IAAjBC,UAAU,QAAVA,UAAU;EAC9D,IAAMC,WAAW,GAAGX,cAAc,CAAC,UAACY,KAAK;IAAA,OAAKA,KAAK,CAACC,IAAI,CAACF,WAAW;EAAA,EAAC;EACrE,IAAMG,UAAU,GAAG,SAAbA,UAAU,GAAS;IACrBC,KAAK,CAACC,KAAK,CACP,gCAAgC,EAChC,kCAAkC,EAClC,CACI;MAAEC,IAAI,EAAE,MAAM;MAAEV,OAAO,EAAEG,UAAU,CAACQ,MAAM;MAAEC,KAAK,EAAE;IAAc,CAAC,EAClE;MACIF,IAAI,EAAE,QAAQ;MACdV,OAAO,EAAE;QAAA,OAAM,IAAI;MAAA;MACnBY,KAAK,EAAE;IACX,CAAC,CACJ,EACD;MAAEC,UAAU,EAAE;IAAM,CAAC,CACxB;EACL,CAAC;EAED,OACI,MAAC,QAAQ,CAAC,SAAS;IAAA,WACf,KAAC,QAAQ,CAAC,MAAM;MACZ,IAAI,EAAC,OAAO;MACZ,SAAS,EAAEzB,UAAW;MACtB,OAAO,EAAE;QACL0B,WAAW,EAAE;UAAA,OACTf,cAAc,CAAC;YAAA,OAAMI,UAAU,CAACY,QAAQ,CAAC,eAAe,CAAC;UAAA,GAAEX,WAAW,CAAC;QAAA;MAC/E;IAAE,EACJ,EACF,KAAC,QAAQ,CAAC,MAAM;MACZ,IAAI,EAAC,eAAe;MACpB,SAAS,EAAET,aAAc;MACzB,OAAO,EAAE;QAAEqB,WAAW,EAAE,UAAU;QAAEC,uBAAuB,EAAE;MAAM;IAAE,EACvE,EACF,KAAC,QAAQ,CAAC,MAAM;MACZ,IAAI,EAAC,MAAM;MACX,SAAS,EAAEvB,kBAAmB;MAC9B,OAAO,EAAE;QACLsB,WAAW,EAAE,kBAAkB;QAC/BF,WAAW,EAAE;UAAA,OAAMjB,SAAS,CAACU,UAAU,CAAC;QAAA;QACxCW,YAAY,EAAE;MAClB;IAAE,EACJ,EACF,KAAC,QAAQ,CAAC,MAAM;MACZ,IAAI,EAAC,SAAS;MACd,SAAS,EAAE/B,aAAc;MACzB,OAAO,EAAE;QAAE6B,WAAW,EAAE,SAAS;QAAEC,uBAAuB,EAAE;MAAM;IAAE,EACtE;EAAA,EACe;AAE7B,CAAC"},"metadata":{},"sourceType":"module"}
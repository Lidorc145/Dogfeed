{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { anonymousSignIn, deleteCurrentUser, fetchSignInMethods, reauthenticate, resetPassword, setNewEmail, setNewPassword, signInWithEmail, signOutUser, signUpWithEmail, verifyEmail } from \"../firebase/auth-api\";\nimport { deletePrivateUserData, getPrivateUserData, updatePrivateUserData } from \"../firebase/user-api\";\nimport { ConfigApi } from \"./config-api\";\nexport var AuthApi = ConfigApi.injectEndpoints({\n  endpoints: function endpoints(build) {\n    return {\n      fetchSignInMethods: build.query({\n        queryFn: function queryFn(email) {\n          return function _callee() {\n            var methods;\n            return _regeneratorRuntime.async(function _callee$(_context) {\n              while (1) {\n                switch (_context.prev = _context.next) {\n                  case 0:\n                    _context.prev = 0;\n                    _context.next = 3;\n                    return _regeneratorRuntime.awrap(fetchSignInMethods(email));\n                  case 3:\n                    methods = _context.sent;\n                    return _context.abrupt(\"return\", {\n                      data: methods\n                    });\n                  case 7:\n                    _context.prev = 7;\n                    _context.t0 = _context[\"catch\"](0);\n                    console.warn(\"Error with email: \" + _context.t0);\n                    return _context.abrupt(\"return\", {\n                      error: _context.t0\n                    });\n                  case 11:\n                  case \"end\":\n                    return _context.stop();\n                }\n              }\n            }, null, null, [[0, 7]], Promise);\n          }();\n        }\n      }),\n      signUp: build.query({\n        queryFn: function queryFn(accountInfo) {\n          return function _callee2() {\n            var userCredential, user, _userCredential, _user;\n            return _regeneratorRuntime.async(function _callee2$(_context2) {\n              while (1) {\n                switch (_context2.prev = _context2.next) {\n                  case 0:\n                    if (!(accountInfo === 'guest')) {\n                      _context2.next = 15;\n                      break;\n                    }\n                    _context2.prev = 1;\n                    _context2.next = 4;\n                    return _regeneratorRuntime.awrap(anonymousSignIn());\n                  case 4:\n                    userCredential = _context2.sent;\n                    user = {\n                      id: userCredential.user.uid,\n                      isAnonymous: true,\n                      emailVerified: userCredential.user.emailVerified,\n                      loggedIn: true\n                    };\n                    return _context2.abrupt(\"return\", {\n                      data: user\n                    });\n                  case 9:\n                    _context2.prev = 9;\n                    _context2.t0 = _context2[\"catch\"](1);\n                    console.warn(\"Error with guest sign in \" + _context2.t0);\n                    return _context2.abrupt(\"return\", {\n                      error: _context2.t0\n                    });\n                  case 13:\n                    _context2.next = 31;\n                    break;\n                  case 15:\n                    _context2.prev = 15;\n                    _context2.next = 18;\n                    return _regeneratorRuntime.awrap(signUpWithEmail(accountInfo.email, accountInfo.password));\n                  case 18:\n                    _userCredential = _context2.sent;\n                    _user = {\n                      id: _userCredential.user.uid,\n                      isAnonymous: false,\n                      emailVerified: _userCredential.user.emailVerified,\n                      loggedIn: true,\n                      firstName: accountInfo.firstName,\n                      lastName: accountInfo.lastName,\n                      email: _userCredential.user.email\n                    };\n                    _context2.next = 22;\n                    return _regeneratorRuntime.awrap(verifyEmail());\n                  case 22:\n                    _context2.next = 24;\n                    return _regeneratorRuntime.awrap(updatePrivateUserData(_user, true));\n                  case 24:\n                    return _context2.abrupt(\"return\", {\n                      data: _user\n                    });\n                  case 27:\n                    _context2.prev = 27;\n                    _context2.t1 = _context2[\"catch\"](15);\n                    console.warn(\"Error with sign up: \" + _context2.t1);\n                    return _context2.abrupt(\"return\", {\n                      error: _context2.t1\n                    });\n                  case 31:\n                  case \"end\":\n                    return _context2.stop();\n                }\n              }\n            }, null, null, [[1, 9], [15, 27]], Promise);\n          }();\n        }\n      }),\n      signIn: build.query({\n        queryFn: function queryFn(_ref) {\n          var email = _ref.email,\n            password = _ref.password;\n          return function _callee3() {\n            var userCredential, userDoc;\n            return _regeneratorRuntime.async(function _callee3$(_context3) {\n              while (1) {\n                switch (_context3.prev = _context3.next) {\n                  case 0:\n                    _context3.prev = 0;\n                    _context3.next = 3;\n                    return _regeneratorRuntime.awrap(signInWithEmail(email, password));\n                  case 3:\n                    userCredential = _context3.sent;\n                    _context3.next = 6;\n                    return _regeneratorRuntime.awrap(getPrivateUserData(userCredential.user.uid));\n                  case 6:\n                    userDoc = _context3.sent;\n                    return _context3.abrupt(\"return\", {\n                      data: _objectSpread(_objectSpread({}, userDoc.data()), {}, {\n                        loggedIn: true\n                      })\n                    });\n                  case 10:\n                    _context3.prev = 10;\n                    _context3.t0 = _context3[\"catch\"](0);\n                    console.warn(\"Error with login: \" + _context3.t0);\n                    return _context3.abrupt(\"return\", {\n                      error: _context3.t0\n                    });\n                  case 14:\n                  case \"end\":\n                    return _context3.stop();\n                }\n              }\n            }, null, null, [[0, 10]], Promise);\n          }();\n        }\n      }),\n      signOut: build.query({\n        queryFn: function queryFn() {\n          return function _callee4() {\n            return _regeneratorRuntime.async(function _callee4$(_context4) {\n              while (1) {\n                switch (_context4.prev = _context4.next) {\n                  case 0:\n                    _context4.prev = 0;\n                    _context4.next = 3;\n                    return _regeneratorRuntime.awrap(signOutUser());\n                  case 3:\n                    return _context4.abrupt(\"return\", {\n                      data: null\n                    });\n                  case 6:\n                    _context4.prev = 6;\n                    _context4.t0 = _context4[\"catch\"](0);\n                    console.warn(\"Error with signout\");\n                    return _context4.abrupt(\"return\", {\n                      error: _context4.t0\n                    });\n                  case 10:\n                  case \"end\":\n                    return _context4.stop();\n                }\n              }\n            }, null, null, [[0, 6]], Promise);\n          }();\n        }\n      }),\n      deleteAccount: build.mutation({\n        queryFn: function queryFn(_ref2) {\n          var id = _ref2.id,\n            email = _ref2.email,\n            password = _ref2.password;\n          return function _callee5() {\n            return _regeneratorRuntime.async(function _callee5$(_context5) {\n              while (1) {\n                switch (_context5.prev = _context5.next) {\n                  case 0:\n                    _context5.prev = 0;\n                    _context5.next = 3;\n                    return _regeneratorRuntime.awrap(reauthenticate(email, password));\n                  case 3:\n                    _context5.next = 5;\n                    return _regeneratorRuntime.awrap(deletePrivateUserData(id));\n                  case 5:\n                    _context5.next = 7;\n                    return _regeneratorRuntime.awrap(deleteCurrentUser());\n                  case 7:\n                    return _context5.abrupt(\"return\", {\n                      data: {\n                        id: '',\n                        isAnonymous: false,\n                        loggedIn: false,\n                        emailVerified: false\n                      }\n                    });\n                  case 10:\n                    _context5.prev = 10;\n                    _context5.t0 = _context5[\"catch\"](0);\n                    console.warn(\"Error with deleting user\");\n                    return _context5.abrupt(\"return\", {\n                      error: _context5.t0\n                    });\n                  case 14:\n                  case \"end\":\n                    return _context5.stop();\n                }\n              }\n            }, null, null, [[0, 10]], Promise);\n          }();\n        }\n      }),\n      sendPasswordReset: build.query({\n        queryFn: function queryFn(email) {\n          return function _callee6() {\n            return _regeneratorRuntime.async(function _callee6$(_context6) {\n              while (1) {\n                switch (_context6.prev = _context6.next) {\n                  case 0:\n                    _context6.prev = 0;\n                    _context6.next = 3;\n                    return _regeneratorRuntime.awrap(resetPassword(email));\n                  case 3:\n                    return _context6.abrupt(\"return\", {\n                      data: email\n                    });\n                  case 6:\n                    _context6.prev = 6;\n                    _context6.t0 = _context6[\"catch\"](0);\n                    console.warn(\"Error with password reset\");\n                    return _context6.abrupt(\"return\", {\n                      error: _context6.t0\n                    });\n                  case 10:\n                  case \"end\":\n                    return _context6.stop();\n                }\n              }\n            }, null, null, [[0, 6]], Promise);\n          }();\n        }\n      }),\n      sendVerificationEmail: build.query({\n        queryFn: function queryFn() {\n          return function _callee7() {\n            return _regeneratorRuntime.async(function _callee7$(_context7) {\n              while (1) {\n                switch (_context7.prev = _context7.next) {\n                  case 0:\n                    _context7.prev = 0;\n                    _context7.next = 3;\n                    return _regeneratorRuntime.awrap(verifyEmail());\n                  case 3:\n                    return _context7.abrupt(\"return\", {\n                      data: null\n                    });\n                  case 6:\n                    _context7.prev = 6;\n                    _context7.t0 = _context7[\"catch\"](0);\n                    console.warn(\"Error with verification email\");\n                    return _context7.abrupt(\"return\", {\n                      error: _context7.t0\n                    });\n                  case 10:\n                  case \"end\":\n                    return _context7.stop();\n                }\n              }\n            }, null, null, [[0, 6]], Promise);\n          }();\n        }\n      }),\n      updatePassword: build.mutation({\n        queryFn: function queryFn(_ref3) {\n          var email = _ref3.email,\n            oldPassword = _ref3.oldPassword,\n            newPassword = _ref3.newPassword;\n          return function _callee8() {\n            return _regeneratorRuntime.async(function _callee8$(_context8) {\n              while (1) {\n                switch (_context8.prev = _context8.next) {\n                  case 0:\n                    _context8.prev = 0;\n                    _context8.next = 3;\n                    return _regeneratorRuntime.awrap(setNewPassword(email, oldPassword, newPassword));\n                  case 3:\n                    return _context8.abrupt(\"return\", {\n                      data: null\n                    });\n                  case 6:\n                    _context8.prev = 6;\n                    _context8.t0 = _context8[\"catch\"](0);\n                    return _context8.abrupt(\"return\", {\n                      error: _context8.t0\n                    });\n                  case 9:\n                  case \"end\":\n                    return _context8.stop();\n                }\n              }\n            }, null, null, [[0, 6]], Promise);\n          }();\n        }\n      }),\n      updateEmail: build.mutation({\n        queryFn: function queryFn(_ref4) {\n          var userID = _ref4.userID,\n            oldEmail = _ref4.oldEmail,\n            newEmail = _ref4.newEmail,\n            password = _ref4.password;\n          return function _callee9() {\n            return _regeneratorRuntime.async(function _callee9$(_context9) {\n              while (1) {\n                switch (_context9.prev = _context9.next) {\n                  case 0:\n                    _context9.prev = 0;\n                    _context9.next = 3;\n                    return _regeneratorRuntime.awrap(setNewEmail(oldEmail, password, newEmail));\n                  case 3:\n                    _context9.next = 5;\n                    return _regeneratorRuntime.awrap(verifyEmail());\n                  case 5:\n                    _context9.next = 7;\n                    return _regeneratorRuntime.awrap(updatePrivateUserData({\n                      id: userID,\n                      email: newEmail\n                    }));\n                  case 7:\n                    return _context9.abrupt(\"return\", {\n                      data: {\n                        email: newEmail\n                      }\n                    });\n                  case 10:\n                    _context9.prev = 10;\n                    _context9.t0 = _context9[\"catch\"](0);\n                    return _context9.abrupt(\"return\", {\n                      error: _context9.t0\n                    });\n                  case 13:\n                  case \"end\":\n                    return _context9.stop();\n                }\n              }\n            }, null, null, [[0, 10]], Promise);\n          }();\n        }\n      })\n    };\n  },\n  overrideExisting: true\n});\nvar useLazyFetchSignInMethodsQuery = AuthApi.useLazyFetchSignInMethodsQuery,\n  useLazySignUpQuery = AuthApi.useLazySignUpQuery,\n  useLazySignOutQuery = AuthApi.useLazySignOutQuery,\n  useDeleteAccountMutation = AuthApi.useDeleteAccountMutation,\n  useLazySignInQuery = AuthApi.useLazySignInQuery,\n  useLazySendPasswordResetQuery = AuthApi.useLazySendPasswordResetQuery,\n  useLazySendVerificationEmailQuery = AuthApi.useLazySendVerificationEmailQuery,\n  useUpdatePasswordMutation = AuthApi.useUpdatePasswordMutation,\n  useUpdateEmailMutation = AuthApi.useUpdateEmailMutation;\nexport { useLazyFetchSignInMethodsQuery, useLazySignUpQuery, useLazySignOutQuery, useDeleteAccountMutation, useLazySignInQuery, useLazySendPasswordResetQuery, useLazySendVerificationEmailQuery, useUpdatePasswordMutation, useUpdateEmailMutation };","map":{"version":3,"names":["anonymousSignIn","deleteCurrentUser","fetchSignInMethods","reauthenticate","resetPassword","setNewEmail","setNewPassword","signInWithEmail","signOutUser","signUpWithEmail","verifyEmail","deletePrivateUserData","getPrivateUserData","updatePrivateUserData","ConfigApi","AuthApi","injectEndpoints","endpoints","build","query","queryFn","email","methods","data","console","warn","error","signUp","accountInfo","userCredential","user","id","uid","isAnonymous","emailVerified","loggedIn","password","firstName","lastName","signIn","userDoc","signOut","deleteAccount","mutation","sendPasswordReset","sendVerificationEmail","updatePassword","oldPassword","newPassword","updateEmail","userID","oldEmail","newEmail","overrideExisting","useLazyFetchSignInMethodsQuery","useLazySignUpQuery","useLazySignOutQuery","useDeleteAccountMutation","useLazySignInQuery","useLazySendPasswordResetQuery","useLazySendVerificationEmailQuery","useUpdatePasswordMutation","useUpdateEmailMutation"],"sources":["C:/Users/LidorCohen/Desktop/Dogfeel/src/services/auth-api.ts"],"sourcesContent":["import {\n    anonymousSignIn,\n    deleteCurrentUser,\n    fetchSignInMethods,\n    reauthenticate,\n    resetPassword,\n    setNewEmail,\n    setNewPassword,\n    signInWithEmail,\n    signOutUser,\n    signUpWithEmail,\n    verifyEmail,\n    // addDefaultPicture,\n} from 'src/firebase/auth-api';\nimport {\n    deletePrivateUserData,\n    getPrivateUserData,\n    updatePrivateUserData,\n} from 'src/firebase/user-api';\nimport { PrivateUserData } from 'src/types';\nimport { ConfigApi } from './config-api';\n\n/**\n * Check documentation resources for additional questions\n *\n * @resources\n * Customizing RTK Query with following resources\n * Firebase api calls with RTK-Query: https://stackoverflow.com/questions/71587312/is-it-possible-to-use-firebase-query-with-redux-toolkit-or-rtk-query-in-react)\n * Using queryfn: https://redux-toolkit.js.org/rtk-query/usage/customizing-queries#implementing-a-queryfn\n * Using fakeBaseQuery: https://redux-toolkit.js.org/rtk-query/usage-with-typescript#typing-a-queryfn\n * Code Splitting: https://redux-toolkit.js.org/rtk-query/usage/code-splitting\n *\n */\n\nexport const AuthApi = ConfigApi.injectEndpoints({\n    endpoints: (build) => ({\n        fetchSignInMethods: build.query<string[], string>({\n            /**\n             * Will fetch the sign in methods of the user, returning a list\n             *\n             * @param {*} email\n             * @return {*}\n             */\n            async queryFn(email) {\n                try {\n                    const methods = await fetchSignInMethods(email);\n                    return { data: methods };\n                } catch (e: any) {\n                    console.warn(`Error with email: ${e}`);\n                    return { error: e };\n                }\n            },\n        }),\n\n        signUp: build.query<\n            PrivateUserData,\n            { email: string; password: string; firstName: string; lastName: string } | 'guest'\n        >({\n            /**\n             * Will sign up the user. No parameters mean a guest account will be generated\n             *\n             * @param {*} accountInfo\n             * @return {*}\n             */\n            async queryFn(accountInfo) {\n                if (accountInfo === 'guest') {\n                    try {\n                        const userCredential = await anonymousSignIn();\n\n                        // add default user image to storage before adding it to firestore\n                        // In the future, will allow users to add image when they sign up\n\n                        // await addDefaultPicture(userCredential.user.uid);\n\n                        // setup guest user\n                        const user: PrivateUserData = {\n                            id: userCredential.user.uid,\n                            isAnonymous: true,\n                            emailVerified: userCredential.user.emailVerified,\n                            loggedIn: true,\n                        };\n\n                        return { data: user };\n                    } catch (e: any) {\n                        console.warn(`Error with guest sign in ${e}`);\n                        return { error: e };\n                    }\n                } else {\n                    try {\n                        const userCredential = await signUpWithEmail(\n                            accountInfo.email,\n                            accountInfo.password,\n                        );\n\n                        const user: PrivateUserData = {\n                            id: userCredential.user.uid,\n                            isAnonymous: false,\n                            emailVerified: userCredential.user.emailVerified,\n                            loggedIn: true,\n                            firstName: accountInfo.firstName,\n                            lastName: accountInfo.lastName,\n                            email: userCredential.user.email,\n                        };\n                        await verifyEmail();\n\n                        // store user data in firestore\n                        await updatePrivateUserData(user, true);\n                        return { data: user };\n                    } catch (e: any) {\n                        console.warn(`Error with sign up: ${e}`);\n                        return { error: e };\n                    }\n                }\n            },\n        }),\n\n        signIn: build.query<PrivateUserData, { email: string; password: string }>({\n            /**\n             * Used to login the user with the credentials\n             *\n             * @param {*} { email, password }\n             * @return {*}\n             */\n            async queryFn({ email, password }) {\n                try {\n                    // sign in new user and get data from database\n                    const userCredential = await signInWithEmail(email, password);\n                    const userDoc = await getPrivateUserData(userCredential.user.uid);\n\n                    return { data: { ...userDoc.data(), loggedIn: true } };\n                } catch (e: any) {\n                    console.warn(`Error with login: ${e}`);\n                    return { error: e };\n                }\n            },\n        }),\n\n        signOut: build.query<null, undefined>({\n            /**\n             * Sign out user\n             *\n             * @return {*}\n             */\n            async queryFn() {\n                try {\n                    await signOutUser();\n                    return { data: null };\n                } catch (e: any) {\n                    console.warn(`Error with signout`);\n                    return { error: e };\n                }\n            },\n        }),\n\n        deleteAccount: build.mutation<\n            PrivateUserData,\n            { id: string; email: string; password: string }\n        >({\n            /**\n             * Delete account query\n             *\n             * @param {string} uid\n             * @return {*}\n             */\n            async queryFn({ id, email, password }) {\n                try {\n                    await reauthenticate(email, password);\n                    await deletePrivateUserData(id);\n                    await deleteCurrentUser();\n                    // set isDeleted field in the user\n                    return {\n                        data: { id: '', isAnonymous: false, loggedIn: false, emailVerified: false },\n                    };\n                } catch (e: any) {\n                    console.warn(`Error with deleting user`);\n                    return { error: e };\n                }\n            },\n        }),\n\n        sendPasswordReset: build.query<string, string>({\n            /**\n             * Generating query for forgetting user password\n             *\n             * @param {*} email\n             * @return {*}\n             */\n            async queryFn(email) {\n                try {\n                    await resetPassword(email);\n                    return { data: email };\n                } catch (e: any) {\n                    console.warn(`Error with password reset`);\n                    return { error: e };\n                }\n            },\n        }),\n\n        sendVerificationEmail: build.query<null, undefined>({\n            /**\n             * Generating query for sending verification email\n             *\n             * @return {*}\n             */\n            async queryFn() {\n                try {\n                    await verifyEmail();\n                    return { data: null };\n                } catch (e: any) {\n                    console.warn(`Error with verification email`);\n                    return { error: e };\n                }\n            },\n        }),\n\n        updatePassword: build.mutation<\n            null,\n            { email: string; oldPassword: string; newPassword: string }\n        >({\n            /**\n             * Mutation will update the password for the user, reauthenticating in process\n             *\n             * @param {*} { email, oldPassword, newPassword }\n             * @return {*}\n             */\n            async queryFn({ email, oldPassword, newPassword }) {\n                try {\n                    await setNewPassword(email, oldPassword, newPassword);\n                    return { data: null };\n                } catch (e: any) {\n                    return { error: e };\n                }\n            },\n        }),\n\n        updateEmail: build.mutation<\n            { email: string },\n            { userID: string; oldEmail: string; newEmail: string; password: string }\n        >({\n            /**\n             * Will update the user's email\n             * Sets the email in auth and firestore, while sending verification email\n             *\n             * @param {*} { oldEmail, newEmail, password }\n             * @return {*}\n             */\n            async queryFn({ userID, oldEmail, newEmail, password }) {\n                try {\n                    await setNewEmail(oldEmail, password, newEmail);\n                    await verifyEmail();\n                    await updatePrivateUserData({ id: userID, email: newEmail });\n                    return { data: { email: newEmail } };\n                } catch (e: any) {\n                    return { error: e };\n                }\n            },\n        }),\n    }),\n    overrideExisting: true,\n});\n\nexport const {\n    useLazyFetchSignInMethodsQuery,\n    useLazySignUpQuery,\n    useLazySignOutQuery,\n    useDeleteAccountMutation,\n    useLazySignInQuery,\n    useLazySendPasswordResetQuery,\n    useLazySendVerificationEmailQuery,\n    useUpdatePasswordMutation,\n    useUpdateEmailMutation,\n} = AuthApi;\n"],"mappings":";;;;AAAA,SACIA,eAAe,EACfC,iBAAiB,EACjBC,kBAAkB,EAClBC,cAAc,EACdC,aAAa,EACbC,WAAW,EACXC,cAAc,EACdC,eAAe,EACfC,WAAW,EACXC,eAAe,EACfC,WAAW;AAGf,SACIC,qBAAqB,EACrBC,kBAAkB,EAClBC,qBAAqB;AAGzB,SAASC,SAAS;AAclB,OAAO,IAAMC,OAAO,GAAGD,SAAS,CAACE,eAAe,CAAC;EAC7CC,SAAS,EAAE,mBAACC,KAAK;IAAA,OAAM;MACnBhB,kBAAkB,EAAEgB,KAAK,CAACC,KAAK,CAAmB;QAOxCC,OAAO,mBAACC,KAAK,EAAE;UAAA;YAAA;YAAA;cAAA;gBAAA;kBAAA;oBAAA;oBAAA;oBAAA,iCAESnB,kBAAkB,CAACmB,KAAK,CAAC;kBAAA;oBAAzCC,OAAO;oBAAA,iCACN;sBAAEC,IAAI,EAAED;oBAAQ,CAAC;kBAAA;oBAAA;oBAAA;oBAExBE,OAAO,CAACC,IAAI,oCAA0B;oBAAC,iCAChC;sBAAEC,KAAK;oBAAI,CAAC;kBAAA;kBAAA;oBAAA;gBAAA;cAAA;YAAA;UAAA;QAE3B;MACJ,CAAC,CAAC;MAEFC,MAAM,EAAET,KAAK,CAACC,KAAK,CAGjB;QAOQC,OAAO,mBAACQ,WAAW,EAAE;UAAA;YAAA;YAAA;cAAA;gBAAA;kBAAA;oBAAA,MACnBA,WAAW,KAAK,OAAO;sBAAA;sBAAA;oBAAA;oBAAA;oBAAA;oBAAA,iCAEU5B,eAAe,EAAE;kBAAA;oBAAxC6B,cAAc;oBAQdC,IAAqB,GAAG;sBAC1BC,EAAE,EAAEF,cAAc,CAACC,IAAI,CAACE,GAAG;sBAC3BC,WAAW,EAAE,IAAI;sBACjBC,aAAa,EAAEL,cAAc,CAACC,IAAI,CAACI,aAAa;sBAChDC,QAAQ,EAAE;oBACd,CAAC;oBAAA,kCAEM;sBAAEZ,IAAI,EAAEO;oBAAK,CAAC;kBAAA;oBAAA;oBAAA;oBAErBN,OAAO,CAACC,IAAI,4CAAiC;oBAAC,kCACvC;sBAAEC,KAAK;oBAAI,CAAC;kBAAA;oBAAA;oBAAA;kBAAA;oBAAA;oBAAA;oBAAA,iCAIUjB,eAAe,CACxCmB,WAAW,CAACP,KAAK,EACjBO,WAAW,CAACQ,QAAQ,CACvB;kBAAA;oBAHKP,eAAc;oBAKdC,KAAqB,GAAG;sBAC1BC,EAAE,EAAEF,eAAc,CAACC,IAAI,CAACE,GAAG;sBAC3BC,WAAW,EAAE,KAAK;sBAClBC,aAAa,EAAEL,eAAc,CAACC,IAAI,CAACI,aAAa;sBAChDC,QAAQ,EAAE,IAAI;sBACdE,SAAS,EAAET,WAAW,CAACS,SAAS;sBAChCC,QAAQ,EAAEV,WAAW,CAACU,QAAQ;sBAC9BjB,KAAK,EAAEQ,eAAc,CAACC,IAAI,CAACT;oBAC/B,CAAC;oBAAA;oBAAA,iCACKX,WAAW,EAAE;kBAAA;oBAAA;oBAAA,iCAGbG,qBAAqB,CAACiB,KAAI,EAAE,IAAI,CAAC;kBAAA;oBAAA,kCAChC;sBAAEP,IAAI,EAAEO;oBAAK,CAAC;kBAAA;oBAAA;oBAAA;oBAErBN,OAAO,CAACC,IAAI,uCAA4B;oBAAC,kCAClC;sBAAEC,KAAK;oBAAI,CAAC;kBAAA;kBAAA;oBAAA;gBAAA;cAAA;YAAA;UAAA;QAG/B;MACJ,CAAC,CAAC;MAEFa,MAAM,EAAErB,KAAK,CAACC,KAAK,CAAuD;QAOhEC,OAAO,yBAAsB;UAAA,IAAnBC,KAAK,QAALA,KAAK;YAAEe,QAAQ,QAARA,QAAQ;UAAA;YAAA;YAAA;cAAA;gBAAA;kBAAA;oBAAA;oBAAA;oBAAA,iCAGM7B,eAAe,CAACc,KAAK,EAAEe,QAAQ,CAAC;kBAAA;oBAAvDP,cAAc;oBAAA;oBAAA,iCACEjB,kBAAkB,CAACiB,cAAc,CAACC,IAAI,CAACE,GAAG,CAAC;kBAAA;oBAA3DQ,OAAO;oBAAA,kCAEN;sBAAEjB,IAAI,kCAAOiB,OAAO,CAACjB,IAAI,EAAE;wBAAEY,QAAQ,EAAE;sBAAI;oBAAG,CAAC;kBAAA;oBAAA;oBAAA;oBAEtDX,OAAO,CAACC,IAAI,qCAA0B;oBAAC,kCAChC;sBAAEC,KAAK;oBAAI,CAAC;kBAAA;kBAAA;oBAAA;gBAAA;cAAA;YAAA;UAAA;QAE3B;MACJ,CAAC,CAAC;MAEFe,OAAO,EAAEvB,KAAK,CAACC,KAAK,CAAkB;QAM5BC,OAAO,qBAAG;UAAA;YAAA;cAAA;gBAAA;kBAAA;oBAAA;oBAAA;oBAAA,iCAEFZ,WAAW,EAAE;kBAAA;oBAAA,kCACZ;sBAAEe,IAAI,EAAE;oBAAK,CAAC;kBAAA;oBAAA;oBAAA;oBAErBC,OAAO,CAACC,IAAI,sBAAsB;oBAAC,kCAC5B;sBAAEC,KAAK;oBAAI,CAAC;kBAAA;kBAAA;oBAAA;gBAAA;cAAA;YAAA;UAAA;QAE3B;MACJ,CAAC,CAAC;MAEFgB,aAAa,EAAExB,KAAK,CAACyB,QAAQ,CAG3B;QAOQvB,OAAO,0BAA0B;UAAA,IAAvBW,EAAE,SAAFA,EAAE;YAAEV,KAAK,SAALA,KAAK;YAAEe,QAAQ,SAARA,QAAQ;UAAA;YAAA;cAAA;gBAAA;kBAAA;oBAAA;oBAAA;oBAAA,iCAErBjC,cAAc,CAACkB,KAAK,EAAEe,QAAQ,CAAC;kBAAA;oBAAA;oBAAA,iCAC/BzB,qBAAqB,CAACoB,EAAE,CAAC;kBAAA;oBAAA;oBAAA,iCACzB9B,iBAAiB,EAAE;kBAAA;oBAAA,kCAElB;sBACHsB,IAAI,EAAE;wBAAEQ,EAAE,EAAE,EAAE;wBAAEE,WAAW,EAAE,KAAK;wBAAEE,QAAQ,EAAE,KAAK;wBAAED,aAAa,EAAE;sBAAM;oBAC9E,CAAC;kBAAA;oBAAA;oBAAA;oBAEDV,OAAO,CAACC,IAAI,4BAA4B;oBAAC,kCAClC;sBAAEC,KAAK;oBAAI,CAAC;kBAAA;kBAAA;oBAAA;gBAAA;cAAA;YAAA;UAAA;QAE3B;MACJ,CAAC,CAAC;MAEFkB,iBAAiB,EAAE1B,KAAK,CAACC,KAAK,CAAiB;QAOrCC,OAAO,mBAACC,KAAK,EAAE;UAAA;YAAA;cAAA;gBAAA;kBAAA;oBAAA;oBAAA;oBAAA,iCAEPjB,aAAa,CAACiB,KAAK,CAAC;kBAAA;oBAAA,kCACnB;sBAAEE,IAAI,EAAEF;oBAAM,CAAC;kBAAA;oBAAA;oBAAA;oBAEtBG,OAAO,CAACC,IAAI,6BAA6B;oBAAC,kCACnC;sBAAEC,KAAK;oBAAI,CAAC;kBAAA;kBAAA;oBAAA;gBAAA;cAAA;YAAA;UAAA;QAE3B;MACJ,CAAC,CAAC;MAEFmB,qBAAqB,EAAE3B,KAAK,CAACC,KAAK,CAAkB;QAM1CC,OAAO,qBAAG;UAAA;YAAA;cAAA;gBAAA;kBAAA;oBAAA;oBAAA;oBAAA,iCAEFV,WAAW,EAAE;kBAAA;oBAAA,kCACZ;sBAAEa,IAAI,EAAE;oBAAK,CAAC;kBAAA;oBAAA;oBAAA;oBAErBC,OAAO,CAACC,IAAI,iCAAiC;oBAAC,kCACvC;sBAAEC,KAAK;oBAAI,CAAC;kBAAA;kBAAA;oBAAA;gBAAA;cAAA;YAAA;UAAA;QAE3B;MACJ,CAAC,CAAC;MAEFoB,cAAc,EAAE5B,KAAK,CAACyB,QAAQ,CAG5B;QAOQvB,OAAO,0BAAsC;UAAA,IAAnCC,KAAK,SAALA,KAAK;YAAE0B,WAAW,SAAXA,WAAW;YAAEC,WAAW,SAAXA,WAAW;UAAA;YAAA;cAAA;gBAAA;kBAAA;oBAAA;oBAAA;oBAAA,iCAEjC1C,cAAc,CAACe,KAAK,EAAE0B,WAAW,EAAEC,WAAW,CAAC;kBAAA;oBAAA,kCAC9C;sBAAEzB,IAAI,EAAE;oBAAK,CAAC;kBAAA;oBAAA;oBAAA;oBAAA,kCAEd;sBAAEG,KAAK;oBAAI,CAAC;kBAAA;kBAAA;oBAAA;gBAAA;cAAA;YAAA;UAAA;QAE3B;MACJ,CAAC,CAAC;MAEFuB,WAAW,EAAE/B,KAAK,CAACyB,QAAQ,CAGzB;QAQQvB,OAAO,0BAA2C;UAAA,IAAxC8B,MAAM,SAANA,MAAM;YAAEC,QAAQ,SAARA,QAAQ;YAAEC,QAAQ,SAARA,QAAQ;YAAEhB,QAAQ,SAARA,QAAQ;UAAA;YAAA;cAAA;gBAAA;kBAAA;oBAAA;oBAAA;oBAAA,iCAEtC/B,WAAW,CAAC8C,QAAQ,EAAEf,QAAQ,EAAEgB,QAAQ,CAAC;kBAAA;oBAAA;oBAAA,iCACzC1C,WAAW,EAAE;kBAAA;oBAAA;oBAAA,iCACbG,qBAAqB,CAAC;sBAAEkB,EAAE,EAAEmB,MAAM;sBAAE7B,KAAK,EAAE+B;oBAAS,CAAC,CAAC;kBAAA;oBAAA,kCACrD;sBAAE7B,IAAI,EAAE;wBAAEF,KAAK,EAAE+B;sBAAS;oBAAE,CAAC;kBAAA;oBAAA;oBAAA;oBAAA,kCAE7B;sBAAE1B,KAAK;oBAAI,CAAC;kBAAA;kBAAA;oBAAA;gBAAA;cAAA;YAAA;UAAA;QAE3B;MACJ,CAAC;IACL,CAAC;EAAA,CAAC;EACF2B,gBAAgB,EAAE;AACtB,CAAC,CAAC;AAEK,IACHC,8BAA8B,GAS9BvC,OAAO,CATPuC,8BAA8B;EAC9BC,kBAAkB,GAQlBxC,OAAO,CARPwC,kBAAkB;EAClBC,mBAAmB,GAOnBzC,OAAO,CAPPyC,mBAAmB;EACnBC,wBAAwB,GAMxB1C,OAAO,CANP0C,wBAAwB;EACxBC,kBAAkB,GAKlB3C,OAAO,CALP2C,kBAAkB;EAClBC,6BAA6B,GAI7B5C,OAAO,CAJP4C,6BAA6B;EAC7BC,iCAAiC,GAGjC7C,OAAO,CAHP6C,iCAAiC;EACjCC,yBAAyB,GAEzB9C,OAAO,CAFP8C,yBAAyB;EACzBC,sBAAsB,GACtB/C,OAAO,CADP+C,sBAAsB;AACd"},"metadata":{},"sourceType":"module"}
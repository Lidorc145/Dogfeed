{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport { createSlice } from '@reduxjs/toolkit';\nimport { AuthApi } from \"../services\";\nimport { UserApi } from \"../services/user-api\";\nimport * as Localization from 'expo-localization';\nvar initialUser = {\n  id: '',\n  isAnonymous: false,\n  emailVerified: false,\n  loggedIn: false,\n  language: Localization.locale.split('-')[0]\n};\nvar userSlice = createSlice({\n  name: 'user',\n  initialState: initialUser,\n  reducers: {\n    incrementCount: function incrementCount(state) {\n      state.count ? state.count += 1 : state.count = 1;\n    },\n    decrementCount: function decrementCount(state) {\n      state.count ? state.count -= 1 : state.count = -1;\n    },\n    setLanguage: function setLanguage(state, action) {\n      state.language = action.payload;\n    }\n  },\n  extraReducers: function extraReducers(builder) {\n    builder.addMatcher(AuthApi.endpoints.signUp.matchFulfilled, function (_state, action) {\n      return _objectSpread({}, action.payload);\n    });\n    builder.addMatcher(AuthApi.endpoints.signIn.matchFulfilled, function (_state, action) {\n      return _objectSpread({}, action.payload);\n    });\n    builder.addMatcher(AuthApi.endpoints.updateEmail.matchFulfilled, function (state, action) {\n      return _objectSpread(_objectSpread({}, state), action.payload);\n    });\n    builder.addMatcher(UserApi.endpoints.setUserImage.matchFulfilled, function (state, action) {\n      return _objectSpread(_objectSpread({}, state), {}, {\n        image: action.payload\n      });\n    });\n    builder.addMatcher(UserApi.endpoints.updateUserFields.matchFulfilled, function (state, action) {\n      return _objectSpread(_objectSpread({}, state), action.payload);\n    });\n    builder.addMatcher(AuthApi.endpoints.signOut.matchFulfilled, function () {\n      return initialUser;\n    });\n    builder.addMatcher(AuthApi.endpoints.deleteAccount.matchFulfilled, function () {\n      return initialUser;\n    });\n  }\n});\nvar _userSlice$actions = userSlice.actions,\n  setLanguage = _userSlice$actions.setLanguage,\n  incrementCount = _userSlice$actions.incrementCount,\n  decrementCount = _userSlice$actions.decrementCount;\nexport { setLanguage, incrementCount, decrementCount };\nexport default userSlice.reducer;","map":{"version":3,"names":["createSlice","AuthApi","UserApi","Localization","initialUser","id","isAnonymous","emailVerified","loggedIn","language","locale","split","userSlice","name","initialState","reducers","incrementCount","state","count","decrementCount","setLanguage","action","payload","extraReducers","builder","addMatcher","endpoints","signUp","matchFulfilled","_state","signIn","updateEmail","setUserImage","image","updateUserFields","signOut","deleteAccount","actions","reducer"],"sources":["C:/Users/LidorCohen/Desktop/Dogfeel/src/ducks/user-slice.ts"],"sourcesContent":["import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { AuthApi } from 'src/services';\nimport { UserApi } from 'src/services/user-api';\nimport { PrivateUserData } from 'src/types';\nimport * as Localization from 'expo-localization';\n\n/**\n * Define the initial user\n */\nconst initialUser: PrivateUserData = {\n    id: '',\n    isAnonymous: false,\n    emailVerified: false,\n    loggedIn: false,\n    language: Localization.locale.split('-')[0],\n};\n\n/**\n * Define the intiaial user slice object\n * @resources\n * https://redux-toolkit.js.org/api/createSlice\n */\nconst userSlice = createSlice({\n    name: 'user',\n    initialState: initialUser,\n\n    /**\n     * Define the reducers for this slice\n     */\n    reducers: {\n        incrementCount: (state) => {\n            // increment, or set to 1\n            state.count ? (state.count += 1) : (state.count = 1);\n        },\n        decrementCount: (state) => {\n            // decrement, or set to -1\n            state.count ? (state.count -= 1) : (state.count = -1);\n        },\n        setLanguage: (state,action) =>{\n            state.language = action.payload;\n        },\n    },\n\n    /**\n     * For syncing with rtk-query, updating the local state when a query fetches\n     *\n     * @remarks\n     * Only need these extra reducers for many actions that are handling the universal state for the user\n     */\n    extraReducers: (builder) => {\n        /**\n         * When user signs up, set the local state to the returned private user data\n         *\n         * @param {*} _state\n         * @param {PayloadAction<PrivateUserData>} action\n         * @return {*}\n         */\n        builder.addMatcher(\n            AuthApi.endpoints.signUp.matchFulfilled,\n            (_state, action: PayloadAction<PrivateUserData>) => {\n                return { ...action.payload };\n            },\n        );\n\n        /**\n         * When user signs in, set the local state to the returned private user data\n         *\n         * @param {*} _state\n         * @param {PayloadAction<PrivateUserData>} action\n         * @return {*}\n         */\n        builder.addMatcher(\n            AuthApi.endpoints.signIn.matchFulfilled,\n            (_state, action: PayloadAction<PrivateUserData>) => {\n                return { ...action.payload };\n            },\n        );\n\n        /**\n         * Update the user's email\n         *\n         * @param {*} _state\n         * @param {PayloadAction<PrivateUserData>} action\n         * @return {*}\n         */\n        builder.addMatcher(\n            AuthApi.endpoints.updateEmail.matchFulfilled,\n            (state, action: PayloadAction<{ email: string }>) => {\n                return { ...state, ...action.payload };\n            },\n        );\n\n        /**\n         * When user changes their image, set it in the global user state\n         *\n         * @param {*} _state\n         * @param {PayloadAction<string>} action\n         * @return {*}\n         */\n        builder.addMatcher(\n            UserApi.endpoints.setUserImage.matchFulfilled,\n            (state, action: PayloadAction<string>) => {\n                return { ...state, image: action.payload };\n            },\n        );\n\n        /**\n         * When the user updates certain fields, update the local state.\n         *\n         * @param {*} _state\n         * @param {PayloadAction<string>} action\n         * @return {*}\n         */\n        builder.addMatcher(\n            UserApi.endpoints.updateUserFields.matchFulfilled,\n            (state, action: PayloadAction<PrivateUserData>) => {\n                return { ...state, ...action.payload };\n            },\n        );\n\n        /**\n         * When user signs out, reset the state to the initial user\n         *\n         * @param {*} _state\n         * @param {PayloadAction<PrivateUserData>} action\n         * @return {*}\n         */\n        builder.addMatcher(AuthApi.endpoints.signOut.matchFulfilled, () => initialUser);\n\n        /**\n         * When user deletes their account, reset the state to the initial user\n         *\n         * @param {*} _state\n         * @param {PayloadAction<PrivateUserData>} action\n         * @return {*}\n         */\n        builder.addMatcher(AuthApi.endpoints.deleteAccount.matchFulfilled, () => initialUser);\n    },\n});\n\n/**\n * Export the corresponding redux actions\n */\nexport const { setLanguage, incrementCount, decrementCount } = userSlice.actions;\nexport default userSlice.reducer;\n"],"mappings":";;;AAAA,SAASA,WAAW,QAAuB,kBAAkB;AAC7D,SAASC,OAAO;AAChB,SAASC,OAAO;AAEhB,OAAO,KAAKC,YAAY,MAAM,mBAAmB;AAKjD,IAAMC,WAA4B,GAAG;EACjCC,EAAE,EAAE,EAAE;EACNC,WAAW,EAAE,KAAK;EAClBC,aAAa,EAAE,KAAK;EACpBC,QAAQ,EAAE,KAAK;EACfC,QAAQ,EAAEN,YAAY,CAACO,MAAM,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;AAC9C,CAAC;AAOD,IAAMC,SAAS,GAAGZ,WAAW,CAAC;EAC1Ba,IAAI,EAAE,MAAM;EACZC,YAAY,EAAEV,WAAW;EAKzBW,QAAQ,EAAE;IACNC,cAAc,EAAE,wBAACC,KAAK,EAAK;MAEvBA,KAAK,CAACC,KAAK,GAAID,KAAK,CAACC,KAAK,IAAI,CAAC,GAAKD,KAAK,CAACC,KAAK,GAAG,CAAE;IACxD,CAAC;IACDC,cAAc,EAAE,wBAACF,KAAK,EAAK;MAEvBA,KAAK,CAACC,KAAK,GAAID,KAAK,CAACC,KAAK,IAAI,CAAC,GAAKD,KAAK,CAACC,KAAK,GAAG,CAAC,CAAE;IACzD,CAAC;IACDE,WAAW,EAAE,qBAACH,KAAK,EAACI,MAAM,EAAI;MAC1BJ,KAAK,CAACR,QAAQ,GAAGY,MAAM,CAACC,OAAO;IACnC;EACJ,CAAC;EAQDC,aAAa,EAAE,uBAACC,OAAO,EAAK;IAQxBA,OAAO,CAACC,UAAU,CACdxB,OAAO,CAACyB,SAAS,CAACC,MAAM,CAACC,cAAc,EACvC,UAACC,MAAM,EAAER,MAAsC,EAAK;MAChD,yBAAYA,MAAM,CAACC,OAAO;IAC9B,CAAC,CACJ;IASDE,OAAO,CAACC,UAAU,CACdxB,OAAO,CAACyB,SAAS,CAACI,MAAM,CAACF,cAAc,EACvC,UAACC,MAAM,EAAER,MAAsC,EAAK;MAChD,yBAAYA,MAAM,CAACC,OAAO;IAC9B,CAAC,CACJ;IASDE,OAAO,CAACC,UAAU,CACdxB,OAAO,CAACyB,SAAS,CAACK,WAAW,CAACH,cAAc,EAC5C,UAACX,KAAK,EAAEI,MAAwC,EAAK;MACjD,uCAAYJ,KAAK,GAAKI,MAAM,CAACC,OAAO;IACxC,CAAC,CACJ;IASDE,OAAO,CAACC,UAAU,CACdvB,OAAO,CAACwB,SAAS,CAACM,YAAY,CAACJ,cAAc,EAC7C,UAACX,KAAK,EAAEI,MAA6B,EAAK;MACtC,uCAAYJ,KAAK;QAAEgB,KAAK,EAAEZ,MAAM,CAACC;MAAO;IAC5C,CAAC,CACJ;IASDE,OAAO,CAACC,UAAU,CACdvB,OAAO,CAACwB,SAAS,CAACQ,gBAAgB,CAACN,cAAc,EACjD,UAACX,KAAK,EAAEI,MAAsC,EAAK;MAC/C,uCAAYJ,KAAK,GAAKI,MAAM,CAACC,OAAO;IACxC,CAAC,CACJ;IASDE,OAAO,CAACC,UAAU,CAACxB,OAAO,CAACyB,SAAS,CAACS,OAAO,CAACP,cAAc,EAAE;MAAA,OAAMxB,WAAW;IAAA,EAAC;IAS/EoB,OAAO,CAACC,UAAU,CAACxB,OAAO,CAACyB,SAAS,CAACU,aAAa,CAACR,cAAc,EAAE;MAAA,OAAMxB,WAAW;IAAA,EAAC;EACzF;AACJ,CAAC,CAAC;AAKK,yBAAwDQ,SAAS,CAACyB,OAAO;EAAjEjB,WAAW,sBAAXA,WAAW;EAAEJ,cAAc,sBAAdA,cAAc;EAAEG,cAAc,sBAAdA,cAAc;AAAuB;AACjF,eAAeP,SAAS,CAAC0B,OAAO"},"metadata":{},"sourceType":"module"}
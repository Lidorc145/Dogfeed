{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React from 'react';\nimport { useNavigation } from '@react-navigation/native';\nimport { Avatar, Box, Button, Text, VStack } from 'native-base';\nimport { useAppDispatch, useAppSelector } from \"../ducks/useful-hooks\";\nimport { incrementCount, decrementCount } from \"../ducks/user-slice\";\nimport { useLazySignOutQuery } from \"../services\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport var HomeScreen = function HomeScreen() {\n  var _user$firstName, _user$lastName, _user$firstName$, _user$lastName$;\n  var navigation = useNavigation();\n  var _useLazySignOutQuery = useLazySignOutQuery(),\n    _useLazySignOutQuery2 = _slicedToArray(_useLazySignOutQuery, 2),\n    signOut = _useLazySignOutQuery2[0],\n    isFetching = _useLazySignOutQuery2[1].isFetching;\n  var user = useAppSelector(function (state) {\n    return state.user;\n  });\n  var dispatch = useAppDispatch();\n  return _jsxs(Box, {\n    w: \"100%\",\n    h: \"100%\",\n    bgColor: \"background.100\",\n    flex: 1,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    children: [user.isAnonymous ? _jsx(Text, {\n      color: \"plainText.800\",\n      children: \"User is a guest\"\n    }) : _jsxs(VStack, {\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      children: [_jsx(Avatar, {\n        backgroundColor: \"primary.500\",\n        mb: 4,\n        size: \"xl\",\n        source: {\n          uri: user.image || undefined\n        },\n        children: ((_user$firstName = user.firstName) == null ? void 0 : _user$firstName.length) && ((_user$lastName = user.lastName) == null ? void 0 : _user$lastName.length) && \"\" + (user == null ? void 0 : (_user$firstName$ = user.firstName[0]) == null ? void 0 : _user$firstName$.toUpperCase()) + (user == null ? void 0 : (_user$lastName$ = user.lastName[0]) == null ? void 0 : _user$lastName$.toUpperCase())\n      }), _jsxs(Text, {\n        fontWeight: \"bold\",\n        color: \"plainText.800\",\n        fontSize: \"xl\",\n        children: [user.firstName, \" \", user.lastName]\n      }), _jsxs(Text, {\n        color: \"plainText.800\",\n        children: [\"Account Email: \", user.email]\n      }), _jsxs(Text, {\n        color: \"plainText.800\",\n        children: [\"Email Verified: \", String(user.emailVerified)]\n      })]\n    }), _jsxs(Text, {\n      color: \"plainText.800\",\n      children: [\"User ID: \", user.id]\n    }), _jsxs(Box, {\n      py: 3,\n      children: [_jsxs(Text, {\n        color: \"plainText.800\",\n        bold: true,\n        children: [\"Really fun user data counter: \", user.count]\n      }), _jsx(Button, {\n        m: 2,\n        onPress: function onPress() {\n          return dispatch(incrementCount());\n        },\n        children: \"Increment Count\"\n      }), _jsx(Button, {\n        m: 2,\n        onPress: function onPress() {\n          return dispatch(decrementCount());\n        },\n        children: \"Decrement Count\"\n      })]\n    }), user.isAnonymous ? _jsx(Button, {\n      mt: \"2\",\n      colorScheme: \"indigo\",\n      onPress: function onPress() {\n        return navigation.navigate('Auth');\n      },\n      children: \"Login to real account\"\n    }) : null, _jsx(Button, {\n      isLoading: isFetching,\n      mt: \"2\",\n      colorScheme: \"indigo\",\n      onPress: function onPress() {\n        return user.loggedIn ? signOut(undefined) : navigation.navigate('Auth');\n      },\n      children: user.loggedIn ? 'Logout' : 'Login'\n    }), _jsx(Button, {\n      onPress: function onPress() {\n        return navigation.navigate('Explore');\n      },\n      children: \"Button\"\n    })]\n  });\n};","map":{"version":3,"names":["React","useNavigation","Avatar","Box","Button","Text","VStack","useAppDispatch","useAppSelector","incrementCount","decrementCount","useLazySignOutQuery","HomeScreen","navigation","signOut","isFetching","user","state","dispatch","isAnonymous","uri","image","undefined","firstName","length","lastName","toUpperCase","email","String","emailVerified","id","count","navigate","loggedIn"],"sources":["C:/Users/LidorCohen/Desktop/Dogfeel/src/screens/home.tsx"],"sourcesContent":["import React from 'react';\r\nimport { useNavigation } from '@react-navigation/native';\r\nimport { Avatar, Box, Button, Text, VStack } from 'native-base';\r\nimport { StackNavigationProp } from '@react-navigation/stack';\r\nimport { useAppDispatch, useAppSelector } from 'src/ducks/useful-hooks';\r\nimport { incrementCount, decrementCount } from 'src/ducks/user-slice';\r\nimport { HomeStackParams } from 'src/navigation/home-stack';\r\nimport { useLazySignOutQuery } from 'src/services';\r\n\r\n/**\r\n * Stack Navigation Prop for accessing screen navigation prop\r\n */\r\ntype HomeScreenProps = StackNavigationProp<HomeStackParams, 'Home'>;\r\n\r\n/**\r\n * Home screen, will display basic data to the user\r\n *\r\n * @return {*}\r\n */\r\nexport const HomeScreen: React.FC<{}> = () => {\r\n    // hooks\r\n    const navigation = useNavigation<HomeScreenProps>();\r\n    const [signOut, { isFetching }] = useLazySignOutQuery();\r\n\r\n    // redux handlers\r\n    const user = useAppSelector((state) => state.user);\r\n    const dispatch = useAppDispatch();\r\n\r\n    return (\r\n        <Box\r\n            w=\"100%\"\r\n            h=\"100%\"\r\n            bgColor=\"background.100\"\r\n            flex={1}\r\n            alignItems=\"center\"\r\n            justifyContent=\"center\">\r\n            {user.isAnonymous ? (\r\n                <Text color=\"plainText.800\">User is a guest</Text>\r\n            ) : (\r\n                <VStack alignItems=\"center\" justifyContent=\"center\">\r\n                    <Avatar\r\n                        backgroundColor=\"primary.500\"\r\n                        mb={4}\r\n                        size=\"xl\"\r\n                        source={{\r\n                            uri: user.image || undefined,\r\n                        }}>\r\n                        {user.firstName?.length &&\r\n                            user.lastName?.length &&\r\n                            `${user?.firstName[0]?.toUpperCase()}${user?.lastName[0]?.toUpperCase()}`}\r\n                    </Avatar>\r\n                    <Text fontWeight=\"bold\" color=\"plainText.800\" fontSize=\"xl\">\r\n                        {user.firstName} {user.lastName}\r\n                    </Text>\r\n                    <Text color=\"plainText.800\">Account Email: {user.email}</Text>\r\n                    <Text color=\"plainText.800\">Email Verified: {String(user.emailVerified)}</Text>\r\n                </VStack>\r\n            )}\r\n            <Text color=\"plainText.800\">User ID: {user.id}</Text>\r\n            <Box py={3}>\r\n                <Text color=\"plainText.800\" bold>\r\n                    Really fun user data counter: {user.count}\r\n                </Text>\r\n                <Button m={2} onPress={() => dispatch(incrementCount())}>\r\n                    Increment Count\r\n                </Button>\r\n                <Button m={2} onPress={() => dispatch(decrementCount())}>\r\n                    Decrement Count\r\n                </Button>\r\n            </Box>\r\n            {user.isAnonymous ? (\r\n                <Button mt=\"2\" colorScheme=\"indigo\" onPress={() => navigation.navigate('Auth')}>\r\n                    Login to real account\r\n                </Button>\r\n            ) : null}\r\n            <Button\r\n                isLoading={isFetching}\r\n                mt=\"2\"\r\n                colorScheme=\"indigo\"\r\n                onPress={() => (user.loggedIn ? signOut(undefined) : navigation.navigate('Auth'))}>\r\n                {user.loggedIn ? 'Logout' : 'Login'}\r\n            </Button>\r\n            <Button onPress={() => (navigation.navigate('Explore'))}>\r\n                Button\r\n            </Button>\r\n        </Box>\r\n    );\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}
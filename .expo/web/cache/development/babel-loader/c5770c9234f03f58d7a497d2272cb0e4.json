{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nvar _excluded = [\"ref\"],\n  _excluded2 = [\"children\"];\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nfunction _createForOfIteratorHelperLoose(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (it) return (it = it.call(o)).next.bind(it); if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; return function () { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\nimport $6nfFC$react, { useRef as $6nfFC$useRef, useContext as $6nfFC$useContext, useMemo as $6nfFC$useMemo, useEffect as $6nfFC$useEffect, useState as $6nfFC$useState, useCallback as $6nfFC$useCallback } from \"react\";\nimport { useLayoutEffect as $6nfFC$useLayoutEffect, runAfterTransition as $6nfFC$runAfterTransition, focusWithoutScrolling as $6nfFC$focusWithoutScrolling, mergeProps as $6nfFC$mergeProps, useSyncRef as $6nfFC$useSyncRef } from \"@react-aria/utils\";\nimport { getInteractionModality as $6nfFC$getInteractionModality, isFocusVisible as $6nfFC$isFocusVisible, useFocusVisibleListener as $6nfFC$useFocusVisibleListener, useFocus as $6nfFC$useFocus, useFocusWithin as $6nfFC$useFocusWithin, useKeyboard as $6nfFC$useKeyboard } from \"@react-aria/interactions\";\nimport $6nfFC$clsx from \"clsx\";\nfunction $6a99195332edec8b$export$80f3e147d781571c(element) {\n  if ($6nfFC$getInteractionModality() === 'virtual') {\n    var lastFocusedElement = document.activeElement;\n    $6nfFC$runAfterTransition(function () {\n      if (document.activeElement === lastFocusedElement && document.contains(element)) $6nfFC$focusWithoutScrolling(element);\n    });\n  } else $6nfFC$focusWithoutScrolling(element);\n}\nfunction $645f2e67b85a24c9$var$isStyleVisible(element) {\n  if (!(element instanceof HTMLElement) && !(element instanceof SVGElement)) return false;\n  var _element$style = element.style,\n    display = _element$style.display,\n    visibility = _element$style.visibility;\n  var isVisible = display !== 'none' && visibility !== 'hidden' && visibility !== 'collapse';\n  if (isVisible) {\n    var getComputedStyle = element.ownerDocument.defaultView.getComputedStyle;\n    var _getComputedStyle = getComputedStyle(element),\n      computedDisplay = _getComputedStyle.display,\n      computedVisibility = _getComputedStyle.visibility;\n    isVisible = computedDisplay !== 'none' && computedVisibility !== 'hidden' && computedVisibility !== 'collapse';\n  }\n  return isVisible;\n}\nfunction $645f2e67b85a24c9$var$isAttributeVisible(element, childElement) {\n  return !element.hasAttribute('hidden') && (element.nodeName === 'DETAILS' && childElement && childElement.nodeName !== 'SUMMARY' ? element.hasAttribute('open') : true);\n}\nfunction $645f2e67b85a24c9$export$e989c0fffaa6b27a(element, childElement) {\n  return element.nodeName !== '#comment' && $645f2e67b85a24c9$var$isStyleVisible(element) && $645f2e67b85a24c9$var$isAttributeVisible(element, childElement) && (!element.parentElement || $645f2e67b85a24c9$export$e989c0fffaa6b27a(element.parentElement, element));\n}\nvar $9bf71ea28793e738$var$FocusContext = $6nfFC$react.createContext(null);\nvar $9bf71ea28793e738$var$activeScope = null;\nfunction $9bf71ea28793e738$export$20e40289641fbbb6(props) {\n  var children = props.children,\n    contain = props.contain,\n    restoreFocus = props.restoreFocus,\n    autoFocus = props.autoFocus;\n  var startRef = $6nfFC$useRef();\n  var endRef = $6nfFC$useRef();\n  var scopeRef = $6nfFC$useRef([]);\n  var ctx = $6nfFC$useContext($9bf71ea28793e738$var$FocusContext);\n  var ref;\n  var ctxParent = (ref = ctx === null || ctx === void 0 ? void 0 : ctx.scopeRef) !== null && ref !== void 0 ? ref : null;\n  var parentScope1 = $6nfFC$useMemo(function () {\n    return $9bf71ea28793e738$var$activeScope && $9bf71ea28793e738$export$d06fae2ee68b101e.getTreeNode($9bf71ea28793e738$var$activeScope) && !$9bf71ea28793e738$var$isAncestorScope($9bf71ea28793e738$var$activeScope, ctxParent) ? $9bf71ea28793e738$var$activeScope : ctxParent;\n  }, [ctxParent]);\n  $6nfFC$useLayoutEffect(function () {\n    var node = startRef.current.nextSibling;\n    var nodes = [];\n    while (node && node !== endRef.current) {\n      nodes.push(node);\n      node = node.nextSibling;\n    }\n    scopeRef.current = nodes;\n  }, [children, parentScope1]);\n  if ($9bf71ea28793e738$export$d06fae2ee68b101e.getTreeNode(parentScope1) && !$9bf71ea28793e738$export$d06fae2ee68b101e.getTreeNode(scopeRef)) $9bf71ea28793e738$export$d06fae2ee68b101e.addTreeNode(scopeRef, parentScope1);\n  var node1 = $9bf71ea28793e738$export$d06fae2ee68b101e.getTreeNode(scopeRef);\n  node1.contain = contain;\n  $9bf71ea28793e738$var$useActiveScopeTracker(scopeRef, restoreFocus, contain);\n  $9bf71ea28793e738$var$useFocusContainment(scopeRef, contain);\n  $9bf71ea28793e738$var$useRestoreFocus(scopeRef, restoreFocus, contain);\n  $9bf71ea28793e738$var$useAutoFocus(scopeRef, autoFocus);\n  $6nfFC$useLayoutEffect(function () {\n    if (scopeRef) return function () {\n      var parentScope = $9bf71ea28793e738$export$d06fae2ee68b101e.getTreeNode(scopeRef).parent.scopeRef;\n      if ((scopeRef === $9bf71ea28793e738$var$activeScope || $9bf71ea28793e738$var$isAncestorScope(scopeRef, $9bf71ea28793e738$var$activeScope)) && (!parentScope || $9bf71ea28793e738$export$d06fae2ee68b101e.getTreeNode(parentScope))) $9bf71ea28793e738$var$activeScope = parentScope;\n      $9bf71ea28793e738$export$d06fae2ee68b101e.removeTreeNode(scopeRef);\n    };\n  }, [scopeRef, parentScope1]);\n  var focusManager = $9bf71ea28793e738$var$createFocusManagerForScope(scopeRef);\n  return $6nfFC$react.createElement($9bf71ea28793e738$var$FocusContext.Provider, {\n    value: {\n      scopeRef: scopeRef,\n      focusManager: focusManager\n    }\n  }, $6nfFC$react.createElement(\"span\", {\n    \"data-focus-scope-start\": true,\n    hidden: true,\n    ref: startRef\n  }), children, $6nfFC$react.createElement(\"span\", {\n    \"data-focus-scope-end\": true,\n    hidden: true,\n    ref: endRef\n  }));\n}\nfunction $9bf71ea28793e738$export$10c5169755ce7bd7() {\n  var ref;\n  return (ref = $6nfFC$useContext($9bf71ea28793e738$var$FocusContext)) === null || ref === void 0 ? void 0 : ref.focusManager;\n}\nfunction $9bf71ea28793e738$var$createFocusManagerForScope(scopeRef) {\n  return {\n    focusNext: function focusNext() {\n      var opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var scope = scopeRef.current;\n      var from = opts.from,\n        tabbable = opts.tabbable,\n        wrap = opts.wrap,\n        accept = opts.accept;\n      var node = from || document.activeElement;\n      var sentinel = scope[0].previousElementSibling;\n      var walker = $9bf71ea28793e738$export$2d6ec8fc375ceafa($9bf71ea28793e738$var$getScopeRoot(scope), {\n        tabbable: tabbable,\n        accept: accept\n      }, scope);\n      walker.currentNode = $9bf71ea28793e738$var$isElementInScope(node, scope) ? node : sentinel;\n      var nextNode = walker.nextNode();\n      if (!nextNode && wrap) {\n        walker.currentNode = sentinel;\n        nextNode = walker.nextNode();\n      }\n      if (nextNode) $9bf71ea28793e738$var$focusElement(nextNode, true);\n      return nextNode;\n    },\n    focusPrevious: function focusPrevious() {\n      var opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var scope = scopeRef.current;\n      var from = opts.from,\n        tabbable = opts.tabbable,\n        wrap = opts.wrap,\n        accept = opts.accept;\n      var node = from || document.activeElement;\n      var sentinel = scope[scope.length - 1].nextElementSibling;\n      var walker = $9bf71ea28793e738$export$2d6ec8fc375ceafa($9bf71ea28793e738$var$getScopeRoot(scope), {\n        tabbable: tabbable,\n        accept: accept\n      }, scope);\n      walker.currentNode = $9bf71ea28793e738$var$isElementInScope(node, scope) ? node : sentinel;\n      var previousNode = walker.previousNode();\n      if (!previousNode && wrap) {\n        walker.currentNode = sentinel;\n        previousNode = walker.previousNode();\n      }\n      if (previousNode) $9bf71ea28793e738$var$focusElement(previousNode, true);\n      return previousNode;\n    },\n    focusFirst: function focusFirst() {\n      var opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var scope = scopeRef.current;\n      var tabbable = opts.tabbable,\n        accept = opts.accept;\n      var walker = $9bf71ea28793e738$export$2d6ec8fc375ceafa($9bf71ea28793e738$var$getScopeRoot(scope), {\n        tabbable: tabbable,\n        accept: accept\n      }, scope);\n      walker.currentNode = scope[0].previousElementSibling;\n      var nextNode = walker.nextNode();\n      if (nextNode) $9bf71ea28793e738$var$focusElement(nextNode, true);\n      return nextNode;\n    },\n    focusLast: function focusLast() {\n      var opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var scope = scopeRef.current;\n      var tabbable = opts.tabbable,\n        accept = opts.accept;\n      var walker = $9bf71ea28793e738$export$2d6ec8fc375ceafa($9bf71ea28793e738$var$getScopeRoot(scope), {\n        tabbable: tabbable,\n        accept: accept\n      }, scope);\n      walker.currentNode = scope[scope.length - 1].nextElementSibling;\n      var previousNode = walker.previousNode();\n      if (previousNode) $9bf71ea28793e738$var$focusElement(previousNode, true);\n      return previousNode;\n    }\n  };\n}\nvar $9bf71ea28793e738$var$focusableElements = ['input:not([disabled]):not([type=hidden])', 'select:not([disabled])', 'textarea:not([disabled])', 'button:not([disabled])', 'a[href]', 'area[href]', 'summary', 'iframe', 'object', 'embed', 'audio[controls]', 'video[controls]', '[contenteditable]'];\nvar $9bf71ea28793e738$var$FOCUSABLE_ELEMENT_SELECTOR = $9bf71ea28793e738$var$focusableElements.join(':not([hidden]),') + ',[tabindex]:not([disabled]):not([hidden])';\n$9bf71ea28793e738$var$focusableElements.push('[tabindex]:not([tabindex=\"-1\"]):not([disabled])');\nvar $9bf71ea28793e738$var$TABBABLE_ELEMENT_SELECTOR = $9bf71ea28793e738$var$focusableElements.join(':not([hidden]):not([tabindex=\"-1\"]),');\nfunction $9bf71ea28793e738$var$getScopeRoot(scope) {\n  return scope[0].parentElement;\n}\nfunction $9bf71ea28793e738$var$shouldContainFocus(scopeRef) {\n  var scope = $9bf71ea28793e738$export$d06fae2ee68b101e.getTreeNode($9bf71ea28793e738$var$activeScope);\n  while (scope && scope.scopeRef !== scopeRef) {\n    if (scope.contain) return false;\n    scope = scope.parent;\n  }\n  return true;\n}\nfunction $9bf71ea28793e738$var$useFocusContainment(scopeRef, contain) {\n  var focusedNode = $6nfFC$useRef();\n  var raf = $6nfFC$useRef(null);\n  $6nfFC$useLayoutEffect(function () {\n    var scope1 = scopeRef.current;\n    if (!contain) {\n      if (raf.current) {\n        cancelAnimationFrame(raf.current);\n        raf.current = null;\n      }\n      return;\n    }\n    var onKeyDown = function onKeyDown(e) {\n      if (e.key !== 'Tab' || e.altKey || e.ctrlKey || e.metaKey || !$9bf71ea28793e738$var$shouldContainFocus(scopeRef)) return;\n      var focusedElement = document.activeElement;\n      var scope = scopeRef.current;\n      if (!$9bf71ea28793e738$var$isElementInScope(focusedElement, scope)) return;\n      var walker = $9bf71ea28793e738$export$2d6ec8fc375ceafa($9bf71ea28793e738$var$getScopeRoot(scope), {\n        tabbable: true\n      }, scope);\n      walker.currentNode = focusedElement;\n      var nextElement = e.shiftKey ? walker.previousNode() : walker.nextNode();\n      if (!nextElement) {\n        walker.currentNode = e.shiftKey ? scope[scope.length - 1].nextElementSibling : scope[0].previousElementSibling;\n        nextElement = e.shiftKey ? walker.previousNode() : walker.nextNode();\n      }\n      e.preventDefault();\n      if (nextElement) $9bf71ea28793e738$var$focusElement(nextElement, true);\n    };\n    var onFocus = function onFocus(e) {\n      if ((!$9bf71ea28793e738$var$activeScope || $9bf71ea28793e738$var$isAncestorScope($9bf71ea28793e738$var$activeScope, scopeRef)) && $9bf71ea28793e738$var$isElementInScope(e.target, scopeRef.current)) {\n        $9bf71ea28793e738$var$activeScope = scopeRef;\n        focusedNode.current = e.target;\n      } else if ($9bf71ea28793e738$var$shouldContainFocus(scopeRef) && !$9bf71ea28793e738$var$isElementInChildScope(e.target, scopeRef)) {\n        if (focusedNode.current) focusedNode.current.focus();else if ($9bf71ea28793e738$var$activeScope) $9bf71ea28793e738$var$focusFirstInScope($9bf71ea28793e738$var$activeScope.current);\n      } else if ($9bf71ea28793e738$var$shouldContainFocus(scopeRef)) focusedNode.current = e.target;\n    };\n    var onBlur = function onBlur(e) {\n      raf.current = requestAnimationFrame(function () {\n        if ($9bf71ea28793e738$var$shouldContainFocus(scopeRef) && !$9bf71ea28793e738$var$isElementInChildScope(document.activeElement, scopeRef)) {\n          $9bf71ea28793e738$var$activeScope = scopeRef;\n          if (document.body.contains(e.target)) {\n            focusedNode.current = e.target;\n            focusedNode.current.focus();\n          } else if ($9bf71ea28793e738$var$activeScope) $9bf71ea28793e738$var$focusFirstInScope($9bf71ea28793e738$var$activeScope.current);\n        }\n      });\n    };\n    document.addEventListener('keydown', onKeyDown, false);\n    document.addEventListener('focusin', onFocus, false);\n    scope1.forEach(function (element) {\n      return element.addEventListener('focusin', onFocus, false);\n    });\n    scope1.forEach(function (element) {\n      return element.addEventListener('focusout', onBlur, false);\n    });\n    return function () {\n      document.removeEventListener('keydown', onKeyDown, false);\n      document.removeEventListener('focusin', onFocus, false);\n      scope1.forEach(function (element) {\n        return element.removeEventListener('focusin', onFocus, false);\n      });\n      scope1.forEach(function (element) {\n        return element.removeEventListener('focusout', onBlur, false);\n      });\n    };\n  }, [scopeRef, contain]);\n  $6nfFC$useEffect(function () {\n    return function () {\n      if (raf.current) cancelAnimationFrame(raf.current);\n    };\n  }, [raf]);\n}\nfunction $9bf71ea28793e738$var$isElementInAnyScope(element) {\n  return $9bf71ea28793e738$var$isElementInChildScope(element);\n}\nfunction $9bf71ea28793e738$var$isElementInScope(element, scope) {\n  return scope.some(function (node) {\n    return node.contains(element);\n  });\n}\nfunction $9bf71ea28793e738$var$isElementInChildScope(element) {\n  var scope = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n  for (var _iterator = _createForOfIteratorHelperLoose($9bf71ea28793e738$export$d06fae2ee68b101e.traverse($9bf71ea28793e738$export$d06fae2ee68b101e.getTreeNode(scope))), _step; !(_step = _iterator()).done;) {\n    var _ref = _step.value;\n    var s = _ref.scopeRef;\n    if ($9bf71ea28793e738$var$isElementInScope(element, s.current)) return true;\n  }\n  return false;\n}\nfunction $9bf71ea28793e738$export$1258395f99bf9cbf(element) {\n  return $9bf71ea28793e738$var$isElementInChildScope(element, $9bf71ea28793e738$var$activeScope);\n}\nfunction $9bf71ea28793e738$var$isAncestorScope(ancestor, scope) {\n  var ref;\n  var parent = (ref = $9bf71ea28793e738$export$d06fae2ee68b101e.getTreeNode(scope)) === null || ref === void 0 ? void 0 : ref.parent;\n  while (parent) {\n    if (parent.scopeRef === ancestor) return true;\n    parent = parent.parent;\n  }\n  return false;\n}\nfunction $9bf71ea28793e738$var$focusElement(element) {\n  var scroll = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n  if (element != null && !scroll) try {\n    $6a99195332edec8b$export$80f3e147d781571c(element);\n  } catch (err) {} else if (element != null) try {\n    element.focus();\n  } catch (err1) {}\n}\nfunction $9bf71ea28793e738$var$focusFirstInScope(scope) {\n  var tabbable = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n  var sentinel = scope[0].previousElementSibling;\n  var walker = $9bf71ea28793e738$export$2d6ec8fc375ceafa($9bf71ea28793e738$var$getScopeRoot(scope), {\n    tabbable: tabbable\n  }, scope);\n  walker.currentNode = sentinel;\n  var nextNode = walker.nextNode();\n  if (tabbable && !nextNode) {\n    walker = $9bf71ea28793e738$export$2d6ec8fc375ceafa($9bf71ea28793e738$var$getScopeRoot(scope), {\n      tabbable: false\n    }, scope);\n    walker.currentNode = sentinel;\n    nextNode = walker.nextNode();\n  }\n  $9bf71ea28793e738$var$focusElement(nextNode);\n}\nfunction $9bf71ea28793e738$var$useAutoFocus(scopeRef, autoFocus) {\n  var autoFocusRef = $6nfFC$react.useRef(autoFocus);\n  $6nfFC$useEffect(function () {\n    if (autoFocusRef.current) {\n      $9bf71ea28793e738$var$activeScope = scopeRef;\n      if (!$9bf71ea28793e738$var$isElementInScope(document.activeElement, $9bf71ea28793e738$var$activeScope.current)) $9bf71ea28793e738$var$focusFirstInScope(scopeRef.current);\n    }\n    autoFocusRef.current = false;\n  }, [scopeRef]);\n}\nfunction $9bf71ea28793e738$var$useActiveScopeTracker(scopeRef, restore, contain) {\n  $6nfFC$useLayoutEffect(function () {\n    if (restore || contain) return;\n    var scope = scopeRef.current;\n    var onFocus = function onFocus(e) {\n      var target = e.target;\n      if ($9bf71ea28793e738$var$isElementInScope(target, scopeRef.current)) $9bf71ea28793e738$var$activeScope = scopeRef;else if (!$9bf71ea28793e738$var$isElementInAnyScope(target)) $9bf71ea28793e738$var$activeScope = null;\n    };\n    document.addEventListener('focusin', onFocus, false);\n    scope.forEach(function (element) {\n      return element.addEventListener('focusin', onFocus, false);\n    });\n    return function () {\n      document.removeEventListener('focusin', onFocus, false);\n      scope.forEach(function (element) {\n        return element.removeEventListener('focusin', onFocus, false);\n      });\n    };\n  }, [scopeRef, restore, contain]);\n}\nfunction $9bf71ea28793e738$var$shouldRestoreFocus(scopeRef) {\n  var scope = $9bf71ea28793e738$export$d06fae2ee68b101e.getTreeNode($9bf71ea28793e738$var$activeScope);\n  while (scope && scope.scopeRef !== scopeRef) {\n    if (scope.nodeToRestore) return false;\n    scope = scope.parent;\n  }\n  return (scope === null || scope === void 0 ? void 0 : scope.scopeRef) === scopeRef;\n}\nfunction $9bf71ea28793e738$var$useRestoreFocus(scopeRef, restoreFocus, contain) {\n  var nodeToRestoreRef = $6nfFC$useRef(typeof document !== 'undefined' ? document.activeElement : null);\n  $6nfFC$useLayoutEffect(function () {\n    var scope = scopeRef.current;\n    if (!restoreFocus || contain) return;\n    var onFocus = function onFocus() {\n      if (!$9bf71ea28793e738$var$activeScope || $9bf71ea28793e738$var$isAncestorScope($9bf71ea28793e738$var$activeScope, scopeRef)) $9bf71ea28793e738$var$activeScope = scopeRef;\n    };\n    document.addEventListener('focusin', onFocus, false);\n    scope.forEach(function (element) {\n      return element.addEventListener('focusin', onFocus, false);\n    });\n    return function () {\n      document.removeEventListener('focusin', onFocus, false);\n      scope.forEach(function (element) {\n        return element.removeEventListener('focusin', onFocus, false);\n      });\n    };\n  }, [scopeRef, contain]);\n  $6nfFC$useLayoutEffect(function () {\n    if (!restoreFocus) return;\n    $9bf71ea28793e738$export$d06fae2ee68b101e.getTreeNode(scopeRef).nodeToRestore = nodeToRestoreRef.current;\n    var onKeyDown = function onKeyDown(e) {\n      if (e.key !== 'Tab' || e.altKey || e.ctrlKey || e.metaKey) return;\n      var focusedElement = document.activeElement;\n      if (!$9bf71ea28793e738$var$isElementInScope(focusedElement, scopeRef.current)) return;\n      var nodeToRestore = $9bf71ea28793e738$export$d06fae2ee68b101e.getTreeNode(scopeRef).nodeToRestore;\n      var walker = $9bf71ea28793e738$export$2d6ec8fc375ceafa(document.body, {\n        tabbable: true\n      });\n      walker.currentNode = focusedElement;\n      var nextElement = e.shiftKey ? walker.previousNode() : walker.nextNode();\n      if (!document.body.contains(nodeToRestore) || nodeToRestore === document.body) {\n        nodeToRestore = null;\n        $9bf71ea28793e738$export$d06fae2ee68b101e.getTreeNode(scopeRef).nodeToRestore = null;\n      }\n      if ((!nextElement || !$9bf71ea28793e738$var$isElementInScope(nextElement, scopeRef.current)) && nodeToRestore) {\n        walker.currentNode = nodeToRestore;\n        do {\n          nextElement = e.shiftKey ? walker.previousNode() : walker.nextNode();\n        } while ($9bf71ea28793e738$var$isElementInScope(nextElement, scopeRef.current));\n        e.preventDefault();\n        e.stopPropagation();\n        if (nextElement) $9bf71ea28793e738$var$focusElement(nextElement, true);else if (!$9bf71ea28793e738$var$isElementInAnyScope(nodeToRestore)) focusedElement.blur();else $9bf71ea28793e738$var$focusElement(nodeToRestore, true);\n      }\n    };\n    if (!contain) document.addEventListener('keydown', onKeyDown, true);\n    return function () {\n      if (!contain) document.removeEventListener('keydown', onKeyDown, true);\n      var nodeToRestore = $9bf71ea28793e738$export$d06fae2ee68b101e.getTreeNode(scopeRef).nodeToRestore;\n      if (restoreFocus && nodeToRestore && ($9bf71ea28793e738$var$isElementInScope(document.activeElement, scopeRef.current) || document.activeElement === document.body && $9bf71ea28793e738$var$shouldRestoreFocus(scopeRef))) {\n        var clonedTree = $9bf71ea28793e738$export$d06fae2ee68b101e.clone();\n        requestAnimationFrame(function () {\n          if (document.activeElement === document.body) {\n            var treeNode = clonedTree.getTreeNode(scopeRef);\n            while (treeNode) {\n              if (treeNode.nodeToRestore && document.body.contains(treeNode.nodeToRestore)) {\n                $9bf71ea28793e738$var$focusElement(treeNode.nodeToRestore);\n                return;\n              }\n              treeNode = treeNode.parent;\n            }\n            treeNode = clonedTree.getTreeNode(scopeRef);\n            while (treeNode) {\n              if (treeNode.scopeRef && $9bf71ea28793e738$export$d06fae2ee68b101e.getTreeNode(treeNode.scopeRef)) {\n                $9bf71ea28793e738$var$focusFirstInScope(treeNode.scopeRef.current, true);\n                return;\n              }\n              treeNode = treeNode.parent;\n            }\n          }\n        });\n      }\n    };\n  }, [scopeRef, restoreFocus, contain]);\n}\nfunction $9bf71ea28793e738$export$2d6ec8fc375ceafa(root, opts, scope) {\n  var selector = (opts === null || opts === void 0 ? void 0 : opts.tabbable) ? $9bf71ea28793e738$var$TABBABLE_ELEMENT_SELECTOR : $9bf71ea28793e738$var$FOCUSABLE_ELEMENT_SELECTOR;\n  var walker = document.createTreeWalker(root, NodeFilter.SHOW_ELEMENT, {\n    acceptNode: function acceptNode(node) {\n      var ref;\n      if (opts === null || opts === void 0 ? void 0 : (ref = opts.from) === null || ref === void 0 ? void 0 : ref.contains(node)) return NodeFilter.FILTER_REJECT;\n      if (node.matches(selector) && $645f2e67b85a24c9$export$e989c0fffaa6b27a(node) && (!scope || $9bf71ea28793e738$var$isElementInScope(node, scope)) && (!(opts === null || opts === void 0 ? void 0 : opts.accept) || opts.accept(node))) return NodeFilter.FILTER_ACCEPT;\n      return NodeFilter.FILTER_SKIP;\n    }\n  });\n  if (opts === null || opts === void 0 ? void 0 : opts.from) walker.currentNode = opts.from;\n  return walker;\n}\nfunction $9bf71ea28793e738$export$c5251b9e124bf29(ref) {\n  var defaultOptions = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  return {\n    focusNext: function focusNext() {\n      var opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var root = ref.current;\n      if (!root) return;\n      var from = opts.from,\n        _opts$tabbable = opts.tabbable,\n        tabbable = _opts$tabbable === void 0 ? defaultOptions.tabbable : _opts$tabbable,\n        _opts$wrap = opts.wrap,\n        wrap = _opts$wrap === void 0 ? defaultOptions.wrap : _opts$wrap,\n        _opts$accept = opts.accept,\n        accept = _opts$accept === void 0 ? defaultOptions.accept : _opts$accept;\n      var node = from || document.activeElement;\n      var walker = $9bf71ea28793e738$export$2d6ec8fc375ceafa(root, {\n        tabbable: tabbable,\n        accept: accept\n      });\n      if (root.contains(node)) walker.currentNode = node;\n      var nextNode = walker.nextNode();\n      if (!nextNode && wrap) {\n        walker.currentNode = root;\n        nextNode = walker.nextNode();\n      }\n      if (nextNode) $9bf71ea28793e738$var$focusElement(nextNode, true);\n      return nextNode;\n    },\n    focusPrevious: function focusPrevious() {\n      var opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : defaultOptions;\n      var root = ref.current;\n      if (!root) return;\n      var from = opts.from,\n        _opts$tabbable2 = opts.tabbable,\n        tabbable = _opts$tabbable2 === void 0 ? defaultOptions.tabbable : _opts$tabbable2,\n        _opts$wrap2 = opts.wrap,\n        wrap = _opts$wrap2 === void 0 ? defaultOptions.wrap : _opts$wrap2,\n        _opts$accept2 = opts.accept,\n        accept = _opts$accept2 === void 0 ? defaultOptions.accept : _opts$accept2;\n      var node = from || document.activeElement;\n      var walker = $9bf71ea28793e738$export$2d6ec8fc375ceafa(root, {\n        tabbable: tabbable,\n        accept: accept\n      });\n      if (root.contains(node)) walker.currentNode = node;else {\n        var next = $9bf71ea28793e738$var$last(walker);\n        if (next) $9bf71ea28793e738$var$focusElement(next, true);\n        return next;\n      }\n      var previousNode = walker.previousNode();\n      if (!previousNode && wrap) {\n        walker.currentNode = root;\n        previousNode = $9bf71ea28793e738$var$last(walker);\n      }\n      if (previousNode) $9bf71ea28793e738$var$focusElement(previousNode, true);\n      return previousNode;\n    },\n    focusFirst: function focusFirst() {\n      var opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : defaultOptions;\n      var root = ref.current;\n      if (!root) return;\n      var _opts$tabbable3 = opts.tabbable,\n        tabbable = _opts$tabbable3 === void 0 ? defaultOptions.tabbable : _opts$tabbable3,\n        _opts$accept3 = opts.accept,\n        accept = _opts$accept3 === void 0 ? defaultOptions.accept : _opts$accept3;\n      var walker = $9bf71ea28793e738$export$2d6ec8fc375ceafa(root, {\n        tabbable: tabbable,\n        accept: accept\n      });\n      var nextNode = walker.nextNode();\n      if (nextNode) $9bf71ea28793e738$var$focusElement(nextNode, true);\n      return nextNode;\n    },\n    focusLast: function focusLast() {\n      var opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : defaultOptions;\n      var root = ref.current;\n      if (!root) return;\n      var _opts$tabbable4 = opts.tabbable,\n        tabbable = _opts$tabbable4 === void 0 ? defaultOptions.tabbable : _opts$tabbable4,\n        _opts$accept4 = opts.accept,\n        accept = _opts$accept4 === void 0 ? defaultOptions.accept : _opts$accept4;\n      var walker = $9bf71ea28793e738$export$2d6ec8fc375ceafa(root, {\n        tabbable: tabbable,\n        accept: accept\n      });\n      var next = $9bf71ea28793e738$var$last(walker);\n      if (next) $9bf71ea28793e738$var$focusElement(next, true);\n      return next;\n    }\n  };\n}\nfunction $9bf71ea28793e738$var$last(walker) {\n  var next;\n  var last;\n  do {\n    last = walker.lastChild();\n    if (last) next = last;\n  } while (last);\n  return next;\n}\nvar $9bf71ea28793e738$var$Tree = function () {\n  function $9bf71ea28793e738$var$Tree() {\n    _classCallCheck(this, $9bf71ea28793e738$var$Tree);\n    this.fastMap = new Map();\n    this.root = new $9bf71ea28793e738$var$TreeNode({\n      scopeRef: null\n    });\n    this.fastMap.set(null, this.root);\n  }\n  _createClass($9bf71ea28793e738$var$Tree, [{\n    key: \"size\",\n    get: function get() {\n      return this.fastMap.size;\n    }\n  }, {\n    key: \"getTreeNode\",\n    value: function getTreeNode(data) {\n      return this.fastMap.get(data);\n    }\n  }, {\n    key: \"addTreeNode\",\n    value: function addTreeNode(scopeRef, parent, nodeToRestore) {\n      var parentNode = this.fastMap.get(parent !== null && parent !== void 0 ? parent : null);\n      var node = new $9bf71ea28793e738$var$TreeNode({\n        scopeRef: scopeRef\n      });\n      parentNode.addChild(node);\n      node.parent = parentNode;\n      this.fastMap.set(scopeRef, node);\n      if (nodeToRestore) node.nodeToRestore = nodeToRestore;\n    }\n  }, {\n    key: \"removeTreeNode\",\n    value: function removeTreeNode(scopeRef) {\n      if (scopeRef === null) return;\n      var node = this.fastMap.get(scopeRef);\n      var parentNode = node.parent;\n      for (var _iterator2 = _createForOfIteratorHelperLoose(this.traverse()), _step2; !(_step2 = _iterator2()).done;) {\n        var current = _step2.value;\n        if (current !== node && node.nodeToRestore && current.nodeToRestore && node.scopeRef.current && $9bf71ea28793e738$var$isElementInScope(current.nodeToRestore, node.scopeRef.current)) current.nodeToRestore = node.nodeToRestore;\n      }\n      var children = node.children;\n      parentNode.removeChild(node);\n      if (children.length > 0) children.forEach(function (child) {\n        return parentNode.addChild(child);\n      });\n      this.fastMap.delete(node.scopeRef);\n    }\n  }, {\n    key: \"traverse\",\n    value: function traverse() {\n      var _this = this;\n      var node = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.root;\n      return _regeneratorRuntime.mark(function _callee() {\n        var _iterator3, _step3, child;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (!(node.scopeRef != null)) {\n                  _context.next = 3;\n                  break;\n                }\n                _context.next = 3;\n                return node;\n              case 3:\n                if (!(node.children.length > 0)) {\n                  _context.next = 10;\n                  break;\n                }\n                _iterator3 = _createForOfIteratorHelperLoose(node.children);\n              case 5:\n                if ((_step3 = _iterator3()).done) {\n                  _context.next = 10;\n                  break;\n                }\n                child = _step3.value;\n                return _context.delegateYield(_this.traverse(child), \"t0\", 8);\n              case 8:\n                _context.next = 5;\n                break;\n              case 10:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      })();\n    }\n  }, {\n    key: \"clone\",\n    value: function clone() {\n      var newTree = new $9bf71ea28793e738$var$Tree();\n      for (var _iterator4 = _createForOfIteratorHelperLoose(this.traverse()), _step4; !(_step4 = _iterator4()).done;) {\n        var node = _step4.value;\n        newTree.addTreeNode(node.scopeRef, node.parent.scopeRef, node.nodeToRestore);\n      }\n      return newTree;\n    }\n  }]);\n  return $9bf71ea28793e738$var$Tree;\n}();\nvar $9bf71ea28793e738$var$TreeNode = function () {\n  function $9bf71ea28793e738$var$TreeNode(props) {\n    _classCallCheck(this, $9bf71ea28793e738$var$TreeNode);\n    this.children = [];\n    this.contain = false;\n    this.scopeRef = props.scopeRef;\n  }\n  _createClass($9bf71ea28793e738$var$TreeNode, [{\n    key: \"addChild\",\n    value: function addChild(node) {\n      this.children.push(node);\n      node.parent = this;\n    }\n  }, {\n    key: \"removeChild\",\n    value: function removeChild(node) {\n      this.children.splice(this.children.indexOf(node), 1);\n      node.parent = undefined;\n    }\n  }]);\n  return $9bf71ea28793e738$var$TreeNode;\n}();\nvar $9bf71ea28793e738$export$d06fae2ee68b101e = new $9bf71ea28793e738$var$Tree();\nfunction $f7dceffc5ad7768b$export$4e328f61c538687f() {\n  var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var _props$autoFocus = props.autoFocus,\n    autoFocus = _props$autoFocus === void 0 ? false : _props$autoFocus,\n    isTextInput = props.isTextInput,\n    within = props.within;\n  var state = $6nfFC$useRef({\n    isFocused: false,\n    isFocusVisible: autoFocus || $6nfFC$isFocusVisible()\n  });\n  var _$6nfFC$useState = $6nfFC$useState(false),\n    _$6nfFC$useState2 = _slicedToArray(_$6nfFC$useState, 2),\n    isFocused1 = _$6nfFC$useState2[0],\n    setFocused = _$6nfFC$useState2[1];\n  var _$6nfFC$useState3 = $6nfFC$useState(function () {\n      return state.current.isFocused && state.current.isFocusVisible;\n    }),\n    _$6nfFC$useState4 = _slicedToArray(_$6nfFC$useState3, 2),\n    isFocusVisibleState = _$6nfFC$useState4[0],\n    setFocusVisible = _$6nfFC$useState4[1];\n  var updateState = $6nfFC$useCallback(function () {\n    return setFocusVisible(state.current.isFocused && state.current.isFocusVisible);\n  }, []);\n  var onFocusChange = $6nfFC$useCallback(function (isFocused) {\n    state.current.isFocused = isFocused;\n    setFocused(isFocused);\n    updateState();\n  }, [updateState]);\n  $6nfFC$useFocusVisibleListener(function (isFocusVisible) {\n    state.current.isFocusVisible = isFocusVisible;\n    updateState();\n  }, [], {\n    isTextInput: isTextInput\n  });\n  var _$6nfFC$useFocus = $6nfFC$useFocus({\n      isDisabled: within,\n      onFocusChange: onFocusChange\n    }),\n    focusProps = _$6nfFC$useFocus.focusProps;\n  var _$6nfFC$useFocusWithi = $6nfFC$useFocusWithin({\n      isDisabled: !within,\n      onFocusWithinChange: onFocusChange\n    }),\n    focusWithinProps = _$6nfFC$useFocusWithi.focusWithinProps;\n  return {\n    isFocused: isFocused1,\n    isFocusVisible: state.current.isFocused && isFocusVisibleState,\n    focusProps: within ? focusWithinProps : focusProps\n  };\n}\nfunction $907718708eab68af$export$1a38b4ad7f578e1d(props) {\n  var _$6nfFC$clsx;\n  var children = props.children,\n    focusClass = props.focusClass,\n    focusRingClass = props.focusRingClass;\n  var _$f7dceffc5ad7768b$ex = $f7dceffc5ad7768b$export$4e328f61c538687f(props),\n    isFocused = _$f7dceffc5ad7768b$ex.isFocused,\n    isFocusVisible = _$f7dceffc5ad7768b$ex.isFocusVisible,\n    focusProps = _$f7dceffc5ad7768b$ex.focusProps;\n  var child = $6nfFC$react.Children.only(children);\n  return $6nfFC$react.cloneElement(child, $6nfFC$mergeProps(child.props, _objectSpread(_objectSpread({}, focusProps), {}, {\n    className: $6nfFC$clsx((_$6nfFC$clsx = {}, _defineProperty(_$6nfFC$clsx, focusClass || '', isFocused), _defineProperty(_$6nfFC$clsx, focusRingClass || '', isFocusVisible), _$6nfFC$clsx))\n  })));\n}\nvar $e6afbd83fe6ebbd2$var$FocusableContext = $6nfFC$react.createContext(null);\nfunction $e6afbd83fe6ebbd2$var$useFocusableContext(ref) {\n  var context = $6nfFC$useContext($e6afbd83fe6ebbd2$var$FocusableContext) || {};\n  $6nfFC$useSyncRef(context, ref);\n  var _ = context.ref,\n    otherProps = _objectWithoutProperties(context, _excluded);\n  return otherProps;\n}\nfunction $e6afbd83fe6ebbd2$var$FocusableProvider(props, ref) {\n  var children = props.children,\n    otherProps = _objectWithoutProperties(props, _excluded2);\n  var context = _objectSpread(_objectSpread({}, otherProps), {}, {\n    ref: ref\n  });\n  return $6nfFC$react.createElement($e6afbd83fe6ebbd2$var$FocusableContext.Provider, {\n    value: context\n  }, children);\n}\nvar $e6afbd83fe6ebbd2$export$13f3202a3e5ddd5 = $6nfFC$react.forwardRef($e6afbd83fe6ebbd2$var$FocusableProvider);\nfunction $e6afbd83fe6ebbd2$export$4c014de7c8940b4c(props, domRef) {\n  var _$6nfFC$useFocus2 = $6nfFC$useFocus(props),\n    focusProps = _$6nfFC$useFocus2.focusProps;\n  var _$6nfFC$useKeyboard = $6nfFC$useKeyboard(props),\n    keyboardProps = _$6nfFC$useKeyboard.keyboardProps;\n  var interactions = $6nfFC$mergeProps(focusProps, keyboardProps);\n  var domProps = $e6afbd83fe6ebbd2$var$useFocusableContext(domRef);\n  var interactionProps = props.isDisabled ? {} : domProps;\n  var autoFocusRef = $6nfFC$useRef(props.autoFocus);\n  $6nfFC$useEffect(function () {\n    if (autoFocusRef.current && domRef.current) $6a99195332edec8b$export$80f3e147d781571c(domRef.current);\n    autoFocusRef.current = false;\n  }, [domRef]);\n  return {\n    focusableProps: $6nfFC$mergeProps(_objectSpread(_objectSpread({}, interactions), {}, {\n      tabIndex: props.excludeFromTabOrder && !props.isDisabled ? -1 : undefined\n    }), interactionProps)\n  };\n}\nexport { $9bf71ea28793e738$export$20e40289641fbbb6 as FocusScope, $9bf71ea28793e738$export$10c5169755ce7bd7 as useFocusManager, $9bf71ea28793e738$export$2d6ec8fc375ceafa as getFocusableTreeWalker, $9bf71ea28793e738$export$c5251b9e124bf29 as createFocusManager, $9bf71ea28793e738$export$1258395f99bf9cbf as isElementInChildOfActiveScope, $907718708eab68af$export$1a38b4ad7f578e1d as FocusRing, $e6afbd83fe6ebbd2$export$13f3202a3e5ddd5 as FocusableProvider, $e6afbd83fe6ebbd2$export$4c014de7c8940b4c as useFocusable, $f7dceffc5ad7768b$export$4e328f61c538687f as useFocusRing, $6a99195332edec8b$export$80f3e147d781571c as focusSafely };","map":{"version":3,"mappings":"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","names":["$6a99195332edec8b$export$80f3e147d781571c","element","$6nfFC$getInteractionModality","lastFocusedElement","document","activeElement","$6nfFC$runAfterTransition","contains","$6nfFC$focusWithoutScrolling","$645f2e67b85a24c9$var$isStyleVisible","HTMLElement","SVGElement","style","display","visibility","isVisible","getComputedStyle","ownerDocument","defaultView","computedDisplay","computedVisibility","$645f2e67b85a24c9$var$isAttributeVisible","childElement","hasAttribute","nodeName","$645f2e67b85a24c9$export$e989c0fffaa6b27a","parentElement","$9bf71ea28793e738$var$FocusContext","$6nfFC$react","createContext","$9bf71ea28793e738$var$activeScope","$9bf71ea28793e738$export$20e40289641fbbb6","props","children","contain","restoreFocus","autoFocus","startRef","$6nfFC$useRef","endRef","scopeRef","ctx","$6nfFC$useContext","ref","ctxParent","parentScope1","$6nfFC$useMemo","$9bf71ea28793e738$export$d06fae2ee68b101e","getTreeNode","$9bf71ea28793e738$var$isAncestorScope","$6nfFC$useLayoutEffect","node","current","nextSibling","nodes","push","addTreeNode","node1","$9bf71ea28793e738$var$useActiveScopeTracker","$9bf71ea28793e738$var$useFocusContainment","$9bf71ea28793e738$var$useRestoreFocus","$9bf71ea28793e738$var$useAutoFocus","parentScope","parent","removeTreeNode","focusManager","$9bf71ea28793e738$var$createFocusManagerForScope","Provider","value","hidden","$9bf71ea28793e738$export$10c5169755ce7bd7","focusNext","opts","scope","from","tabbable","wrap","accept","sentinel","previousElementSibling","walker","$9bf71ea28793e738$export$2d6ec8fc375ceafa","$9bf71ea28793e738$var$getScopeRoot","currentNode","$9bf71ea28793e738$var$isElementInScope","nextNode","$9bf71ea28793e738$var$focusElement","focusPrevious","length","nextElementSibling","previousNode","focusFirst","focusLast","$9bf71ea28793e738$var$focusableElements","$9bf71ea28793e738$var$FOCUSABLE_ELEMENT_SELECTOR","join","$9bf71ea28793e738$var$TABBABLE_ELEMENT_SELECTOR","$9bf71ea28793e738$var$shouldContainFocus","focusedNode","raf","scope1","cancelAnimationFrame","onKeyDown","e","key","altKey","ctrlKey","metaKey","focusedElement","nextElement","shiftKey","preventDefault","onFocus","target","$9bf71ea28793e738$var$isElementInChildScope","focus","$9bf71ea28793e738$var$focusFirstInScope","onBlur","requestAnimationFrame","body","addEventListener","forEach","removeEventListener","$6nfFC$useEffect","$9bf71ea28793e738$var$isElementInAnyScope","some","traverse","s","$9bf71ea28793e738$export$1258395f99bf9cbf","ancestor","scroll","err","err1","autoFocusRef","useRef","restore","$9bf71ea28793e738$var$shouldRestoreFocus","nodeToRestore","nodeToRestoreRef","stopPropagation","blur","clonedTree","clone","treeNode","root","selector","createTreeWalker","NodeFilter","SHOW_ELEMENT","acceptNode","FILTER_REJECT","matches","FILTER_ACCEPT","FILTER_SKIP","$9bf71ea28793e738$export$c5251b9e124bf29","defaultOptions","next","$9bf71ea28793e738$var$last","last","lastChild","$9bf71ea28793e738$var$Tree","fastMap","Map","$9bf71ea28793e738$var$TreeNode","set","size","data","get","parentNode","addChild","removeChild","child","delete","newTree","splice","indexOf","undefined","$f7dceffc5ad7768b$export$4e328f61c538687f","isTextInput","within","state","isFocused","isFocusVisible","$6nfFC$isFocusVisible","$6nfFC$useState","isFocused1","setFocused","isFocusVisibleState","setFocusVisible","updateState","$6nfFC$useCallback","onFocusChange","$6nfFC$useFocusVisibleListener","$6nfFC$useFocus","isDisabled","focusProps","$6nfFC$useFocusWithin","onFocusWithinChange","focusWithinProps","$907718708eab68af$export$1a38b4ad7f578e1d","focusClass","focusRingClass","Children","only","cloneElement","$6nfFC$mergeProps","className","$6nfFC$clsx","$e6afbd83fe6ebbd2$var$FocusableContext","$e6afbd83fe6ebbd2$var$useFocusableContext","context","$6nfFC$useSyncRef","_","otherProps","$e6afbd83fe6ebbd2$var$FocusableProvider","$e6afbd83fe6ebbd2$export$13f3202a3e5ddd5","forwardRef","$e6afbd83fe6ebbd2$export$4c014de7c8940b4c","domRef","$6nfFC$useKeyboard","keyboardProps","interactions","domProps","interactionProps","focusableProps","tabIndex","excludeFromTabOrder"],"sources":["packages/@react-aria/focus/src/focusSafely.ts","packages/@react-aria/focus/src/isElementVisible.ts","packages/@react-aria/focus/src/FocusScope.tsx","packages/@react-aria/focus/src/useFocusRing.ts","packages/@react-aria/focus/src/FocusRing.tsx","packages/@react-aria/focus/src/useFocusable.tsx"],"sourcesContent":["/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the 'License');\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an 'AS IS' BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {FocusableElement} from '@react-types/shared';\nimport {focusWithoutScrolling, runAfterTransition} from '@react-aria/utils';\nimport {getInteractionModality} from '@react-aria/interactions';\n\n/**\n * A utility function that focuses an element while avoiding undesired side effects such\n * as page scrolling and screen reader issues with CSS transitions.\n */\nexport function focusSafely(element: FocusableElement) {\n  // If the user is interacting with a virtual cursor, e.g. screen reader, then\n  // wait until after any animated transitions that are currently occurring on\n  // the page before shifting focus. This avoids issues with VoiceOver on iOS\n  // causing the page to scroll when moving focus if the element is transitioning\n  // from off the screen.\n  if (getInteractionModality() === 'virtual') {\n    let lastFocusedElement = document.activeElement;\n    runAfterTransition(() => {\n      // If focus did not move and the element is still in the document, focus it.\n      if (document.activeElement === lastFocusedElement && document.contains(element)) {\n        focusWithoutScrolling(element);\n      }\n    });\n  } else {\n    focusWithoutScrolling(element);\n  }\n}\n","/*\n * Copyright 2021 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nfunction isStyleVisible(element: Element) {\n  if (!(element instanceof HTMLElement) && !(element instanceof SVGElement)) {\n    return false;\n  }\n\n  let {display, visibility} = element.style;\n\n  let isVisible = (\n    display !== 'none' &&\n    visibility !== 'hidden' &&\n    visibility !== 'collapse'\n  );\n\n  if (isVisible) {\n    const {getComputedStyle} = element.ownerDocument.defaultView;\n    let {display: computedDisplay, visibility: computedVisibility} = getComputedStyle(element);\n\n    isVisible = (\n      computedDisplay !== 'none' &&\n      computedVisibility !== 'hidden' &&\n      computedVisibility !== 'collapse'\n    );\n  }\n\n  return isVisible;\n}\n\nfunction isAttributeVisible(element: Element, childElement?: Element) {\n  return (\n    !element.hasAttribute('hidden') &&\n    (element.nodeName === 'DETAILS' &&\n      childElement &&\n      childElement.nodeName !== 'SUMMARY'\n      ? element.hasAttribute('open')\n      : true)\n  );\n}\n\n/**\n * Adapted from https://github.com/testing-library/jest-dom and \n * https://github.com/vuejs/vue-test-utils-next/.\n * Licensed under the MIT License.\n * @param element - Element to evaluate for display or visibility.\n */  \nexport function isElementVisible(element: Element, childElement?: Element) {\n  return (\n    element.nodeName !== '#comment' &&\n    isStyleVisible(element) &&\n    isAttributeVisible(element, childElement) &&\n    (!element.parentElement || isElementVisible(element.parentElement, element))\n  );\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {FocusableElement} from '@react-types/shared';\nimport {focusSafely} from './focusSafely';\nimport {isElementVisible} from './isElementVisible';\nimport React, {ReactNode, RefObject, useContext, useEffect, useMemo, useRef} from 'react';\nimport {useLayoutEffect} from '@react-aria/utils';\n\n\nexport interface FocusScopeProps {\n  /** The contents of the focus scope. */\n  children: ReactNode,\n\n  /**\n   * Whether to contain focus inside the scope, so users cannot\n   * move focus outside, for example in a modal dialog.\n   */\n  contain?: boolean,\n\n  /**\n   * Whether to restore focus back to the element that was focused\n   * when the focus scope mounted, after the focus scope unmounts.\n   */\n  restoreFocus?: boolean,\n\n  /** Whether to auto focus the first focusable element in the focus scope on mount. */\n  autoFocus?: boolean\n}\n\nexport interface FocusManagerOptions {\n  /** The element to start searching from. The currently focused element by default. */\n  from?: Element,\n  /** Whether to only include tabbable elements, or all focusable elements. */\n  tabbable?: boolean,\n  /** Whether focus should wrap around when it reaches the end of the scope. */\n  wrap?: boolean,\n  /** A callback that determines whether the given element is focused. */\n  accept?: (node: Element) => boolean\n}\n\nexport interface FocusManager {\n  /** Moves focus to the next focusable or tabbable element in the focus scope. */\n  focusNext(opts?: FocusManagerOptions): FocusableElement,\n  /** Moves focus to the previous focusable or tabbable element in the focus scope. */\n  focusPrevious(opts?: FocusManagerOptions): FocusableElement,\n  /** Moves focus to the first focusable or tabbable element in the focus scope. */\n  focusFirst(opts?: FocusManagerOptions): FocusableElement,\n    /** Moves focus to the last focusable or tabbable element in the focus scope. */\n  focusLast(opts?: FocusManagerOptions): FocusableElement\n}\n\ntype ScopeRef = RefObject<Element[]>;\ninterface IFocusContext {\n  scopeRef: ScopeRef,\n  focusManager: FocusManager\n}\n\nconst FocusContext = React.createContext<IFocusContext>(null);\n\nlet activeScope: ScopeRef = null;\n\n// This is a hacky DOM-based implementation of a FocusScope until this RFC lands in React:\n// https://github.com/reactjs/rfcs/pull/109\n\n/**\n * A FocusScope manages focus for its descendants. It supports containing focus inside\n * the scope, restoring focus to the previously focused element on unmount, and auto\n * focusing children on mount. It also acts as a container for a programmatic focus\n * management interface that can be used to move focus forward and back in response\n * to user events.\n */\nexport function FocusScope(props: FocusScopeProps) {\n  let {children, contain, restoreFocus, autoFocus} = props;\n  let startRef = useRef<HTMLSpanElement>();\n  let endRef = useRef<HTMLSpanElement>();\n  let scopeRef = useRef<Element[]>([]);\n  let ctx = useContext(FocusContext);\n\n  // The parent scope is based on the JSX tree, using context.\n  // However, if a new scope mounts outside the active scope (e.g. DialogContainer launched from a menu),\n  // we want the parent scope to be the active scope instead.\n  let ctxParent = ctx?.scopeRef ?? null;\n  let parentScope = useMemo(() => activeScope && focusScopeTree.getTreeNode(activeScope) && !isAncestorScope(activeScope, ctxParent) ? activeScope : ctxParent, [ctxParent]);\n\n  useLayoutEffect(() => {\n    // Find all rendered nodes between the sentinels and add them to the scope.\n    let node = startRef.current.nextSibling;\n    let nodes = [];\n    while (node && node !== endRef.current) {\n      nodes.push(node);\n      node = node.nextSibling;\n    }\n\n    scopeRef.current = nodes;\n  }, [children, parentScope]);\n\n  // add to the focus scope tree in render order because useEffects/useLayoutEffects run children first whereas render runs parent first\n  // which matters when constructing a tree\n  if (focusScopeTree.getTreeNode(parentScope) && !focusScopeTree.getTreeNode(scopeRef)) {\n    focusScopeTree.addTreeNode(scopeRef, parentScope);\n  }\n\n  let node = focusScopeTree.getTreeNode(scopeRef);\n  node.contain = contain;\n\n  useActiveScopeTracker(scopeRef, restoreFocus, contain);\n  useFocusContainment(scopeRef, contain);\n  useRestoreFocus(scopeRef, restoreFocus, contain);\n  useAutoFocus(scopeRef, autoFocus);\n\n  // this layout effect needs to run last so that focusScopeTree cleanup happens at the last moment possible\n  useLayoutEffect(() => {\n    if (scopeRef) {\n      return () => {\n        // Scope may have been re-parented.\n        let parentScope = focusScopeTree.getTreeNode(scopeRef).parent.scopeRef;\n\n        // Restore the active scope on unmount if this scope or a descendant scope is active.\n        // Parent effect cleanups run before children, so we need to check if the\n        // parent scope actually still exists before restoring the active scope to it.\n        if (\n          (scopeRef === activeScope || isAncestorScope(scopeRef, activeScope)) &&\n          (!parentScope || focusScopeTree.getTreeNode(parentScope))\n        ) {\n          activeScope = parentScope;\n        }\n        focusScopeTree.removeTreeNode(scopeRef);\n      };\n    }\n  }, [scopeRef, parentScope]);\n\n  let focusManager = createFocusManagerForScope(scopeRef);\n\n  return (\n    <FocusContext.Provider value={{scopeRef, focusManager}}>\n      <span data-focus-scope-start hidden ref={startRef} />\n      {children}\n      <span data-focus-scope-end hidden ref={endRef} />\n    </FocusContext.Provider>\n  );\n}\n\n/**\n * Returns a FocusManager interface for the parent FocusScope.\n * A FocusManager can be used to programmatically move focus within\n * a FocusScope, e.g. in response to user events like keyboard navigation.\n */\nexport function useFocusManager(): FocusManager {\n  return useContext(FocusContext)?.focusManager;\n}\n\nfunction createFocusManagerForScope(scopeRef: React.RefObject<Element[]>): FocusManager {\n  return {\n    focusNext(opts: FocusManagerOptions = {}) {\n      let scope = scopeRef.current;\n      let {from, tabbable, wrap, accept} = opts;\n      let node = from || document.activeElement;\n      let sentinel = scope[0].previousElementSibling;\n      let walker = getFocusableTreeWalker(getScopeRoot(scope), {tabbable, accept}, scope);\n      walker.currentNode = isElementInScope(node, scope) ? node : sentinel;\n      let nextNode = walker.nextNode() as FocusableElement;\n      if (!nextNode && wrap) {\n        walker.currentNode = sentinel;\n        nextNode = walker.nextNode() as FocusableElement;\n      }\n      if (nextNode) {\n        focusElement(nextNode, true);\n      }\n      return nextNode;\n    },\n    focusPrevious(opts: FocusManagerOptions = {}) {\n      let scope = scopeRef.current;\n      let {from, tabbable, wrap, accept} = opts;\n      let node = from || document.activeElement;\n      let sentinel = scope[scope.length - 1].nextElementSibling;\n      let walker = getFocusableTreeWalker(getScopeRoot(scope), {tabbable, accept}, scope);\n      walker.currentNode = isElementInScope(node, scope) ? node : sentinel;\n      let previousNode = walker.previousNode() as FocusableElement;\n      if (!previousNode && wrap) {\n        walker.currentNode = sentinel;\n        previousNode = walker.previousNode() as FocusableElement;\n      }\n      if (previousNode) {\n        focusElement(previousNode, true);\n      }\n      return previousNode;\n    },\n    focusFirst(opts = {}) {\n      let scope = scopeRef.current;\n      let {tabbable, accept} = opts;\n      let walker = getFocusableTreeWalker(getScopeRoot(scope), {tabbable, accept}, scope);\n      walker.currentNode = scope[0].previousElementSibling;\n      let nextNode = walker.nextNode() as FocusableElement;\n      if (nextNode) {\n        focusElement(nextNode, true);\n      }\n      return nextNode;\n    },\n    focusLast(opts = {}) {\n      let scope = scopeRef.current;\n      let {tabbable, accept} = opts;\n      let walker = getFocusableTreeWalker(getScopeRoot(scope), {tabbable, accept}, scope);\n      walker.currentNode = scope[scope.length - 1].nextElementSibling;\n      let previousNode = walker.previousNode() as FocusableElement;\n      if (previousNode) {\n        focusElement(previousNode, true);\n      }\n      return previousNode;\n    }\n  };\n}\n\nconst focusableElements = [\n  'input:not([disabled]):not([type=hidden])',\n  'select:not([disabled])',\n  'textarea:not([disabled])',\n  'button:not([disabled])',\n  'a[href]',\n  'area[href]',\n  'summary',\n  'iframe',\n  'object',\n  'embed',\n  'audio[controls]',\n  'video[controls]',\n  '[contenteditable]'\n];\n\nconst FOCUSABLE_ELEMENT_SELECTOR = focusableElements.join(':not([hidden]),') + ',[tabindex]:not([disabled]):not([hidden])';\n\nfocusableElements.push('[tabindex]:not([tabindex=\"-1\"]):not([disabled])');\nconst TABBABLE_ELEMENT_SELECTOR = focusableElements.join(':not([hidden]):not([tabindex=\"-1\"]),');\n\nfunction getScopeRoot(scope: Element[]) {\n  return scope[0].parentElement;\n}\n\nfunction shouldContainFocus(scopeRef: ScopeRef) {\n  let scope = focusScopeTree.getTreeNode(activeScope);\n  while (scope && scope.scopeRef !== scopeRef) {\n    if (scope.contain) {\n      return false;\n    }\n\n    scope = scope.parent;\n  }\n\n  return true;\n}\n\nfunction useFocusContainment(scopeRef: RefObject<Element[]>, contain: boolean) {\n  let focusedNode = useRef<FocusableElement>();\n\n  let raf = useRef(null);\n  useLayoutEffect(() => {\n    let scope = scopeRef.current;\n    if (!contain) {\n      // if contain was changed, then we should cancel any ongoing waits to pull focus back into containment\n      if (raf.current) {\n        cancelAnimationFrame(raf.current);\n        raf.current = null;\n      }\n      return;\n    }\n\n    // Handle the Tab key to contain focus within the scope\n    let onKeyDown = (e) => {\n      if (e.key !== 'Tab' || e.altKey || e.ctrlKey || e.metaKey || !shouldContainFocus(scopeRef)) {\n        return;\n      }\n\n      let focusedElement = document.activeElement;\n      let scope = scopeRef.current;\n      if (!isElementInScope(focusedElement, scope)) {\n        return;\n      }\n\n      let walker = getFocusableTreeWalker(getScopeRoot(scope), {tabbable: true}, scope);\n      walker.currentNode = focusedElement;\n      let nextElement = (e.shiftKey ? walker.previousNode() : walker.nextNode()) as FocusableElement;\n      if (!nextElement) {\n        walker.currentNode = e.shiftKey ? scope[scope.length - 1].nextElementSibling : scope[0].previousElementSibling;\n        nextElement = (e.shiftKey ? walker.previousNode() : walker.nextNode())  as FocusableElement;\n      }\n\n      e.preventDefault();\n      if (nextElement) {\n        focusElement(nextElement, true);\n      }\n    };\n\n    let onFocus = (e) => {\n      // If focusing an element in a child scope of the currently active scope, the child becomes active.\n      // Moving out of the active scope to an ancestor is not allowed.\n      if ((!activeScope || isAncestorScope(activeScope, scopeRef)) && isElementInScope(e.target, scopeRef.current)) {\n        activeScope = scopeRef;\n        focusedNode.current = e.target;\n      } else if (shouldContainFocus(scopeRef) && !isElementInChildScope(e.target, scopeRef)) {\n        // If a focus event occurs outside the active scope (e.g. user tabs from browser location bar),\n        // restore focus to the previously focused node or the first tabbable element in the active scope.\n        if (focusedNode.current) {\n          focusedNode.current.focus();\n        } else if (activeScope) {\n          focusFirstInScope(activeScope.current);\n        }\n      } else if (shouldContainFocus(scopeRef)) {\n        focusedNode.current = e.target;\n      }\n    };\n\n    let onBlur = (e) => {\n      // Firefox doesn't shift focus back to the Dialog properly without this\n      raf.current = requestAnimationFrame(() => {\n        // Use document.activeElement instead of e.relatedTarget so we can tell if user clicked into iframe\n        if (shouldContainFocus(scopeRef) && !isElementInChildScope(document.activeElement, scopeRef)) {\n          activeScope = scopeRef;\n          if (document.body.contains(e.target)) {\n            focusedNode.current = e.target;\n            focusedNode.current.focus();\n          } else if (activeScope) {\n            focusFirstInScope(activeScope.current);\n          }\n        }\n      });\n    };\n\n    document.addEventListener('keydown', onKeyDown, false);\n    document.addEventListener('focusin', onFocus, false);\n    scope.forEach(element => element.addEventListener('focusin', onFocus, false));\n    scope.forEach(element => element.addEventListener('focusout', onBlur, false));\n    return () => {\n      document.removeEventListener('keydown', onKeyDown, false);\n      document.removeEventListener('focusin', onFocus, false);\n      scope.forEach(element => element.removeEventListener('focusin', onFocus, false));\n      scope.forEach(element => element.removeEventListener('focusout', onBlur, false));\n    };\n  }, [scopeRef, contain]);\n\n  // eslint-disable-next-line arrow-body-style\n  useEffect(() => {\n    return () => {\n      if (raf.current) {\n        cancelAnimationFrame(raf.current);\n      }\n    };\n  }, [raf]);\n}\n\nfunction isElementInAnyScope(element: Element) {\n  return isElementInChildScope(element);\n}\n\nfunction isElementInScope(element: Element, scope: Element[]) {\n  return scope.some(node => node.contains(element));\n}\n\nfunction isElementInChildScope(element: Element, scope: ScopeRef = null) {\n  // node.contains in isElementInScope covers child scopes that are also DOM children,\n  // but does not cover child scopes in portals.\n  for (let {scopeRef: s} of focusScopeTree.traverse(focusScopeTree.getTreeNode(scope))) {\n    if (isElementInScope(element, s.current)) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\n/** @private */\nexport function isElementInChildOfActiveScope(element: Element) {\n  return isElementInChildScope(element, activeScope);\n}\n\nfunction isAncestorScope(ancestor: ScopeRef, scope: ScopeRef) {\n  let parent = focusScopeTree.getTreeNode(scope)?.parent;\n  while (parent) {\n    if (parent.scopeRef === ancestor) {\n      return true;\n    }\n    parent = parent.parent;\n  }\n  return false;\n}\n\nfunction focusElement(element: FocusableElement | null, scroll = false) {\n  if (element != null && !scroll) {\n    try {\n      focusSafely(element);\n    } catch (err) {\n      // ignore\n    }\n  } else if (element != null) {\n    try {\n      element.focus();\n    } catch (err) {\n      // ignore\n    }\n  }\n}\n\nfunction focusFirstInScope(scope: Element[], tabbable:boolean = true) {\n  let sentinel = scope[0].previousElementSibling;\n  let walker = getFocusableTreeWalker(getScopeRoot(scope), {tabbable}, scope);\n  walker.currentNode = sentinel;\n  let nextNode = walker.nextNode();\n\n  // If the scope does not contain a tabbable element, use the first focusable element.\n  if (tabbable && !nextNode) {\n    walker = getFocusableTreeWalker(getScopeRoot(scope), {tabbable: false}, scope);\n    walker.currentNode = sentinel;\n    nextNode = walker.nextNode();\n  }\n\n  focusElement(nextNode as FocusableElement);\n}\n\nfunction useAutoFocus(scopeRef: RefObject<Element[]>, autoFocus: boolean) {\n  const autoFocusRef = React.useRef(autoFocus);\n  useEffect(() => {\n    if (autoFocusRef.current) {\n      activeScope = scopeRef;\n      if (!isElementInScope(document.activeElement, activeScope.current)) {\n        focusFirstInScope(scopeRef.current);\n      }\n    }\n    autoFocusRef.current = false;\n  }, [scopeRef]);\n}\n\nfunction useActiveScopeTracker(scopeRef: RefObject<Element[]>, restore: boolean, contain: boolean) {\n  // tracks the active scope, in case restore and contain are both false.\n  // if either are true, this is tracked in useRestoreFocus or useFocusContainment.\n  useLayoutEffect(() => {\n    if (restore || contain) {\n      return;\n    }\n\n    let scope = scopeRef.current;\n\n    let onFocus = (e: FocusEvent) => {\n      let target = e.target as Element;\n      if (isElementInScope(target, scopeRef.current)) {\n        activeScope = scopeRef;\n      } else if (!isElementInAnyScope(target)) {\n        activeScope = null;\n      }\n    };\n\n    document.addEventListener('focusin', onFocus, false);\n    scope.forEach(element => element.addEventListener('focusin', onFocus, false));\n    return () => {\n      document.removeEventListener('focusin', onFocus, false);\n      scope.forEach(element => element.removeEventListener('focusin', onFocus, false));\n    };\n  }, [scopeRef, restore, contain]);\n}\n\nfunction shouldRestoreFocus(scopeRef: ScopeRef) {\n  let scope = focusScopeTree.getTreeNode(activeScope);\n  while (scope && scope.scopeRef !== scopeRef) {\n    if (scope.nodeToRestore) {\n      return false;\n    }\n\n    scope = scope.parent;\n  }\n\n  return scope?.scopeRef === scopeRef;\n}\n\nfunction useRestoreFocus(scopeRef: RefObject<Element[]>, restoreFocus: boolean, contain: boolean) {\n  // create a ref during render instead of useLayoutEffect so the active element is saved before a child with autoFocus=true mounts.\n  const nodeToRestoreRef = useRef(typeof document !== 'undefined' ? document.activeElement as FocusableElement : null);\n\n  // restoring scopes should all track if they are active regardless of contain, but contain already tracks it plus logic to contain the focus\n  // restoring-non-containing scopes should only care if they become active so they can perform the restore\n  useLayoutEffect(() => {\n    let scope = scopeRef.current;\n    if (!restoreFocus || contain) {\n      return;\n    }\n\n    let onFocus = () => {\n      // If focusing an element in a child scope of the currently active scope, the child becomes active.\n      // Moving out of the active scope to an ancestor is not allowed.\n      if (!activeScope || isAncestorScope(activeScope, scopeRef)) {\n        activeScope = scopeRef;\n      }\n    };\n\n    document.addEventListener('focusin', onFocus, false);\n    scope.forEach(element => element.addEventListener('focusin', onFocus, false));\n    return () => {\n      document.removeEventListener('focusin', onFocus, false);\n      scope.forEach(element => element.removeEventListener('focusin', onFocus, false));\n    };\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [scopeRef, contain]);\n\n  // useLayoutEffect instead of useEffect so the active element is saved synchronously instead of asynchronously.\n  useLayoutEffect(() => {\n    if (!restoreFocus) {\n      return;\n    }\n\n    focusScopeTree.getTreeNode(scopeRef).nodeToRestore = nodeToRestoreRef.current;\n\n    // Handle the Tab key so that tabbing out of the scope goes to the next element\n    // after the node that had focus when the scope mounted. This is important when\n    // using portals for overlays, so that focus goes to the expected element when\n    // tabbing out of the overlay.\n    let onKeyDown = (e: KeyboardEvent) => {\n      if (e.key !== 'Tab' || e.altKey || e.ctrlKey || e.metaKey) {\n        return;\n      }\n\n      let focusedElement = document.activeElement as FocusableElement;\n      if (!isElementInScope(focusedElement, scopeRef.current)) {\n        return;\n      }\n      let nodeToRestore = focusScopeTree.getTreeNode(scopeRef).nodeToRestore;\n\n      // Create a DOM tree walker that matches all tabbable elements\n      let walker = getFocusableTreeWalker(document.body, {tabbable: true});\n\n      // Find the next tabbable element after the currently focused element\n      walker.currentNode = focusedElement;\n      let nextElement = (e.shiftKey ? walker.previousNode() : walker.nextNode()) as FocusableElement;\n\n      if (!document.body.contains(nodeToRestore) || nodeToRestore === document.body) {\n        nodeToRestore = null;\n        focusScopeTree.getTreeNode(scopeRef).nodeToRestore = null;\n      }\n\n      // If there is no next element, or it is outside the current scope, move focus to the\n      // next element after the node to restore to instead.\n      if ((!nextElement || !isElementInScope(nextElement, scopeRef.current)) && nodeToRestore) {\n        walker.currentNode = nodeToRestore;\n\n        // Skip over elements within the scope, in case the scope immediately follows the node to restore.\n        do {\n          nextElement = (e.shiftKey ? walker.previousNode() : walker.nextNode()) as FocusableElement;\n        } while (isElementInScope(nextElement, scopeRef.current));\n\n        e.preventDefault();\n        e.stopPropagation();\n        if (nextElement) {\n          focusElement(nextElement, true);\n        } else {\n           // If there is no next element and the nodeToRestore isn't within a FocusScope (i.e. we are leaving the top level focus scope)\n           // then move focus to the body.\n           // Otherwise restore focus to the nodeToRestore (e.g menu within a popover -> tabbing to close the menu should move focus to menu trigger)\n          if (!isElementInAnyScope(nodeToRestore)) {\n            focusedElement.blur();\n          } else {\n            focusElement(nodeToRestore, true);\n          }\n        }\n      }\n    };\n\n    if (!contain) {\n      document.addEventListener('keydown', onKeyDown, true);\n    }\n\n    return () => {\n      if (!contain) {\n        document.removeEventListener('keydown', onKeyDown, true);\n      }\n      let nodeToRestore = focusScopeTree.getTreeNode(scopeRef).nodeToRestore;\n\n      // if we already lost focus to the body and this was the active scope, then we should attempt to restore\n      if (\n        restoreFocus\n        && nodeToRestore\n        && (\n          // eslint-disable-next-line react-hooks/exhaustive-deps\n          isElementInScope(document.activeElement, scopeRef.current)\n          || (document.activeElement === document.body && shouldRestoreFocus(scopeRef))\n        )\n      ) {\n        // freeze the focusScopeTree so it persists after the raf, otherwise during unmount nodes are removed from it\n        let clonedTree = focusScopeTree.clone();\n        requestAnimationFrame(() => {\n          // Only restore focus if we've lost focus to the body, the alternative is that focus has been purposefully moved elsewhere\n          if (document.activeElement === document.body) {\n            // look up the tree starting with our scope to find a nodeToRestore still in the DOM\n            let treeNode = clonedTree.getTreeNode(scopeRef);\n            while (treeNode) {\n              if (treeNode.nodeToRestore && document.body.contains(treeNode.nodeToRestore)) {\n                focusElement(treeNode.nodeToRestore);\n                return;\n              }\n              treeNode = treeNode.parent;\n            }\n\n            // If no nodeToRestore was found, focus the first element in the nearest\n            // ancestor scope that is still in the tree.\n            treeNode = clonedTree.getTreeNode(scopeRef);\n            while (treeNode) {\n              if (treeNode.scopeRef && focusScopeTree.getTreeNode(treeNode.scopeRef)) {\n                focusFirstInScope(treeNode.scopeRef.current, true);\n                return;\n              }\n              treeNode = treeNode.parent;\n            }\n          }\n        });\n      }\n    };\n  }, [scopeRef, restoreFocus, contain]);\n}\n\n/**\n * Create a [TreeWalker]{@link https://developer.mozilla.org/en-US/docs/Web/API/TreeWalker}\n * that matches all focusable/tabbable elements.\n */\nexport function getFocusableTreeWalker(root: Element, opts?: FocusManagerOptions, scope?: Element[]) {\n  let selector = opts?.tabbable ? TABBABLE_ELEMENT_SELECTOR : FOCUSABLE_ELEMENT_SELECTOR;\n  let walker = document.createTreeWalker(\n    root,\n    NodeFilter.SHOW_ELEMENT,\n    {\n      acceptNode(node) {\n        // Skip nodes inside the starting node.\n        if (opts?.from?.contains(node)) {\n          return NodeFilter.FILTER_REJECT;\n        }\n\n        if ((node as Element).matches(selector)\n          && isElementVisible(node as Element)\n          && (!scope || isElementInScope(node as Element, scope))\n          && (!opts?.accept || opts.accept(node as Element))\n        ) {\n          return NodeFilter.FILTER_ACCEPT;\n        }\n\n        return NodeFilter.FILTER_SKIP;\n      }\n    }\n  );\n\n  if (opts?.from) {\n    walker.currentNode = opts.from;\n  }\n\n  return walker;\n}\n\n/**\n * Creates a FocusManager object that can be used to move focus within an element.\n */\nexport function createFocusManager(ref: RefObject<Element>, defaultOptions: FocusManagerOptions = {}): FocusManager {\n  return {\n    focusNext(opts: FocusManagerOptions = {}) {\n      let root = ref.current;\n      if (!root) {\n        return;\n      }\n      let {from, tabbable = defaultOptions.tabbable, wrap = defaultOptions.wrap, accept = defaultOptions.accept} = opts;\n      let node = from || document.activeElement;\n      let walker = getFocusableTreeWalker(root, {tabbable, accept});\n      if (root.contains(node)) {\n        walker.currentNode = node;\n      }\n      let nextNode = walker.nextNode() as FocusableElement;\n      if (!nextNode && wrap) {\n        walker.currentNode = root;\n        nextNode = walker.nextNode() as FocusableElement;\n      }\n      if (nextNode) {\n        focusElement(nextNode, true);\n      }\n      return nextNode;\n    },\n    focusPrevious(opts: FocusManagerOptions = defaultOptions) {\n      let root = ref.current;\n      if (!root) {\n        return;\n      }\n      let {from, tabbable = defaultOptions.tabbable, wrap = defaultOptions.wrap, accept = defaultOptions.accept} = opts;\n      let node = from || document.activeElement;\n      let walker = getFocusableTreeWalker(root, {tabbable, accept});\n      if (root.contains(node)) {\n        walker.currentNode = node;\n      } else {\n        let next = last(walker);\n        if (next) {\n          focusElement(next, true);\n        }\n        return next;\n      }\n      let previousNode = walker.previousNode() as FocusableElement;\n      if (!previousNode && wrap) {\n        walker.currentNode = root;\n        previousNode = last(walker);\n      }\n      if (previousNode) {\n        focusElement(previousNode, true);\n      }\n      return previousNode;\n    },\n    focusFirst(opts = defaultOptions) {\n      let root = ref.current;\n      if (!root) {\n        return;\n      }\n      let {tabbable = defaultOptions.tabbable, accept = defaultOptions.accept} = opts;\n      let walker = getFocusableTreeWalker(root, {tabbable, accept});\n      let nextNode = walker.nextNode() as FocusableElement;\n      if (nextNode) {\n        focusElement(nextNode, true);\n      }\n      return nextNode;\n    },\n    focusLast(opts = defaultOptions) {\n      let root = ref.current;\n      if (!root) {\n        return;\n      }\n      let {tabbable = defaultOptions.tabbable, accept = defaultOptions.accept} = opts;\n      let walker = getFocusableTreeWalker(root, {tabbable, accept});\n      let next = last(walker);\n      if (next) {\n        focusElement(next, true);\n      }\n      return next;\n    }\n  };\n}\n\nfunction last(walker: TreeWalker) {\n  let next: FocusableElement;\n  let last: FocusableElement;\n  do {\n    last = walker.lastChild() as FocusableElement;\n    if (last) {\n      next = last;\n    }\n  } while (last);\n  return next;\n}\n\n\nclass Tree {\n  private root: TreeNode;\n  private fastMap = new Map<ScopeRef, TreeNode>();\n\n  constructor() {\n    this.root = new TreeNode({scopeRef: null});\n    this.fastMap.set(null, this.root);\n  }\n\n  get size() {\n    return this.fastMap.size;\n  }\n\n  getTreeNode(data: ScopeRef) {\n    return this.fastMap.get(data);\n  }\n\n  addTreeNode(scopeRef: ScopeRef, parent: ScopeRef, nodeToRestore?: FocusableElement) {\n    let parentNode = this.fastMap.get(parent ?? null);\n    let node = new TreeNode({scopeRef});\n    parentNode.addChild(node);\n    node.parent = parentNode;\n    this.fastMap.set(scopeRef, node);\n    if (nodeToRestore) {\n      node.nodeToRestore = nodeToRestore;\n    }\n  }\n\n  removeTreeNode(scopeRef: ScopeRef) {\n    // never remove the root\n    if (scopeRef === null) {\n      return;\n    }\n    let node = this.fastMap.get(scopeRef);\n    let parentNode = node.parent;\n    // when we remove a scope, check if any sibling scopes are trying to restore focus to something inside the scope we're removing\n    // if we are, then replace the siblings restore with the restore from the scope we're removing\n    for (let current of this.traverse()) {\n      if (\n        current !== node &&\n        node.nodeToRestore &&\n        current.nodeToRestore &&\n        node.scopeRef.current &&\n        isElementInScope(current.nodeToRestore, node.scopeRef.current)\n      ) {\n        current.nodeToRestore = node.nodeToRestore;\n      }\n    }\n    let children = node.children;\n    parentNode.removeChild(node);\n    if (children.length > 0) {\n      children.forEach(child => parentNode.addChild(child));\n    }\n    this.fastMap.delete(node.scopeRef);\n  }\n\n  // Pre Order Depth First\n  *traverse(node: TreeNode = this.root): Generator<TreeNode> {\n    if (node.scopeRef != null) {\n      yield node;\n    }\n    if (node.children.length > 0) {\n      for (let child of node.children) {\n        yield* this.traverse(child);\n      }\n    }\n  }\n\n  clone(): Tree {\n    let newTree = new Tree();\n    for (let node of this.traverse()) {\n      newTree.addTreeNode(node.scopeRef, node.parent.scopeRef, node.nodeToRestore);\n    }\n    return newTree;\n  }\n}\n\nclass TreeNode {\n  public scopeRef: ScopeRef;\n  public nodeToRestore: FocusableElement;\n  public parent: TreeNode;\n  public children: TreeNode[] = [];\n  public contain = false;\n\n  constructor(props: {scopeRef: ScopeRef}) {\n    this.scopeRef = props.scopeRef;\n  }\n  addChild(node: TreeNode) {\n    this.children.push(node);\n    node.parent = this;\n  }\n  removeChild(node: TreeNode) {\n    this.children.splice(this.children.indexOf(node), 1);\n    node.parent = undefined;\n  }\n}\n\nexport let focusScopeTree = new Tree();\n","import {DOMAttributes} from '@react-types/shared';\nimport {isFocusVisible, useFocus, useFocusVisibleListener, useFocusWithin} from '@react-aria/interactions';\nimport {useCallback, useState} from 'react';\nimport {useRef} from 'react';\n\nexport interface AriaFocusRingProps {\n  /**\n   * Whether to show the focus ring when something\n   * inside the container element has focus (true), or\n   * only if the container itself has focus (false).\n   * @default 'false'\n   */\n  within?: boolean,\n\n  /** Whether the element is a text input. */\n  isTextInput?: boolean,\n\n  /** Whether the element will be auto focused. */\n  autoFocus?: boolean\n}\n\nexport interface FocusRingAria {\n  /** Whether the element is currently focused. */\n  isFocused: boolean,\n\n  /** Whether keyboard focus should be visible. */\n  isFocusVisible: boolean,\n\n  /** Props to apply to the container element with the focus ring. */\n  focusProps: DOMAttributes\n}\n\n/**\n * Determines whether a focus ring should be shown to indicate keyboard focus.\n * Focus rings are visible only when the user is interacting with a keyboard,\n * not with a mouse, touch, or other input methods.\n */\nexport function useFocusRing(props: AriaFocusRingProps = {}): FocusRingAria {\n  let {\n    autoFocus = false,\n    isTextInput,\n    within\n  } = props;\n  let state = useRef({\n    isFocused: false,\n    isFocusVisible: autoFocus || isFocusVisible()\n  });\n  let [isFocused, setFocused] = useState(false);\n  let [isFocusVisibleState, setFocusVisible] = useState(() => state.current.isFocused && state.current.isFocusVisible);\n\n  let updateState = useCallback(() => setFocusVisible(state.current.isFocused && state.current.isFocusVisible), []);\n\n  let onFocusChange = useCallback(isFocused => {\n    state.current.isFocused = isFocused;\n    setFocused(isFocused);\n    updateState();\n  }, [updateState]);\n\n  useFocusVisibleListener((isFocusVisible) => {\n    state.current.isFocusVisible = isFocusVisible;\n    updateState();\n  }, [], {isTextInput});\n\n  let {focusProps} = useFocus({\n    isDisabled: within,\n    onFocusChange\n  });\n\n  let {focusWithinProps} = useFocusWithin({\n    isDisabled: !within,\n    onFocusWithinChange: onFocusChange\n  });\n\n  return {\n    isFocused,\n    isFocusVisible: state.current.isFocused && isFocusVisibleState,\n    focusProps: within ? focusWithinProps : focusProps\n  };\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport clsx from 'clsx';\nimport {mergeProps} from '@react-aria/utils';\nimport React, {ReactElement} from 'react';\nimport {useFocusRing} from './useFocusRing';\n\nexport interface FocusRingProps {\n  /** Child element to apply CSS classes to. */\n  children: ReactElement,\n  /** CSS class to apply when the element is focused. */\n  focusClass?: string,\n  /** CSS class to apply when the element has keyboard focus. */\n  focusRingClass?: string,\n  /**\n   * Whether to show the focus ring when something\n   * inside the container element has focus (true), or\n   * only if the container itself has focus (false).\n   * @default false\n   */\n  within?: boolean,\n  /** Whether the element is a text input. */\n  isTextInput?: boolean,\n  /** Whether the element will be auto focused. */\n  autoFocus?: boolean\n}\n\n/**\n * A utility component that applies a CSS class when an element has keyboard focus.\n * Focus rings are visible only when the user is interacting with a keyboard,\n * not with a mouse, touch, or other input methods.\n */\nexport function FocusRing(props: FocusRingProps) {\n  let {children, focusClass, focusRingClass} = props;\n  let {isFocused, isFocusVisible, focusProps} = useFocusRing(props);\n  let child = React.Children.only(children);\n\n  return React.cloneElement(child, mergeProps(child.props, {\n    ...focusProps,\n    className: clsx({\n      [focusClass || '']: isFocused,\n      [focusRingClass || '']: isFocusVisible\n    })\n  }));\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {DOMAttributes, FocusableDOMProps, FocusableElement, FocusableProps} from '@react-types/shared';\nimport {focusSafely} from './';\nimport {mergeProps, useSyncRef} from '@react-aria/utils';\nimport React, {MutableRefObject, ReactNode, RefObject, useContext, useEffect, useRef} from 'react';\nimport {useFocus, useKeyboard} from '@react-aria/interactions';\n\nexport interface FocusableOptions extends FocusableProps, FocusableDOMProps {\n  /** Whether focus should be disabled. */\n  isDisabled?: boolean\n}\n\nexport interface FocusableProviderProps extends DOMAttributes {\n  /** The child element to provide DOM props to. */\n  children?: ReactNode\n}\n\ninterface FocusableContextValue extends FocusableProviderProps {\n  ref?: MutableRefObject<FocusableElement>\n}\n\nlet FocusableContext = React.createContext<FocusableContextValue>(null);\n\nfunction useFocusableContext(ref: RefObject<FocusableElement>): FocusableContextValue {\n  let context = useContext(FocusableContext) || {};\n  useSyncRef(context, ref);\n\n  // eslint-disable-next-line\n  let {ref: _, ...otherProps} = context;\n  return otherProps;\n}\n\n/**\n * Provides DOM props to the nearest focusable child.\n */\nfunction FocusableProvider(props: FocusableProviderProps, ref: RefObject<FocusableElement>) {\n  let {children, ...otherProps} = props;\n  let context = {\n    ...otherProps,\n    ref\n  };\n\n  return (\n    <FocusableContext.Provider value={context}>\n      {children}\n    </FocusableContext.Provider>\n  );\n}\n\nlet _FocusableProvider = React.forwardRef(FocusableProvider);\nexport {_FocusableProvider as FocusableProvider};\n\nexport interface FocusableAria {\n  /** Props for the focusable element. */\n  focusableProps: DOMAttributes\n}\n\n/**\n * Used to make an element focusable and capable of auto focus.\n */\nexport function useFocusable(props: FocusableOptions, domRef: RefObject<FocusableElement>): FocusableAria {\n  let {focusProps} = useFocus(props);\n  let {keyboardProps} = useKeyboard(props);\n  let interactions = mergeProps(focusProps, keyboardProps);\n  let domProps = useFocusableContext(domRef);\n  let interactionProps = props.isDisabled ? {} : domProps;\n  let autoFocusRef = useRef(props.autoFocus);\n\n  useEffect(() => {\n    if (autoFocusRef.current && domRef.current) {\n      focusSafely(domRef.current);\n    }\n    autoFocusRef.current = false;\n  }, [domRef]);\n\n  return {\n    focusableProps: mergeProps(\n      {\n        ...interactions,\n        tabIndex: props.excludeFromTabOrder && !props.isDisabled ? -1 : undefined\n      },\n      interactionProps\n    )\n  };\n}\n"]},"metadata":{},"sourceType":"module"}